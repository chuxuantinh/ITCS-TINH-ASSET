//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ThietBiPY.BaoCao_ThongKe.dataset {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ds_thanhlythietbi")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ds_thanhlythietbi : global::System.Data.DataSet {
        
        private THANHLYDataTable tableTHANHLY;
        
        private CTTHANHLYDataTable tableCTTHANHLY;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ds_thanhlythietbi() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ds_thanhlythietbi(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["THANHLY"] != null)) {
                    base.Tables.Add(new THANHLYDataTable(ds.Tables["THANHLY"]));
                }
                if ((ds.Tables["CTTHANHLY"] != null)) {
                    base.Tables.Add(new CTTHANHLYDataTable(ds.Tables["CTTHANHLY"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public THANHLYDataTable THANHLY {
            get {
                return this.tableTHANHLY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CTTHANHLYDataTable CTTHANHLY {
            get {
                return this.tableCTTHANHLY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ds_thanhlythietbi cln = ((ds_thanhlythietbi)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["THANHLY"] != null)) {
                    base.Tables.Add(new THANHLYDataTable(ds.Tables["THANHLY"]));
                }
                if ((ds.Tables["CTTHANHLY"] != null)) {
                    base.Tables.Add(new CTTHANHLYDataTable(ds.Tables["CTTHANHLY"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTHANHLY = ((THANHLYDataTable)(base.Tables["THANHLY"]));
            if ((initTable == true)) {
                if ((this.tableTHANHLY != null)) {
                    this.tableTHANHLY.InitVars();
                }
            }
            this.tableCTTHANHLY = ((CTTHANHLYDataTable)(base.Tables["CTTHANHLY"]));
            if ((initTable == true)) {
                if ((this.tableCTTHANHLY != null)) {
                    this.tableCTTHANHLY.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ds_thanhlythietbi";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ds_thanhlythietbi.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTHANHLY = new THANHLYDataTable();
            base.Tables.Add(this.tableTHANHLY);
            this.tableCTTHANHLY = new CTTHANHLYDataTable();
            base.Tables.Add(this.tableCTTHANHLY);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTHANHLY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCTTHANHLY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ds_thanhlythietbi ds = new ds_thanhlythietbi();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void THANHLYRowChangeEventHandler(object sender, THANHLYRowChangeEvent e);
        
        public delegate void CTTHANHLYRowChangeEventHandler(object sender, CTTHANHLYRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class THANHLYDataTable : global::System.Data.TypedTableBase<THANHLYRow> {
            
            private global::System.Data.DataColumn columnSoVanBan;
            
            private global::System.Data.DataColumn columnNgayVanBan;
            
            private global::System.Data.DataColumn columnThamQuyenQD;
            
            private global::System.Data.DataColumn columnNgayThanhLy;
            
            private global::System.Data.DataColumn columnDaiDienThanhLy;
            
            private global::System.Data.DataColumn columnChucVuDaiDienThanhLy;
            
            private global::System.Data.DataColumn columnDonViThanhLy;
            
            private global::System.Data.DataColumn columnDaiDienBenMua;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANHLYDataTable() {
                this.TableName = "THANHLY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal THANHLYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected THANHLYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SoVanBanColumn {
                get {
                    return this.columnSoVanBan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NgayVanBanColumn {
                get {
                    return this.columnNgayVanBan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThamQuyenQDColumn {
                get {
                    return this.columnThamQuyenQD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NgayThanhLyColumn {
                get {
                    return this.columnNgayThanhLy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DaiDienThanhLyColumn {
                get {
                    return this.columnDaiDienThanhLy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChucVuDaiDienThanhLyColumn {
                get {
                    return this.columnChucVuDaiDienThanhLy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DonViThanhLyColumn {
                get {
                    return this.columnDonViThanhLy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DaiDienBenMuaColumn {
                get {
                    return this.columnDaiDienBenMua;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANHLYRow this[int index] {
                get {
                    return ((THANHLYRow)(this.Rows[index]));
                }
            }
            
            public event THANHLYRowChangeEventHandler THANHLYRowChanging;
            
            public event THANHLYRowChangeEventHandler THANHLYRowChanged;
            
            public event THANHLYRowChangeEventHandler THANHLYRowDeleting;
            
            public event THANHLYRowChangeEventHandler THANHLYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTHANHLYRow(THANHLYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANHLYRow AddTHANHLYRow(string SoVanBan, string NgayVanBan, string ThamQuyenQD, string NgayThanhLy, string DaiDienThanhLy, string ChucVuDaiDienThanhLy, string DonViThanhLy, string DaiDienBenMua) {
                THANHLYRow rowTHANHLYRow = ((THANHLYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SoVanBan,
                        NgayVanBan,
                        ThamQuyenQD,
                        NgayThanhLy,
                        DaiDienThanhLy,
                        ChucVuDaiDienThanhLy,
                        DonViThanhLy,
                        DaiDienBenMua};
                rowTHANHLYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTHANHLYRow);
                return rowTHANHLYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                THANHLYDataTable cln = ((THANHLYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new THANHLYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSoVanBan = base.Columns["SoVanBan"];
                this.columnNgayVanBan = base.Columns["NgayVanBan"];
                this.columnThamQuyenQD = base.Columns["ThamQuyenQD"];
                this.columnNgayThanhLy = base.Columns["NgayThanhLy"];
                this.columnDaiDienThanhLy = base.Columns["DaiDienThanhLy"];
                this.columnChucVuDaiDienThanhLy = base.Columns["ChucVuDaiDienThanhLy"];
                this.columnDonViThanhLy = base.Columns["DonViThanhLy"];
                this.columnDaiDienBenMua = base.Columns["DaiDienBenMua"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSoVanBan = new global::System.Data.DataColumn("SoVanBan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoVanBan);
                this.columnNgayVanBan = new global::System.Data.DataColumn("NgayVanBan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayVanBan);
                this.columnThamQuyenQD = new global::System.Data.DataColumn("ThamQuyenQD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThamQuyenQD);
                this.columnNgayThanhLy = new global::System.Data.DataColumn("NgayThanhLy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayThanhLy);
                this.columnDaiDienThanhLy = new global::System.Data.DataColumn("DaiDienThanhLy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaiDienThanhLy);
                this.columnChucVuDaiDienThanhLy = new global::System.Data.DataColumn("ChucVuDaiDienThanhLy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChucVuDaiDienThanhLy);
                this.columnDonViThanhLy = new global::System.Data.DataColumn("DonViThanhLy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDonViThanhLy);
                this.columnDaiDienBenMua = new global::System.Data.DataColumn("DaiDienBenMua", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaiDienBenMua);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANHLYRow NewTHANHLYRow() {
                return ((THANHLYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new THANHLYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(THANHLYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.THANHLYRowChanged != null)) {
                    this.THANHLYRowChanged(this, new THANHLYRowChangeEvent(((THANHLYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.THANHLYRowChanging != null)) {
                    this.THANHLYRowChanging(this, new THANHLYRowChangeEvent(((THANHLYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.THANHLYRowDeleted != null)) {
                    this.THANHLYRowDeleted(this, new THANHLYRowChangeEvent(((THANHLYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.THANHLYRowDeleting != null)) {
                    this.THANHLYRowDeleting(this, new THANHLYRowChangeEvent(((THANHLYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTHANHLYRow(THANHLYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_thanhlythietbi ds = new ds_thanhlythietbi();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "THANHLYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CTTHANHLYDataTable : global::System.Data.TypedTableBase<CTTHANHLYRow> {
            
            private global::System.Data.DataColumn columnMaThietBi;
            
            private global::System.Data.DataColumn columnSoHieu;
            
            private global::System.Data.DataColumn columnTenThietBi;
            
            private global::System.Data.DataColumn columnDonViTinh;
            
            private global::System.Data.DataColumn columnMaCaBiet;
            
            private global::System.Data.DataColumn columnGiaTriThanhLy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CTTHANHLYDataTable() {
                this.TableName = "CTTHANHLY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CTTHANHLYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CTTHANHLYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaThietBiColumn {
                get {
                    return this.columnMaThietBi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SoHieuColumn {
                get {
                    return this.columnSoHieu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenThietBiColumn {
                get {
                    return this.columnTenThietBi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DonViTinhColumn {
                get {
                    return this.columnDonViTinh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaCaBietColumn {
                get {
                    return this.columnMaCaBiet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GiaTriThanhLyColumn {
                get {
                    return this.columnGiaTriThanhLy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CTTHANHLYRow this[int index] {
                get {
                    return ((CTTHANHLYRow)(this.Rows[index]));
                }
            }
            
            public event CTTHANHLYRowChangeEventHandler CTTHANHLYRowChanging;
            
            public event CTTHANHLYRowChangeEventHandler CTTHANHLYRowChanged;
            
            public event CTTHANHLYRowChangeEventHandler CTTHANHLYRowDeleting;
            
            public event CTTHANHLYRowChangeEventHandler CTTHANHLYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCTTHANHLYRow(CTTHANHLYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CTTHANHLYRow AddCTTHANHLYRow(string MaThietBi, string SoHieu, string TenThietBi, string DonViTinh, string MaCaBiet, string GiaTriThanhLy) {
                CTTHANHLYRow rowCTTHANHLYRow = ((CTTHANHLYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MaThietBi,
                        SoHieu,
                        TenThietBi,
                        DonViTinh,
                        MaCaBiet,
                        GiaTriThanhLy};
                rowCTTHANHLYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCTTHANHLYRow);
                return rowCTTHANHLYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CTTHANHLYDataTable cln = ((CTTHANHLYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CTTHANHLYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaThietBi = base.Columns["MaThietBi"];
                this.columnSoHieu = base.Columns["SoHieu"];
                this.columnTenThietBi = base.Columns["TenThietBi"];
                this.columnDonViTinh = base.Columns["DonViTinh"];
                this.columnMaCaBiet = base.Columns["MaCaBiet"];
                this.columnGiaTriThanhLy = base.Columns["GiaTriThanhLy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaThietBi = new global::System.Data.DataColumn("MaThietBi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaThietBi);
                this.columnSoHieu = new global::System.Data.DataColumn("SoHieu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoHieu);
                this.columnTenThietBi = new global::System.Data.DataColumn("TenThietBi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenThietBi);
                this.columnDonViTinh = new global::System.Data.DataColumn("DonViTinh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDonViTinh);
                this.columnMaCaBiet = new global::System.Data.DataColumn("MaCaBiet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaCaBiet);
                this.columnGiaTriThanhLy = new global::System.Data.DataColumn("GiaTriThanhLy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGiaTriThanhLy);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CTTHANHLYRow NewCTTHANHLYRow() {
                return ((CTTHANHLYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CTTHANHLYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CTTHANHLYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CTTHANHLYRowChanged != null)) {
                    this.CTTHANHLYRowChanged(this, new CTTHANHLYRowChangeEvent(((CTTHANHLYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CTTHANHLYRowChanging != null)) {
                    this.CTTHANHLYRowChanging(this, new CTTHANHLYRowChangeEvent(((CTTHANHLYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CTTHANHLYRowDeleted != null)) {
                    this.CTTHANHLYRowDeleted(this, new CTTHANHLYRowChangeEvent(((CTTHANHLYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CTTHANHLYRowDeleting != null)) {
                    this.CTTHANHLYRowDeleting(this, new CTTHANHLYRowChangeEvent(((CTTHANHLYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCTTHANHLYRow(CTTHANHLYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_thanhlythietbi ds = new ds_thanhlythietbi();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CTTHANHLYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class THANHLYRow : global::System.Data.DataRow {
            
            private THANHLYDataTable tableTHANHLY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal THANHLYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTHANHLY = ((THANHLYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SoVanBan {
                get {
                    try {
                        return ((string)(this[this.tableTHANHLY.SoVanBanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SoVanBan\' in table \'THANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHANHLY.SoVanBanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NgayVanBan {
                get {
                    try {
                        return ((string)(this[this.tableTHANHLY.NgayVanBanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NgayVanBan\' in table \'THANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHANHLY.NgayVanBanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThamQuyenQD {
                get {
                    try {
                        return ((string)(this[this.tableTHANHLY.ThamQuyenQDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThamQuyenQD\' in table \'THANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHANHLY.ThamQuyenQDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NgayThanhLy {
                get {
                    try {
                        return ((string)(this[this.tableTHANHLY.NgayThanhLyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NgayThanhLy\' in table \'THANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHANHLY.NgayThanhLyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DaiDienThanhLy {
                get {
                    try {
                        return ((string)(this[this.tableTHANHLY.DaiDienThanhLyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DaiDienThanhLy\' in table \'THANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHANHLY.DaiDienThanhLyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChucVuDaiDienThanhLy {
                get {
                    try {
                        return ((string)(this[this.tableTHANHLY.ChucVuDaiDienThanhLyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChucVuDaiDienThanhLy\' in table \'THANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHANHLY.ChucVuDaiDienThanhLyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DonViThanhLy {
                get {
                    try {
                        return ((string)(this[this.tableTHANHLY.DonViThanhLyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DonViThanhLy\' in table \'THANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHANHLY.DonViThanhLyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DaiDienBenMua {
                get {
                    try {
                        return ((string)(this[this.tableTHANHLY.DaiDienBenMuaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DaiDienBenMua\' in table \'THANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHANHLY.DaiDienBenMuaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoVanBanNull() {
                return this.IsNull(this.tableTHANHLY.SoVanBanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoVanBanNull() {
                this[this.tableTHANHLY.SoVanBanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayVanBanNull() {
                return this.IsNull(this.tableTHANHLY.NgayVanBanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayVanBanNull() {
                this[this.tableTHANHLY.NgayVanBanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThamQuyenQDNull() {
                return this.IsNull(this.tableTHANHLY.ThamQuyenQDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThamQuyenQDNull() {
                this[this.tableTHANHLY.ThamQuyenQDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayThanhLyNull() {
                return this.IsNull(this.tableTHANHLY.NgayThanhLyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayThanhLyNull() {
                this[this.tableTHANHLY.NgayThanhLyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDaiDienThanhLyNull() {
                return this.IsNull(this.tableTHANHLY.DaiDienThanhLyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDaiDienThanhLyNull() {
                this[this.tableTHANHLY.DaiDienThanhLyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChucVuDaiDienThanhLyNull() {
                return this.IsNull(this.tableTHANHLY.ChucVuDaiDienThanhLyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChucVuDaiDienThanhLyNull() {
                this[this.tableTHANHLY.ChucVuDaiDienThanhLyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDonViThanhLyNull() {
                return this.IsNull(this.tableTHANHLY.DonViThanhLyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDonViThanhLyNull() {
                this[this.tableTHANHLY.DonViThanhLyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDaiDienBenMuaNull() {
                return this.IsNull(this.tableTHANHLY.DaiDienBenMuaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDaiDienBenMuaNull() {
                this[this.tableTHANHLY.DaiDienBenMuaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CTTHANHLYRow : global::System.Data.DataRow {
            
            private CTTHANHLYDataTable tableCTTHANHLY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CTTHANHLYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCTTHANHLY = ((CTTHANHLYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaThietBi {
                get {
                    try {
                        return ((string)(this[this.tableCTTHANHLY.MaThietBiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaThietBi\' in table \'CTTHANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTTHANHLY.MaThietBiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SoHieu {
                get {
                    try {
                        return ((string)(this[this.tableCTTHANHLY.SoHieuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SoHieu\' in table \'CTTHANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTTHANHLY.SoHieuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenThietBi {
                get {
                    try {
                        return ((string)(this[this.tableCTTHANHLY.TenThietBiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenThietBi\' in table \'CTTHANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTTHANHLY.TenThietBiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DonViTinh {
                get {
                    try {
                        return ((string)(this[this.tableCTTHANHLY.DonViTinhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DonViTinh\' in table \'CTTHANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTTHANHLY.DonViTinhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaCaBiet {
                get {
                    try {
                        return ((string)(this[this.tableCTTHANHLY.MaCaBietColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaCaBiet\' in table \'CTTHANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTTHANHLY.MaCaBietColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GiaTriThanhLy {
                get {
                    try {
                        return ((string)(this[this.tableCTTHANHLY.GiaTriThanhLyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GiaTriThanhLy\' in table \'CTTHANHLY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTTHANHLY.GiaTriThanhLyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaThietBiNull() {
                return this.IsNull(this.tableCTTHANHLY.MaThietBiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaThietBiNull() {
                this[this.tableCTTHANHLY.MaThietBiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoHieuNull() {
                return this.IsNull(this.tableCTTHANHLY.SoHieuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoHieuNull() {
                this[this.tableCTTHANHLY.SoHieuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenThietBiNull() {
                return this.IsNull(this.tableCTTHANHLY.TenThietBiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenThietBiNull() {
                this[this.tableCTTHANHLY.TenThietBiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDonViTinhNull() {
                return this.IsNull(this.tableCTTHANHLY.DonViTinhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDonViTinhNull() {
                this[this.tableCTTHANHLY.DonViTinhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaCaBietNull() {
                return this.IsNull(this.tableCTTHANHLY.MaCaBietColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaCaBietNull() {
                this[this.tableCTTHANHLY.MaCaBietColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGiaTriThanhLyNull() {
                return this.IsNull(this.tableCTTHANHLY.GiaTriThanhLyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGiaTriThanhLyNull() {
                this[this.tableCTTHANHLY.GiaTriThanhLyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class THANHLYRowChangeEvent : global::System.EventArgs {
            
            private THANHLYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANHLYRowChangeEvent(THANHLYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANHLYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CTTHANHLYRowChangeEvent : global::System.EventArgs {
            
            private CTTHANHLYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CTTHANHLYRowChangeEvent(CTTHANHLYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CTTHANHLYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591