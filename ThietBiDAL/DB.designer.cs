#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThietBiDAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="ThietBiPY")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertNUOC(NUOC instance);
    partial void UpdateNUOC(NUOC instance);
    partial void DeleteNUOC(NUOC instance);
    partial void InsertTINH(TINH instance);
    partial void UpdateTINH(TINH instance);
    partial void DeleteTINH(TINH instance);
    partial void InsertDONVITINH(DONVITINH instance);
    partial void UpdateDONVITINH(DONVITINH instance);
    partial void DeleteDONVITINH(DONVITINH instance);
    partial void InsertNHATKITRUYCAP(NHATKITRUYCAP instance);
    partial void UpdateNHATKITRUYCAP(NHATKITRUYCAP instance);
    partial void DeleteNHATKITRUYCAP(NHATKITRUYCAP instance);
    partial void InsertNHOMTHIETBI(NHOMTHIETBI instance);
    partial void UpdateNHOMTHIETBI(NHOMTHIETBI instance);
    partial void DeleteNHOMTHIETBI(NHOMTHIETBI instance);
    partial void InsertLOAITHIETBI(LOAITHIETBI instance);
    partial void UpdateLOAITHIETBI(LOAITHIETBI instance);
    partial void DeleteLOAITHIETBI(LOAITHIETBI instance);
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    partial void InsertDONVI(DONVI instance);
    partial void UpdateDONVI(DONVI instance);
    partial void DeleteDONVI(DONVI instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHUTUNG(PHUTUNG instance);
    partial void UpdatePHUTUNG(PHUTUNG instance);
    partial void DeletePHUTUNG(PHUTUNG instance);
    partial void InsertBOPHAN(BOPHAN instance);
    partial void UpdateBOPHAN(BOPHAN instance);
    partial void DeleteBOPHAN(BOPHAN instance);
    partial void InsertTHIETBI(THIETBI instance);
    partial void UpdateTHIETBI(THIETBI instance);
    partial void DeleteTHIETBI(THIETBI instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertCTPHIEUNHAP(CTPHIEUNHAP instance);
    partial void UpdateCTPHIEUNHAP(CTPHIEUNHAP instance);
    partial void DeleteCTPHIEUNHAP(CTPHIEUNHAP instance);
    partial void InsertPHIEUNHAP(PHIEUNHAP instance);
    partial void UpdatePHIEUNHAP(PHIEUNHAP instance);
    partial void DeletePHIEUNHAP(PHIEUNHAP instance);
    partial void InsertNGUOIDUNG(NGUOIDUNG instance);
    partial void UpdateNGUOIDUNG(NGUOIDUNG instance);
    partial void DeleteNGUOIDUNG(NGUOIDUNG instance);
    partial void InsertTYLEHAOMON(TYLEHAOMON instance);
    partial void UpdateTYLEHAOMON(TYLEHAOMON instance);
    partial void DeleteTYLEHAOMON(TYLEHAOMON instance);
    partial void InsertCTBANGIAO(CTBANGIAO instance);
    partial void UpdateCTBANGIAO(CTBANGIAO instance);
    partial void DeleteCTBANGIAO(CTBANGIAO instance);
    partial void InsertBANGIAO(BANGIAO instance);
    partial void UpdateBANGIAO(BANGIAO instance);
    partial void DeleteBANGIAO(BANGIAO instance);
    partial void InsertTHANHLY(THANHLY instance);
    partial void UpdateTHANHLY(THANHLY instance);
    partial void DeleteTHANHLY(THANHLY instance);
    partial void InsertTHUHOI(THUHOI instance);
    partial void UpdateTHUHOI(THUHOI instance);
    partial void DeleteTHUHOI(THUHOI instance);
    partial void InsertCTTHUHOI(CTTHUHOI instance);
    partial void UpdateCTTHUHOI(CTTHUHOI instance);
    partial void DeleteCTTHUHOI(CTTHUHOI instance);
    partial void InsertDAIDIENKIEMKE(DAIDIENKIEMKE instance);
    partial void UpdateDAIDIENKIEMKE(DAIDIENKIEMKE instance);
    partial void DeleteDAIDIENKIEMKE(DAIDIENKIEMKE instance);
    partial void InsertKIEMKE(KIEMKE instance);
    partial void UpdateKIEMKE(KIEMKE instance);
    partial void DeleteKIEMKE(KIEMKE instance);
    partial void InsertGTTHIETBI(GTTHIETBI instance);
    partial void UpdateGTTHIETBI(GTTHIETBI instance);
    partial void DeleteGTTHIETBI(GTTHIETBI instance);
    partial void InsertSOTHEODOI(SOTHEODOI instance);
    partial void UpdateSOTHEODOI(SOTHEODOI instance);
    partial void DeleteSOTHEODOI(SOTHEODOI instance);
    partial void InsertTINHTRANG(TINHTRANG instance);
    partial void UpdateTINHTRANG(TINHTRANG instance);
    partial void DeleteTINHTRANG(TINHTRANG instance);
    partial void InsertCTTHANHLY(CTTHANHLY instance);
    partial void UpdateCTTHANHLY(CTTHANHLY instance);
    partial void DeleteCTTHANHLY(CTTHANHLY instance);
    partial void InsertCTKIEMKE(CTKIEMKE instance);
    partial void UpdateCTKIEMKE(CTKIEMKE instance);
    partial void DeleteCTKIEMKE(CTKIEMKE instance);
    #endregion

    public DBDataContext() :
        base("Data Source=" + HETHONGDAL.Server + ";Initial Catalog=" + HETHONGDAL.dataBase + ";Persist Security Info=True;" +
                      (HETHONGDAL.userName != "" ? ("User ID=" + HETHONGDAL.userName + ";Password=" + HETHONGDAL.passWord) : "Trusted_Connection=True;"), mappingSource)
    {
        OnCreated();
    }
 
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<NUOC> NUOCs
		{
			get
			{
				return this.GetTable<NUOC>();
			}
		}
		
		public System.Data.Linq.Table<TINH> TINHs
		{
			get
			{
				return this.GetTable<TINH>();
			}
		}
		
		public System.Data.Linq.Table<DONVITINH> DONVITINHs
		{
			get
			{
				return this.GetTable<DONVITINH>();
			}
		}
		
		public System.Data.Linq.Table<NHATKITRUYCAP> NHATKITRUYCAPs
		{
			get
			{
				return this.GetTable<NHATKITRUYCAP>();
			}
		}
		
		public System.Data.Linq.Table<NHOMTHIETBI> NHOMTHIETBIs
		{
			get
			{
				return this.GetTable<NHOMTHIETBI>();
			}
		}
		
		public System.Data.Linq.Table<LOAITHIETBI> LOAITHIETBIs
		{
			get
			{
				return this.GetTable<LOAITHIETBI>();
			}
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<DONVI> DONVIs
		{
			get
			{
				return this.GetTable<DONVI>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHUTUNG> PHUTUNGs
		{
			get
			{
				return this.GetTable<PHUTUNG>();
			}
		}
		
		public System.Data.Linq.Table<BOPHAN> BOPHANs
		{
			get
			{
				return this.GetTable<BOPHAN>();
			}
		}
		
		public System.Data.Linq.Table<THIETBI> THIETBIs
		{
			get
			{
				return this.GetTable<THIETBI>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<CTPHIEUNHAP> CTPHIEUNHAPs
		{
			get
			{
				return this.GetTable<CTPHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this.GetTable<PHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this.GetTable<NGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<TYLEHAOMON> TYLEHAOMONs
		{
			get
			{
				return this.GetTable<TYLEHAOMON>();
			}
		}
		
		public System.Data.Linq.Table<CTBANGIAO> CTBANGIAOs
		{
			get
			{
				return this.GetTable<CTBANGIAO>();
			}
		}
		
		public System.Data.Linq.Table<BANGIAO> BANGIAOs
		{
			get
			{
				return this.GetTable<BANGIAO>();
			}
		}
		
		public System.Data.Linq.Table<THANHLY> THANHLies
		{
			get
			{
				return this.GetTable<THANHLY>();
			}
		}
		
		public System.Data.Linq.Table<THUHOI> THUHOIs
		{
			get
			{
				return this.GetTable<THUHOI>();
			}
		}
		
		public System.Data.Linq.Table<CTTHUHOI> CTTHUHOIs
		{
			get
			{
				return this.GetTable<CTTHUHOI>();
			}
		}
		
		public System.Data.Linq.Table<DAIDIENKIEMKE> DAIDIENKIEMKEs
		{
			get
			{
				return this.GetTable<DAIDIENKIEMKE>();
			}
		}
		
		public System.Data.Linq.Table<KIEMKE> KIEMKEs
		{
			get
			{
				return this.GetTable<KIEMKE>();
			}
		}
		
		public System.Data.Linq.Table<GTTHIETBI> GTTHIETBIs
		{
			get
			{
				return this.GetTable<GTTHIETBI>();
			}
		}
		
		public System.Data.Linq.Table<SOTHEODOI> SOTHEODOIs
		{
			get
			{
				return this.GetTable<SOTHEODOI>();
			}
		}
		
		public System.Data.Linq.Table<TINHTRANG> TINHTRANGs
		{
			get
			{
				return this.GetTable<TINHTRANG>();
			}
		}
		
		public System.Data.Linq.Table<CTTHANHLY> CTTHANHLies
		{
			get
			{
				return this.GetTable<CTTHANHLY>();
			}
		}
		
		public System.Data.Linq.Table<CTKIEMKE> CTKIEMKEs
		{
			get
			{
				return this.GetTable<CTKIEMKE>();
			}
		}
		
		[Function(Name="dbo.SOTHEODOI_DONVI")]
		public ISingleResult<SOTHEODOI_DONVIResult> SOTHEODOI_DONVI([Parameter(Name="DonViSD", DbType="Int")] System.Nullable<int> donViSD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), donViSD);
			return ((ISingleResult<SOTHEODOI_DONVIResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.PRO_THONGKE_DONVI")]
		public ISingleResult<PRO_THONGKE_DONVIResult> PRO_THONGKE_DONVI()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<PRO_THONGKE_DONVIResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SOTHEODOI_DONVI_BOPHAN_THIETBI")]
		public ISingleResult<SOTHEODOI_DONVI_BOPHAN_THIETBIResult> SOTHEODOI_DONVI_BOPHAN_THIETBI([Parameter(Name="DonViID", DbType="Int")] System.Nullable<int> donViID, [Parameter(Name="BoPhanID", DbType="Int")] System.Nullable<int> boPhanID, [Parameter(Name="ThietBiID", DbType="BigInt")] System.Nullable<long> thietBiID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), donViID, boPhanID, thietBiID);
			return ((ISingleResult<SOTHEODOI_DONVI_BOPHAN_THIETBIResult>)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.NUOC")]
	public partial class NUOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NuocID;
		
		private string _TenNuoc;
		
		private EntitySet<TINH> _TINHs;
		
		private EntitySet<PHUTUNG> _PHUTUNGs;
		
		private EntitySet<THIETBI> _THIETBIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNuocIDChanging(int value);
    partial void OnNuocIDChanged();
    partial void OnTenNuocChanging(string value);
    partial void OnTenNuocChanged();
    #endregion
		
		public NUOC()
		{
			this._TINHs = new EntitySet<TINH>(new Action<TINH>(this.attach_TINHs), new Action<TINH>(this.detach_TINHs));
			this._PHUTUNGs = new EntitySet<PHUTUNG>(new Action<PHUTUNG>(this.attach_PHUTUNGs), new Action<PHUTUNG>(this.detach_PHUTUNGs));
			this._THIETBIs = new EntitySet<THIETBI>(new Action<THIETBI>(this.attach_THIETBIs), new Action<THIETBI>(this.detach_THIETBIs));
			OnCreated();
		}
		
		[Column(Storage="_NuocID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NuocID
		{
			get
			{
				return this._NuocID;
			}
			set
			{
				if ((this._NuocID != value))
				{
					this.OnNuocIDChanging(value);
					this.SendPropertyChanging();
					this._NuocID = value;
					this.SendPropertyChanged("NuocID");
					this.OnNuocIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenNuoc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNuoc
		{
			get
			{
				return this._TenNuoc;
			}
			set
			{
				if ((this._TenNuoc != value))
				{
					this.OnTenNuocChanging(value);
					this.SendPropertyChanging();
					this._TenNuoc = value;
					this.SendPropertyChanged("TenNuoc");
					this.OnTenNuocChanged();
				}
			}
		}
		
		[Association(Name="NUOC_TINH", Storage="_TINHs", OtherKey="NuocID")]
		public EntitySet<TINH> TINHs
		{
			get
			{
				return this._TINHs;
			}
			set
			{
				this._TINHs.Assign(value);
			}
		}
		
		[Association(Name="NUOC_PHUTUNG", Storage="_PHUTUNGs", OtherKey="NuocSX")]
		public EntitySet<PHUTUNG> PHUTUNGs
		{
			get
			{
				return this._PHUTUNGs;
			}
			set
			{
				this._PHUTUNGs.Assign(value);
			}
		}
		
		[Association(Name="NUOC_THIETBI", Storage="_THIETBIs", OtherKey="NuocSX")]
		public EntitySet<THIETBI> THIETBIs
		{
			get
			{
				return this._THIETBIs;
			}
			set
			{
				this._THIETBIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TINHs(TINH entity)
		{
			this.SendPropertyChanging();
			entity.NUOC = this;
		}
		
		private void detach_TINHs(TINH entity)
		{
			this.SendPropertyChanging();
			entity.NUOC = null;
		}
		
		private void attach_PHUTUNGs(PHUTUNG entity)
		{
			this.SendPropertyChanging();
			entity.NUOC = this;
		}
		
		private void detach_PHUTUNGs(PHUTUNG entity)
		{
			this.SendPropertyChanging();
			entity.NUOC = null;
		}
		
		private void attach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.NUOC = this;
		}
		
		private void detach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.NUOC = null;
		}
	}
	
	[Table(Name="dbo.TINH")]
	public partial class TINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TinhID;
		
		private string _TenTinh;
		
		private int _NuocID;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<NHACUNGCAP> _NHACUNGCAPs;
		
		private EntityRef<NUOC> _NUOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTinhIDChanging(int value);
    partial void OnTinhIDChanged();
    partial void OnTenTinhChanging(string value);
    partial void OnTenTinhChanged();
    partial void OnNuocIDChanging(int value);
    partial void OnNuocIDChanged();
    #endregion
		
		public TINH()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._NHACUNGCAPs = new EntitySet<NHACUNGCAP>(new Action<NHACUNGCAP>(this.attach_NHACUNGCAPs), new Action<NHACUNGCAP>(this.detach_NHACUNGCAPs));
			this._NUOC = default(EntityRef<NUOC>);
			OnCreated();
		}
		
		[Column(Storage="_TinhID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TinhID
		{
			get
			{
				return this._TinhID;
			}
			set
			{
				if ((this._TinhID != value))
				{
					this.OnTinhIDChanging(value);
					this.SendPropertyChanging();
					this._TinhID = value;
					this.SendPropertyChanged("TinhID");
					this.OnTinhIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenTinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TenTinh
		{
			get
			{
				return this._TenTinh;
			}
			set
			{
				if ((this._TenTinh != value))
				{
					this.OnTenTinhChanging(value);
					this.SendPropertyChanging();
					this._TenTinh = value;
					this.SendPropertyChanged("TenTinh");
					this.OnTenTinhChanged();
				}
			}
		}
		
		[Column(Storage="_NuocID", DbType="Int NOT NULL")]
		public int NuocID
		{
			get
			{
				return this._NuocID;
			}
			set
			{
				if ((this._NuocID != value))
				{
					if (this._NUOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNuocIDChanging(value);
					this.SendPropertyChanging();
					this._NuocID = value;
					this.SendPropertyChanged("NuocID");
					this.OnNuocIDChanged();
				}
			}
		}
		
		[Association(Name="TINH_NHANVIEN", Storage="_NHANVIENs", OtherKey="TinhID")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[Association(Name="TINH_NHACUNGCAP", Storage="_NHACUNGCAPs", OtherKey="TinhID")]
		public EntitySet<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this._NHACUNGCAPs;
			}
			set
			{
				this._NHACUNGCAPs.Assign(value);
			}
		}
		
		[Association(Name="NUOC_TINH", Storage="_NUOC", ThisKey="NuocID", IsForeignKey=true)]
		public NUOC NUOC
		{
			get
			{
				return this._NUOC.Entity;
			}
			set
			{
				NUOC previousValue = this._NUOC.Entity;
				if (((previousValue != value) 
							|| (this._NUOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NUOC.Entity = null;
						previousValue.TINHs.Remove(this);
					}
					this._NUOC.Entity = value;
					if ((value != null))
					{
						value.TINHs.Add(this);
						this._NuocID = value.NuocID;
					}
					else
					{
						this._NuocID = default(int);
					}
					this.SendPropertyChanged("NUOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TINH = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TINH = null;
		}
		
		private void attach_NHACUNGCAPs(NHACUNGCAP entity)
		{
			this.SendPropertyChanging();
			entity.TINH = this;
		}
		
		private void detach_NHACUNGCAPs(NHACUNGCAP entity)
		{
			this.SendPropertyChanging();
			entity.TINH = null;
		}
	}
	
	[Table(Name="dbo.DONVITINH")]
	public partial class DONVITINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DVTID;
		
		private string _TenDVT;
		
		private string _DienGiai;
		
		private EntitySet<PHUTUNG> _PHUTUNGs;
		
		private EntitySet<THIETBI> _THIETBIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDVTIDChanging(int value);
    partial void OnDVTIDChanged();
    partial void OnTenDVTChanging(string value);
    partial void OnTenDVTChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public DONVITINH()
		{
			this._PHUTUNGs = new EntitySet<PHUTUNG>(new Action<PHUTUNG>(this.attach_PHUTUNGs), new Action<PHUTUNG>(this.detach_PHUTUNGs));
			this._THIETBIs = new EntitySet<THIETBI>(new Action<THIETBI>(this.attach_THIETBIs), new Action<THIETBI>(this.detach_THIETBIs));
			OnCreated();
		}
		
		[Column(Storage="_DVTID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DVTID
		{
			get
			{
				return this._DVTID;
			}
			set
			{
				if ((this._DVTID != value))
				{
					this.OnDVTIDChanging(value);
					this.SendPropertyChanging();
					this._DVTID = value;
					this.SendPropertyChanged("DVTID");
					this.OnDVTIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenDVT", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TenDVT
		{
			get
			{
				return this._TenDVT;
			}
			set
			{
				if ((this._TenDVT != value))
				{
					this.OnTenDVTChanging(value);
					this.SendPropertyChanging();
					this._TenDVT = value;
					this.SendPropertyChanged("TenDVT");
					this.OnTenDVTChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiai", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[Association(Name="DONVITINH_PHUTUNG", Storage="_PHUTUNGs", OtherKey="DVTID")]
		public EntitySet<PHUTUNG> PHUTUNGs
		{
			get
			{
				return this._PHUTUNGs;
			}
			set
			{
				this._PHUTUNGs.Assign(value);
			}
		}
		
		[Association(Name="DONVITINH_THIETBI", Storage="_THIETBIs", OtherKey="DVTID")]
		public EntitySet<THIETBI> THIETBIs
		{
			get
			{
				return this._THIETBIs;
			}
			set
			{
				this._THIETBIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHUTUNGs(PHUTUNG entity)
		{
			this.SendPropertyChanging();
			entity.DONVITINH = this;
		}
		
		private void detach_PHUTUNGs(PHUTUNG entity)
		{
			this.SendPropertyChanging();
			entity.DONVITINH = null;
		}
		
		private void attach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.DONVITINH = this;
		}
		
		private void detach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.DONVITINH = null;
		}
	}
	
	[Table(Name="dbo.NHATKITRUYCAP")]
	public partial class NHATKITRUYCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _TruyCapID;
		
		private string _NguoiDung;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private string _Server;
		
		private string _DiaChiMAC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTruyCapIDChanging(long value);
    partial void OnTruyCapIDChanged();
    partial void OnNguoiDungChanging(string value);
    partial void OnNguoiDungChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    partial void OnDiaChiMACChanging(string value);
    partial void OnDiaChiMACChanged();
    #endregion
		
		public NHATKITRUYCAP()
		{
			OnCreated();
		}
		
		[Column(Storage="_TruyCapID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long TruyCapID
		{
			get
			{
				return this._TruyCapID;
			}
			set
			{
				if ((this._TruyCapID != value))
				{
					this.OnTruyCapIDChanging(value);
					this.SendPropertyChanging();
					this._TruyCapID = value;
					this.SendPropertyChanged("TruyCapID");
					this.OnTruyCapIDChanged();
				}
			}
		}
		
		[Column(Storage="_NguoiDung", DbType="NVarChar(20)")]
		public string NguoiDung
		{
			get
			{
				return this._NguoiDung;
			}
			set
			{
				if ((this._NguoiDung != value))
				{
					this.OnNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._NguoiDung = value;
					this.SendPropertyChanged("NguoiDung");
					this.OnNguoiDungChanged();
				}
			}
		}
		
		[Column(Storage="_NoiDung", DbType="NVarChar(MAX) NOT NULL")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[Column(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[Column(Storage="_Server", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChiMAC", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChiMAC
		{
			get
			{
				return this._DiaChiMAC;
			}
			set
			{
				if ((this._DiaChiMAC != value))
				{
					this.OnDiaChiMACChanging(value);
					this.SendPropertyChanging();
					this._DiaChiMAC = value;
					this.SendPropertyChanged("DiaChiMAC");
					this.OnDiaChiMACChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NHOMTHIETBI")]
	public partial class NHOMTHIETBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NhomTBID;
		
		private string _TenNhomTB;
		
		private string _DienGiai;
		
		private EntitySet<LOAITHIETBI> _LOAITHIETBIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNhomTBIDChanging(int value);
    partial void OnNhomTBIDChanged();
    partial void OnTenNhomTBChanging(string value);
    partial void OnTenNhomTBChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public NHOMTHIETBI()
		{
			this._LOAITHIETBIs = new EntitySet<LOAITHIETBI>(new Action<LOAITHIETBI>(this.attach_LOAITHIETBIs), new Action<LOAITHIETBI>(this.detach_LOAITHIETBIs));
			OnCreated();
		}
		
		[Column(Storage="_NhomTBID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NhomTBID
		{
			get
			{
				return this._NhomTBID;
			}
			set
			{
				if ((this._NhomTBID != value))
				{
					this.OnNhomTBIDChanging(value);
					this.SendPropertyChanging();
					this._NhomTBID = value;
					this.SendPropertyChanged("NhomTBID");
					this.OnNhomTBIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenNhomTB", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenNhomTB
		{
			get
			{
				return this._TenNhomTB;
			}
			set
			{
				if ((this._TenNhomTB != value))
				{
					this.OnTenNhomTBChanging(value);
					this.SendPropertyChanging();
					this._TenNhomTB = value;
					this.SendPropertyChanged("TenNhomTB");
					this.OnTenNhomTBChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiai", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[Association(Name="NHOMTHIETBI_LOAITHIETBI", Storage="_LOAITHIETBIs", OtherKey="NhomTBID")]
		public EntitySet<LOAITHIETBI> LOAITHIETBIs
		{
			get
			{
				return this._LOAITHIETBIs;
			}
			set
			{
				this._LOAITHIETBIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOAITHIETBIs(LOAITHIETBI entity)
		{
			this.SendPropertyChanging();
			entity.NHOMTHIETBI = this;
		}
		
		private void detach_LOAITHIETBIs(LOAITHIETBI entity)
		{
			this.SendPropertyChanging();
			entity.NHOMTHIETBI = null;
		}
	}
	
	[Table(Name="dbo.LOAITHIETBI")]
	public partial class LOAITHIETBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoaiTBID;
		
		private string _TenLoaiTB;
		
		private int _NhomTBID;
		
		private string _DienGiai;
		
		private EntitySet<PHUTUNG> _PHUTUNGs;
		
		private EntitySet<THIETBI> _THIETBIs;
		
		private EntitySet<TYLEHAOMON> _TYLEHAOMONs;
		
		private EntityRef<NHOMTHIETBI> _NHOMTHIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoaiTBIDChanging(int value);
    partial void OnLoaiTBIDChanged();
    partial void OnTenLoaiTBChanging(string value);
    partial void OnTenLoaiTBChanged();
    partial void OnNhomTBIDChanging(int value);
    partial void OnNhomTBIDChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public LOAITHIETBI()
		{
			this._PHUTUNGs = new EntitySet<PHUTUNG>(new Action<PHUTUNG>(this.attach_PHUTUNGs), new Action<PHUTUNG>(this.detach_PHUTUNGs));
			this._THIETBIs = new EntitySet<THIETBI>(new Action<THIETBI>(this.attach_THIETBIs), new Action<THIETBI>(this.detach_THIETBIs));
			this._TYLEHAOMONs = new EntitySet<TYLEHAOMON>(new Action<TYLEHAOMON>(this.attach_TYLEHAOMONs), new Action<TYLEHAOMON>(this.detach_TYLEHAOMONs));
			this._NHOMTHIETBI = default(EntityRef<NHOMTHIETBI>);
			OnCreated();
		}
		
		[Column(Storage="_LoaiTBID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoaiTBID
		{
			get
			{
				return this._LoaiTBID;
			}
			set
			{
				if ((this._LoaiTBID != value))
				{
					this.OnLoaiTBIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiTBID = value;
					this.SendPropertyChanged("LoaiTBID");
					this.OnLoaiTBIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenLoaiTB", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenLoaiTB
		{
			get
			{
				return this._TenLoaiTB;
			}
			set
			{
				if ((this._TenLoaiTB != value))
				{
					this.OnTenLoaiTBChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiTB = value;
					this.SendPropertyChanged("TenLoaiTB");
					this.OnTenLoaiTBChanged();
				}
			}
		}
		
		[Column(Storage="_NhomTBID", DbType="Int NOT NULL")]
		public int NhomTBID
		{
			get
			{
				return this._NhomTBID;
			}
			set
			{
				if ((this._NhomTBID != value))
				{
					if (this._NHOMTHIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhomTBIDChanging(value);
					this.SendPropertyChanging();
					this._NhomTBID = value;
					this.SendPropertyChanged("NhomTBID");
					this.OnNhomTBIDChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiai", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[Association(Name="LOAITHIETBI_PHUTUNG", Storage="_PHUTUNGs", OtherKey="LoaiTBID")]
		public EntitySet<PHUTUNG> PHUTUNGs
		{
			get
			{
				return this._PHUTUNGs;
			}
			set
			{
				this._PHUTUNGs.Assign(value);
			}
		}
		
		[Association(Name="LOAITHIETBI_THIETBI", Storage="_THIETBIs", OtherKey="LoaiTBID")]
		public EntitySet<THIETBI> THIETBIs
		{
			get
			{
				return this._THIETBIs;
			}
			set
			{
				this._THIETBIs.Assign(value);
			}
		}
		
		[Association(Name="LOAITHIETBI_TYLEHAOMON", Storage="_TYLEHAOMONs", OtherKey="LoaiTBID")]
		public EntitySet<TYLEHAOMON> TYLEHAOMONs
		{
			get
			{
				return this._TYLEHAOMONs;
			}
			set
			{
				this._TYLEHAOMONs.Assign(value);
			}
		}
		
		[Association(Name="NHOMTHIETBI_LOAITHIETBI", Storage="_NHOMTHIETBI", ThisKey="NhomTBID", IsForeignKey=true)]
		public NHOMTHIETBI NHOMTHIETBI
		{
			get
			{
				return this._NHOMTHIETBI.Entity;
			}
			set
			{
				NHOMTHIETBI previousValue = this._NHOMTHIETBI.Entity;
				if (((previousValue != value) 
							|| (this._NHOMTHIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMTHIETBI.Entity = null;
						previousValue.LOAITHIETBIs.Remove(this);
					}
					this._NHOMTHIETBI.Entity = value;
					if ((value != null))
					{
						value.LOAITHIETBIs.Add(this);
						this._NhomTBID = value.NhomTBID;
					}
					else
					{
						this._NhomTBID = default(int);
					}
					this.SendPropertyChanged("NHOMTHIETBI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHUTUNGs(PHUTUNG entity)
		{
			this.SendPropertyChanging();
			entity.LOAITHIETBI = this;
		}
		
		private void detach_PHUTUNGs(PHUTUNG entity)
		{
			this.SendPropertyChanging();
			entity.LOAITHIETBI = null;
		}
		
		private void attach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.LOAITHIETBI = this;
		}
		
		private void detach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.LOAITHIETBI = null;
		}
		
		private void attach_TYLEHAOMONs(TYLEHAOMON entity)
		{
			this.SendPropertyChanging();
			entity.LOAITHIETBI = this;
		}
		
		private void detach_TYLEHAOMONs(TYLEHAOMON entity)
		{
			this.SendPropertyChanging();
			entity.LOAITHIETBI = null;
		}
	}
	
	[Table(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChucVuID;
		
		private string _TenChucVu;
		
		private short _CapBac;
		
		private string _DienGiai;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChucVuIDChanging(int value);
    partial void OnChucVuIDChanged();
    partial void OnTenChucVuChanging(string value);
    partial void OnTenChucVuChanged();
    partial void OnCapBacChanging(short value);
    partial void OnCapBacChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public CHUCVU()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[Column(Storage="_ChucVuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChucVuID
		{
			get
			{
				return this._ChucVuID;
			}
			set
			{
				if ((this._ChucVuID != value))
				{
					this.OnChucVuIDChanging(value);
					this.SendPropertyChanging();
					this._ChucVuID = value;
					this.SendPropertyChanged("ChucVuID");
					this.OnChucVuIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenChucVu", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenChucVu
		{
			get
			{
				return this._TenChucVu;
			}
			set
			{
				if ((this._TenChucVu != value))
				{
					this.OnTenChucVuChanging(value);
					this.SendPropertyChanging();
					this._TenChucVu = value;
					this.SendPropertyChanged("TenChucVu");
					this.OnTenChucVuChanged();
				}
			}
		}
		
		[Column(Storage="_CapBac", DbType="SmallInt NOT NULL")]
		public short CapBac
		{
			get
			{
				return this._CapBac;
			}
			set
			{
				if ((this._CapBac != value))
				{
					this.OnCapBacChanging(value);
					this.SendPropertyChanging();
					this._CapBac = value;
					this.SendPropertyChanged("CapBac");
					this.OnCapBacChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiai", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[Association(Name="CHUCVU_NHANVIEN", Storage="_NHANVIENs", OtherKey="ChucVuID")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
	}
	
	[Table(Name="dbo.DONVI")]
	public partial class DONVI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DonViID;
		
		private string _TenDonVi;
		
		private string _DienThoai;
		
		private string _DienGiai;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<BOPHAN> _BOPHANs;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntitySet<BANGIAO> _BANGIAOs;
		
		private EntitySet<BANGIAO> _BANGIAOs1;
		
		private EntitySet<THUHOI> _THUHOIs;
		
		private EntitySet<THUHOI> _THUHOIs1;
		
		private EntitySet<KIEMKE> _KIEMKEs;
		
		private EntitySet<SOTHEODOI> _SOTHEODOIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonViIDChanging(int value);
    partial void OnDonViIDChanged();
    partial void OnTenDonViChanging(string value);
    partial void OnTenDonViChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public DONVI()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._BOPHANs = new EntitySet<BOPHAN>(new Action<BOPHAN>(this.attach_BOPHANs), new Action<BOPHAN>(this.detach_BOPHANs));
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._BANGIAOs = new EntitySet<BANGIAO>(new Action<BANGIAO>(this.attach_BANGIAOs), new Action<BANGIAO>(this.detach_BANGIAOs));
			this._BANGIAOs1 = new EntitySet<BANGIAO>(new Action<BANGIAO>(this.attach_BANGIAOs1), new Action<BANGIAO>(this.detach_BANGIAOs1));
			this._THUHOIs = new EntitySet<THUHOI>(new Action<THUHOI>(this.attach_THUHOIs), new Action<THUHOI>(this.detach_THUHOIs));
			this._THUHOIs1 = new EntitySet<THUHOI>(new Action<THUHOI>(this.attach_THUHOIs1), new Action<THUHOI>(this.detach_THUHOIs1));
			this._KIEMKEs = new EntitySet<KIEMKE>(new Action<KIEMKE>(this.attach_KIEMKEs), new Action<KIEMKE>(this.detach_KIEMKEs));
			this._SOTHEODOIs = new EntitySet<SOTHEODOI>(new Action<SOTHEODOI>(this.attach_SOTHEODOIs), new Action<SOTHEODOI>(this.detach_SOTHEODOIs));
			OnCreated();
		}
		
		[Column(Storage="_DonViID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DonViID
		{
			get
			{
				return this._DonViID;
			}
			set
			{
				if ((this._DonViID != value))
				{
					this.OnDonViIDChanging(value);
					this.SendPropertyChanging();
					this._DonViID = value;
					this.SendPropertyChanged("DonViID");
					this.OnDonViIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenDonVi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDonVi
		{
			get
			{
				return this._TenDonVi;
			}
			set
			{
				if ((this._TenDonVi != value))
				{
					this.OnTenDonViChanging(value);
					this.SendPropertyChanging();
					this._TenDonVi = value;
					this.SendPropertyChanged("TenDonVi");
					this.OnTenDonViChanged();
				}
			}
		}
		
		[Column(Storage="_DienThoai", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiai", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[Association(Name="DONVI_NHANVIEN", Storage="_NHANVIENs", OtherKey="DonViID")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[Association(Name="DONVI_BOPHAN", Storage="_BOPHANs", OtherKey="DonViID")]
		public EntitySet<BOPHAN> BOPHANs
		{
			get
			{
				return this._BOPHANs;
			}
			set
			{
				this._BOPHANs.Assign(value);
			}
		}
		
		[Association(Name="DONVI_PHIEUNHAP", Storage="_PHIEUNHAPs", OtherKey="DonViNhan")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[Association(Name="DONVI_BANGIAO", Storage="_BANGIAOs", OtherKey="DonViBanGiao")]
		public EntitySet<BANGIAO> BANGIAOs
		{
			get
			{
				return this._BANGIAOs;
			}
			set
			{
				this._BANGIAOs.Assign(value);
			}
		}
		
		[Association(Name="DONVI_BANGIAO1", Storage="_BANGIAOs1", OtherKey="DonViNhan")]
		public EntitySet<BANGIAO> BANGIAOs1
		{
			get
			{
				return this._BANGIAOs1;
			}
			set
			{
				this._BANGIAOs1.Assign(value);
			}
		}
		
		[Association(Name="DONVI_THUHOI", Storage="_THUHOIs", OtherKey="DonViThuHoi")]
		public EntitySet<THUHOI> THUHOIs
		{
			get
			{
				return this._THUHOIs;
			}
			set
			{
				this._THUHOIs.Assign(value);
			}
		}
		
		[Association(Name="DONVI_THUHOI1", Storage="_THUHOIs1", OtherKey="DonViSuDung")]
		public EntitySet<THUHOI> THUHOIs1
		{
			get
			{
				return this._THUHOIs1;
			}
			set
			{
				this._THUHOIs1.Assign(value);
			}
		}
		
		[Association(Name="DONVI_KIEMKE", Storage="_KIEMKEs", OtherKey="DonViKiemKe")]
		public EntitySet<KIEMKE> KIEMKEs
		{
			get
			{
				return this._KIEMKEs;
			}
			set
			{
				this._KIEMKEs.Assign(value);
			}
		}
		
		[Association(Name="DONVI_SOTHEODOI", Storage="_SOTHEODOIs", OtherKey="DonViSD")]
		public EntitySet<SOTHEODOI> SOTHEODOIs
		{
			get
			{
				return this._SOTHEODOIs;
			}
			set
			{
				this._SOTHEODOIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = null;
		}
		
		private void attach_BOPHANs(BOPHAN entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = this;
		}
		
		private void detach_BOPHANs(BOPHAN entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = null;
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = null;
		}
		
		private void attach_BANGIAOs(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = this;
		}
		
		private void detach_BANGIAOs(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = null;
		}
		
		private void attach_BANGIAOs1(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.DONVI1 = this;
		}
		
		private void detach_BANGIAOs1(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.DONVI1 = null;
		}
		
		private void attach_THUHOIs(THUHOI entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = this;
		}
		
		private void detach_THUHOIs(THUHOI entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = null;
		}
		
		private void attach_THUHOIs1(THUHOI entity)
		{
			this.SendPropertyChanging();
			entity.DONVI1 = this;
		}
		
		private void detach_THUHOIs1(THUHOI entity)
		{
			this.SendPropertyChanging();
			entity.DONVI1 = null;
		}
		
		private void attach_KIEMKEs(KIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = this;
		}
		
		private void detach_KIEMKEs(KIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = null;
		}
		
		private void attach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = this;
		}
		
		private void detach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = null;
		}
	}
	
	[Table(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _NhanVienID;
		
		private string _MaNV;
		
		private string _HoNV;
		
		private string _TenNV;
		
		private bool _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private int _TinhID;
		
		private string _CMND;
		
		private System.Nullable<System.DateTime> _NgayCap;
		
		private string _NoiCap;
		
		private string _DiaChi;
		
		private int _ChucVuID;
		
		private int _DonViID;
		
		private string _DienThoai;
		
		private string _Email;
		
		private System.Data.Linq.Binary _ChanDung;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs1;
		
		private EntitySet<NGUOIDUNG> _NGUOIDUNGs;
		
		private EntitySet<BANGIAO> _BANGIAOs;
		
		private EntitySet<BANGIAO> _BANGIAOs1;
		
		private EntitySet<THANHLY> _THANHLies;
		
		private EntitySet<THUHOI> _THUHOIs;
		
		private EntitySet<DAIDIENKIEMKE> _DAIDIENKIEMKEs;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
		private EntityRef<DONVI> _DONVI;
		
		private EntityRef<TINH> _TINH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNhanVienIDChanging(long value);
    partial void OnNhanVienIDChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnHoNVChanging(string value);
    partial void OnHoNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnGioiTinhChanging(bool value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnTinhIDChanging(int value);
    partial void OnTinhIDChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnNgayCapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapChanged();
    partial void OnNoiCapChanging(string value);
    partial void OnNoiCapChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnChucVuIDChanging(int value);
    partial void OnChucVuIDChanged();
    partial void OnDonViIDChanging(int value);
    partial void OnDonViIDChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnChanDungChanging(System.Data.Linq.Binary value);
    partial void OnChanDungChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._PHIEUNHAPs1 = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs1), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs1));
			this._NGUOIDUNGs = new EntitySet<NGUOIDUNG>(new Action<NGUOIDUNG>(this.attach_NGUOIDUNGs), new Action<NGUOIDUNG>(this.detach_NGUOIDUNGs));
			this._BANGIAOs = new EntitySet<BANGIAO>(new Action<BANGIAO>(this.attach_BANGIAOs), new Action<BANGIAO>(this.detach_BANGIAOs));
			this._BANGIAOs1 = new EntitySet<BANGIAO>(new Action<BANGIAO>(this.attach_BANGIAOs1), new Action<BANGIAO>(this.detach_BANGIAOs1));
			this._THANHLies = new EntitySet<THANHLY>(new Action<THANHLY>(this.attach_THANHLies), new Action<THANHLY>(this.detach_THANHLies));
			this._THUHOIs = new EntitySet<THUHOI>(new Action<THUHOI>(this.attach_THUHOIs), new Action<THUHOI>(this.detach_THUHOIs));
			this._DAIDIENKIEMKEs = new EntitySet<DAIDIENKIEMKE>(new Action<DAIDIENKIEMKE>(this.attach_DAIDIENKIEMKEs), new Action<DAIDIENKIEMKE>(this.detach_DAIDIENKIEMKEs));
			this._CHUCVU = default(EntityRef<CHUCVU>);
			this._DONVI = default(EntityRef<DONVI>);
			this._TINH = default(EntityRef<TINH>);
			OnCreated();
		}
		
		[Column(Storage="_NhanVienID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[Column(Storage="_MaNV", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[Column(Storage="_HoNV", DbType="NVarChar(23) NOT NULL", CanBeNull=false)]
		public string HoNV
		{
			get
			{
				return this._HoNV;
			}
			set
			{
				if ((this._HoNV != value))
				{
					this.OnHoNVChanging(value);
					this.SendPropertyChanging();
					this._HoNV = value;
					this.SendPropertyChanged("HoNV");
					this.OnHoNVChanged();
				}
			}
		}
		
		[Column(Storage="_TenNV", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[Column(Storage="_GioiTinh", DbType="Bit NOT NULL")]
		public bool GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[Column(Storage="_NgaySinh", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[Column(Storage="_TinhID", DbType="Int NOT NULL")]
		public int TinhID
		{
			get
			{
				return this._TinhID;
			}
			set
			{
				if ((this._TinhID != value))
				{
					if (this._TINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhIDChanging(value);
					this.SendPropertyChanging();
					this._TinhID = value;
					this.SendPropertyChanged("TinhID");
					this.OnTinhIDChanged();
				}
			}
		}
		
		[Column(Storage="_CMND", DbType="VarChar(20)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[Column(Storage="_NgayCap", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayCap
		{
			get
			{
				return this._NgayCap;
			}
			set
			{
				if ((this._NgayCap != value))
				{
					this.OnNgayCapChanging(value);
					this.SendPropertyChanging();
					this._NgayCap = value;
					this.SendPropertyChanged("NgayCap");
					this.OnNgayCapChanged();
				}
			}
		}
		
		[Column(Storage="_NoiCap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NoiCap
		{
			get
			{
				return this._NoiCap;
			}
			set
			{
				if ((this._NoiCap != value))
				{
					this.OnNoiCapChanging(value);
					this.SendPropertyChanging();
					this._NoiCap = value;
					this.SendPropertyChanged("NoiCap");
					this.OnNoiCapChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChi", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[Column(Storage="_ChucVuID", DbType="Int NOT NULL")]
		public int ChucVuID
		{
			get
			{
				return this._ChucVuID;
			}
			set
			{
				if ((this._ChucVuID != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChucVuIDChanging(value);
					this.SendPropertyChanging();
					this._ChucVuID = value;
					this.SendPropertyChanged("ChucVuID");
					this.OnChucVuIDChanged();
				}
			}
		}
		
		[Column(Storage="_DonViID", DbType="Int NOT NULL")]
		public int DonViID
		{
			get
			{
				return this._DonViID;
			}
			set
			{
				if ((this._DonViID != value))
				{
					if (this._DONVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonViIDChanging(value);
					this.SendPropertyChanging();
					this._DonViID = value;
					this.SendPropertyChanged("DonViID");
					this.OnDonViIDChanged();
				}
			}
		}
		
		[Column(Storage="_DienThoai", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_ChanDung", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ChanDung
		{
			get
			{
				return this._ChanDung;
			}
			set
			{
				if ((this._ChanDung != value))
				{
					this.OnChanDungChanging(value);
					this.SendPropertyChanging();
					this._ChanDung = value;
					this.SendPropertyChanged("ChanDung");
					this.OnChanDungChanged();
				}
			}
		}
		
		[Association(Name="NHANVIEN_PHIEUNHAP", Storage="_PHIEUNHAPs", OtherKey="NhanVienNhan1")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[Association(Name="NHANVIEN_PHIEUNHAP1", Storage="_PHIEUNHAPs1", OtherKey="NhanVienNhan2")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs1
		{
			get
			{
				return this._PHIEUNHAPs1;
			}
			set
			{
				this._PHIEUNHAPs1.Assign(value);
			}
		}
		
		[Association(Name="NHANVIEN_NGUOIDUNG", Storage="_NGUOIDUNGs", OtherKey="NhanVienID")]
		public EntitySet<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this._NGUOIDUNGs;
			}
			set
			{
				this._NGUOIDUNGs.Assign(value);
			}
		}
		
		[Association(Name="NHANVIEN_BANGIAO", Storage="_BANGIAOs", OtherKey="NhanVienBanGiao")]
		public EntitySet<BANGIAO> BANGIAOs
		{
			get
			{
				return this._BANGIAOs;
			}
			set
			{
				this._BANGIAOs.Assign(value);
			}
		}
		
		[Association(Name="NHANVIEN_BANGIAO1", Storage="_BANGIAOs1", OtherKey="NhanVienNhan")]
		public EntitySet<BANGIAO> BANGIAOs1
		{
			get
			{
				return this._BANGIAOs1;
			}
			set
			{
				this._BANGIAOs1.Assign(value);
			}
		}
		
		[Association(Name="NHANVIEN_THANHLY", Storage="_THANHLies", OtherKey="DaiDienThanhLy")]
		public EntitySet<THANHLY> THANHLies
		{
			get
			{
				return this._THANHLies;
			}
			set
			{
				this._THANHLies.Assign(value);
			}
		}
		
		[Association(Name="NHANVIEN_THUHOI", Storage="_THUHOIs", OtherKey="DaiDienThuHoi")]
		public EntitySet<THUHOI> THUHOIs
		{
			get
			{
				return this._THUHOIs;
			}
			set
			{
				this._THUHOIs.Assign(value);
			}
		}
		
		[Association(Name="NHANVIEN_DAIDIENKIEMKE", Storage="_DAIDIENKIEMKEs", OtherKey="NhanVienID")]
		public EntitySet<DAIDIENKIEMKE> DAIDIENKIEMKEs
		{
			get
			{
				return this._DAIDIENKIEMKEs;
			}
			set
			{
				this._DAIDIENKIEMKEs.Assign(value);
			}
		}
		
		[Association(Name="CHUCVU_NHANVIEN", Storage="_CHUCVU", ThisKey="ChucVuID", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._ChucVuID = value.ChucVuID;
					}
					else
					{
						this._ChucVuID = default(int);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		[Association(Name="DONVI_NHANVIEN", Storage="_DONVI", ThisKey="DonViID", IsForeignKey=true)]
		public DONVI DONVI
		{
			get
			{
				return this._DONVI.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI.Entity;
				if (((previousValue != value) 
							|| (this._DONVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._DONVI.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._DonViID = value.DonViID;
					}
					else
					{
						this._DonViID = default(int);
					}
					this.SendPropertyChanged("DONVI");
				}
			}
		}
		
		[Association(Name="TINH_NHANVIEN", Storage="_TINH", ThisKey="TinhID", IsForeignKey=true)]
		public TINH TINH
		{
			get
			{
				return this._TINH.Entity;
			}
			set
			{
				TINH previousValue = this._TINH.Entity;
				if (((previousValue != value) 
							|| (this._TINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINH.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._TINH.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._TinhID = value.TinhID;
					}
					else
					{
						this._TinhID = default(int);
					}
					this.SendPropertyChanged("TINH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUNHAPs1(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN1 = this;
		}
		
		private void detach_PHIEUNHAPs1(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN1 = null;
		}
		
		private void attach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_BANGIAOs(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_BANGIAOs(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_BANGIAOs1(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN1 = this;
		}
		
		private void detach_BANGIAOs1(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN1 = null;
		}
		
		private void attach_THANHLies(THANHLY entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_THANHLies(THANHLY entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_THUHOIs(THUHOI entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_THUHOIs(THUHOI entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_DAIDIENKIEMKEs(DAIDIENKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_DAIDIENKIEMKEs(DAIDIENKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[Table(Name="dbo.PHUTUNG")]
	public partial class PHUTUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PhuTungID;
		
		private string _MaPhuTung;
		
		private long _ThietBiID;
		
		private string _TenPhuTung;
		
		private int _LoaiTBID;
		
		private int _DVTID;
		
		private string _SoHieu;
		
		private string _ThongSoKT;
		
		private short _HanBaoHanh;
		
		private int _NuocSX;
		
		private int _NamSX;
		
		private System.Data.Linq.Binary _HinhAnh;
		
		private System.Nullable<System.DateTime> _NgayThangSD;
		
		private string _MoTaThem;
		
		private EntityRef<LOAITHIETBI> _LOAITHIETBI;
		
		private EntityRef<DONVITINH> _DONVITINH;
		
		private EntityRef<NUOC> _NUOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhuTungIDChanging(long value);
    partial void OnPhuTungIDChanged();
    partial void OnMaPhuTungChanging(string value);
    partial void OnMaPhuTungChanged();
    partial void OnThietBiIDChanging(long value);
    partial void OnThietBiIDChanged();
    partial void OnTenPhuTungChanging(string value);
    partial void OnTenPhuTungChanged();
    partial void OnLoaiTBIDChanging(int value);
    partial void OnLoaiTBIDChanged();
    partial void OnDVTIDChanging(int value);
    partial void OnDVTIDChanged();
    partial void OnSoHieuChanging(string value);
    partial void OnSoHieuChanged();
    partial void OnThongSoKTChanging(string value);
    partial void OnThongSoKTChanged();
    partial void OnHanBaoHanhChanging(short value);
    partial void OnHanBaoHanhChanged();
    partial void OnNuocSXChanging(int value);
    partial void OnNuocSXChanged();
    partial void OnNamSXChanging(int value);
    partial void OnNamSXChanged();
    partial void OnHinhAnhChanging(System.Data.Linq.Binary value);
    partial void OnHinhAnhChanged();
    partial void OnNgayThangSDChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThangSDChanged();
    partial void OnMoTaThemChanging(string value);
    partial void OnMoTaThemChanged();
    #endregion
		
		public PHUTUNG()
		{
			this._LOAITHIETBI = default(EntityRef<LOAITHIETBI>);
			this._DONVITINH = default(EntityRef<DONVITINH>);
			this._NUOC = default(EntityRef<NUOC>);
			OnCreated();
		}
		
		[Column(Storage="_PhuTungID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PhuTungID
		{
			get
			{
				return this._PhuTungID;
			}
			set
			{
				if ((this._PhuTungID != value))
				{
					this.OnPhuTungIDChanging(value);
					this.SendPropertyChanging();
					this._PhuTungID = value;
					this.SendPropertyChanged("PhuTungID");
					this.OnPhuTungIDChanged();
				}
			}
		}
		
		[Column(Storage="_MaPhuTung", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MaPhuTung
		{
			get
			{
				return this._MaPhuTung;
			}
			set
			{
				if ((this._MaPhuTung != value))
				{
					this.OnMaPhuTungChanging(value);
					this.SendPropertyChanging();
					this._MaPhuTung = value;
					this.SendPropertyChanged("MaPhuTung");
					this.OnMaPhuTungChanged();
				}
			}
		}
		
		[Column(Storage="_ThietBiID", DbType="BigInt NOT NULL")]
		public long ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenPhuTung", DbType="nvarchar(MAX) NOT NULL", CanBeNull=false)]
		public string TenPhuTung
		{
			get
			{
				return this._TenPhuTung;
			}
			set
			{
				if ((this._TenPhuTung != value))
				{
					this.OnTenPhuTungChanging(value);
					this.SendPropertyChanging();
					this._TenPhuTung = value;
					this.SendPropertyChanged("TenPhuTung");
					this.OnTenPhuTungChanged();
				}
			}
		}
		
		[Column(Storage="_LoaiTBID", DbType="Int NOT NULL")]
		public int LoaiTBID
		{
			get
			{
				return this._LoaiTBID;
			}
			set
			{
				if ((this._LoaiTBID != value))
				{
					if (this._LOAITHIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiTBIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiTBID = value;
					this.SendPropertyChanged("LoaiTBID");
					this.OnLoaiTBIDChanged();
				}
			}
		}
		
		[Column(Storage="_DVTID", DbType="Int NOT NULL")]
		public int DVTID
		{
			get
			{
				return this._DVTID;
			}
			set
			{
				if ((this._DVTID != value))
				{
					if (this._DONVITINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDVTIDChanging(value);
					this.SendPropertyChanging();
					this._DVTID = value;
					this.SendPropertyChanged("DVTID");
					this.OnDVTIDChanged();
				}
			}
		}
		
		[Column(Storage="_SoHieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SoHieu
		{
			get
			{
				return this._SoHieu;
			}
			set
			{
				if ((this._SoHieu != value))
				{
					this.OnSoHieuChanging(value);
					this.SendPropertyChanging();
					this._SoHieu = value;
					this.SendPropertyChanged("SoHieu");
					this.OnSoHieuChanged();
				}
			}
		}
		
		[Column(Storage="_ThongSoKT", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ThongSoKT
		{
			get
			{
				return this._ThongSoKT;
			}
			set
			{
				if ((this._ThongSoKT != value))
				{
					this.OnThongSoKTChanging(value);
					this.SendPropertyChanging();
					this._ThongSoKT = value;
					this.SendPropertyChanged("ThongSoKT");
					this.OnThongSoKTChanged();
				}
			}
		}
		
		[Column(Storage="_HanBaoHanh", DbType="SmallInt NOT NULL")]
		public short HanBaoHanh
		{
			get
			{
				return this._HanBaoHanh;
			}
			set
			{
				if ((this._HanBaoHanh != value))
				{
					this.OnHanBaoHanhChanging(value);
					this.SendPropertyChanging();
					this._HanBaoHanh = value;
					this.SendPropertyChanged("HanBaoHanh");
					this.OnHanBaoHanhChanged();
				}
			}
		}
		
		[Column(Storage="_NuocSX", DbType="Int NOT NULL")]
		public int NuocSX
		{
			get
			{
				return this._NuocSX;
			}
			set
			{
				if ((this._NuocSX != value))
				{
					if (this._NUOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNuocSXChanging(value);
					this.SendPropertyChanging();
					this._NuocSX = value;
					this.SendPropertyChanged("NuocSX");
					this.OnNuocSXChanged();
				}
			}
		}
		
		[Column(Storage="_NamSX", DbType="Int NOT NULL")]
		public int NamSX
		{
			get
			{
				return this._NamSX;
			}
			set
			{
				if ((this._NamSX != value))
				{
					this.OnNamSXChanging(value);
					this.SendPropertyChanging();
					this._NamSX = value;
					this.SendPropertyChanged("NamSX");
					this.OnNamSXChanged();
				}
			}
		}
		
		[Column(Storage="_HinhAnh", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[Column(Storage="_NgayThangSD", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayThangSD
		{
			get
			{
				return this._NgayThangSD;
			}
			set
			{
				if ((this._NgayThangSD != value))
				{
					this.OnNgayThangSDChanging(value);
					this.SendPropertyChanging();
					this._NgayThangSD = value;
					this.SendPropertyChanged("NgayThangSD");
					this.OnNgayThangSDChanged();
				}
			}
		}
		
		[Column(Storage="_MoTaThem", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MoTaThem
		{
			get
			{
				return this._MoTaThem;
			}
			set
			{
				if ((this._MoTaThem != value))
				{
					this.OnMoTaThemChanging(value);
					this.SendPropertyChanging();
					this._MoTaThem = value;
					this.SendPropertyChanged("MoTaThem");
					this.OnMoTaThemChanged();
				}
			}
		}
		
		[Association(Name="LOAITHIETBI_PHUTUNG", Storage="_LOAITHIETBI", ThisKey="LoaiTBID", IsForeignKey=true)]
		public LOAITHIETBI LOAITHIETBI
		{
			get
			{
				return this._LOAITHIETBI.Entity;
			}
			set
			{
				LOAITHIETBI previousValue = this._LOAITHIETBI.Entity;
				if (((previousValue != value) 
							|| (this._LOAITHIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAITHIETBI.Entity = null;
						previousValue.PHUTUNGs.Remove(this);
					}
					this._LOAITHIETBI.Entity = value;
					if ((value != null))
					{
						value.PHUTUNGs.Add(this);
						this._LoaiTBID = value.LoaiTBID;
					}
					else
					{
						this._LoaiTBID = default(int);
					}
					this.SendPropertyChanged("LOAITHIETBI");
				}
			}
		}
		
		[Association(Name="DONVITINH_PHUTUNG", Storage="_DONVITINH", ThisKey="DVTID", IsForeignKey=true)]
		public DONVITINH DONVITINH
		{
			get
			{
				return this._DONVITINH.Entity;
			}
			set
			{
				DONVITINH previousValue = this._DONVITINH.Entity;
				if (((previousValue != value) 
							|| (this._DONVITINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVITINH.Entity = null;
						previousValue.PHUTUNGs.Remove(this);
					}
					this._DONVITINH.Entity = value;
					if ((value != null))
					{
						value.PHUTUNGs.Add(this);
						this._DVTID = value.DVTID;
					}
					else
					{
						this._DVTID = default(int);
					}
					this.SendPropertyChanged("DONVITINH");
				}
			}
		}
		
		[Association(Name="NUOC_PHUTUNG", Storage="_NUOC", ThisKey="NuocSX", IsForeignKey=true)]
		public NUOC NUOC
		{
			get
			{
				return this._NUOC.Entity;
			}
			set
			{
				NUOC previousValue = this._NUOC.Entity;
				if (((previousValue != value) 
							|| (this._NUOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NUOC.Entity = null;
						previousValue.PHUTUNGs.Remove(this);
					}
					this._NUOC.Entity = value;
					if ((value != null))
					{
						value.PHUTUNGs.Add(this);
						this._NuocSX = value.NuocID;
					}
					else
					{
						this._NuocSX = default(int);
					}
					this.SendPropertyChanged("NUOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.BOPHAN")]
	public partial class BOPHAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BoPhanID;
		
		private string _TenBoPhan;
		
		private int _DonViID;
		
		private string _DienGiai;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntitySet<BANGIAO> _BANGIAOs;
		
		private EntitySet<BANGIAO> _BANGIAOs1;
		
		private EntitySet<THUHOI> _THUHOIs;
		
		private EntitySet<KIEMKE> _KIEMKEs;
		
		private EntitySet<SOTHEODOI> _SOTHEODOIs;
		
		private EntityRef<DONVI> _DONVI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBoPhanIDChanging(int value);
    partial void OnBoPhanIDChanged();
    partial void OnTenBoPhanChanging(string value);
    partial void OnTenBoPhanChanged();
    partial void OnDonViIDChanging(int value);
    partial void OnDonViIDChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public BOPHAN()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._BANGIAOs = new EntitySet<BANGIAO>(new Action<BANGIAO>(this.attach_BANGIAOs), new Action<BANGIAO>(this.detach_BANGIAOs));
			this._BANGIAOs1 = new EntitySet<BANGIAO>(new Action<BANGIAO>(this.attach_BANGIAOs1), new Action<BANGIAO>(this.detach_BANGIAOs1));
			this._THUHOIs = new EntitySet<THUHOI>(new Action<THUHOI>(this.attach_THUHOIs), new Action<THUHOI>(this.detach_THUHOIs));
			this._KIEMKEs = new EntitySet<KIEMKE>(new Action<KIEMKE>(this.attach_KIEMKEs), new Action<KIEMKE>(this.detach_KIEMKEs));
			this._SOTHEODOIs = new EntitySet<SOTHEODOI>(new Action<SOTHEODOI>(this.attach_SOTHEODOIs), new Action<SOTHEODOI>(this.detach_SOTHEODOIs));
			this._DONVI = default(EntityRef<DONVI>);
			OnCreated();
		}
		
		[Column(Storage="_BoPhanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BoPhanID
		{
			get
			{
				return this._BoPhanID;
			}
			set
			{
				if ((this._BoPhanID != value))
				{
					this.OnBoPhanIDChanging(value);
					this.SendPropertyChanging();
					this._BoPhanID = value;
					this.SendPropertyChanged("BoPhanID");
					this.OnBoPhanIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenBoPhan", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenBoPhan
		{
			get
			{
				return this._TenBoPhan;
			}
			set
			{
				if ((this._TenBoPhan != value))
				{
					this.OnTenBoPhanChanging(value);
					this.SendPropertyChanging();
					this._TenBoPhan = value;
					this.SendPropertyChanged("TenBoPhan");
					this.OnTenBoPhanChanged();
				}
			}
		}
		
		[Column(Storage="_DonViID", DbType="Int NOT NULL")]
		public int DonViID
		{
			get
			{
				return this._DonViID;
			}
			set
			{
				if ((this._DonViID != value))
				{
					if (this._DONVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonViIDChanging(value);
					this.SendPropertyChanging();
					this._DonViID = value;
					this.SendPropertyChanged("DonViID");
					this.OnDonViIDChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiai", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[Association(Name="BOPHAN_PHIEUNHAP", Storage="_PHIEUNHAPs", OtherKey="BoPhanNhan")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[Association(Name="BOPHAN_BANGIAO", Storage="_BANGIAOs", OtherKey="BoPhanBanGiao")]
		public EntitySet<BANGIAO> BANGIAOs
		{
			get
			{
				return this._BANGIAOs;
			}
			set
			{
				this._BANGIAOs.Assign(value);
			}
		}
		
		[Association(Name="BOPHAN_BANGIAO1", Storage="_BANGIAOs1", OtherKey="BoPhanNhan")]
		public EntitySet<BANGIAO> BANGIAOs1
		{
			get
			{
				return this._BANGIAOs1;
			}
			set
			{
				this._BANGIAOs1.Assign(value);
			}
		}
		
		[Association(Name="BOPHAN_THUHOI", Storage="_THUHOIs", OtherKey="BoPhanSuDung")]
		public EntitySet<THUHOI> THUHOIs
		{
			get
			{
				return this._THUHOIs;
			}
			set
			{
				this._THUHOIs.Assign(value);
			}
		}
		
		[Association(Name="BOPHAN_KIEMKE", Storage="_KIEMKEs", OtherKey="BoPhanKiemKe")]
		public EntitySet<KIEMKE> KIEMKEs
		{
			get
			{
				return this._KIEMKEs;
			}
			set
			{
				this._KIEMKEs.Assign(value);
			}
		}
		
		[Association(Name="BOPHAN_SOTHEODOI", Storage="_SOTHEODOIs", OtherKey="BoPhanSD")]
		public EntitySet<SOTHEODOI> SOTHEODOIs
		{
			get
			{
				return this._SOTHEODOIs;
			}
			set
			{
				this._SOTHEODOIs.Assign(value);
			}
		}
		
		[Association(Name="DONVI_BOPHAN", Storage="_DONVI", ThisKey="DonViID", IsForeignKey=true)]
		public DONVI DONVI
		{
			get
			{
				return this._DONVI.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI.Entity;
				if (((previousValue != value) 
							|| (this._DONVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI.Entity = null;
						previousValue.BOPHANs.Remove(this);
					}
					this._DONVI.Entity = value;
					if ((value != null))
					{
						value.BOPHANs.Add(this);
						this._DonViID = value.DonViID;
					}
					else
					{
						this._DonViID = default(int);
					}
					this.SendPropertyChanged("DONVI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN = null;
		}
		
		private void attach_BANGIAOs(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN = this;
		}
		
		private void detach_BANGIAOs(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN = null;
		}
		
		private void attach_BANGIAOs1(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN1 = this;
		}
		
		private void detach_BANGIAOs1(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN1 = null;
		}
		
		private void attach_THUHOIs(THUHOI entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN = this;
		}
		
		private void detach_THUHOIs(THUHOI entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN = null;
		}
		
		private void attach_KIEMKEs(KIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN = this;
		}
		
		private void detach_KIEMKEs(KIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN = null;
		}
		
		private void attach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN = this;
		}
		
		private void detach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN = null;
		}
	}
	
	[Table(Name="dbo.THIETBI")]
	public partial class THIETBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ThietBiID;
		
		private string _MaThietBi;
		
		private string _TenThietBi;
		
		private int _LoaiTBID;
		
		private int _DVTID;
		
		private string _SoHieu;
		
		private string _ThongSoKT;
		
		private short _HanBaoHanh;
		
		private int _NuocSX;
		
		private int _NamSX;
		
		private System.Data.Linq.Binary _HinhAnh;
		
		private string _TaiLieuKT;
		
		private System.Data.Linq.Binary _NDTaiLieuKT;
		
		private string _MoTaThem;
		
		private short _TrangThai;
		
		private short _SoLuong;
		
		private EntitySet<CTPHIEUNHAP> _CTPHIEUNHAPs;
		
		private EntitySet<CTTHUHOI> _CTTHUHOIs;
		
		private EntitySet<GTTHIETBI> _GTTHIETBIs;
		
		private EntityRef<NUOC> _NUOC;
		
		private EntityRef<LOAITHIETBI> _LOAITHIETBI;
		
		private EntityRef<DONVITINH> _DONVITINH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThietBiIDChanging(long value);
    partial void OnThietBiIDChanged();
    partial void OnMaThietBiChanging(string value);
    partial void OnMaThietBiChanged();
    partial void OnTenThietBiChanging(string value);
    partial void OnTenThietBiChanged();
    partial void OnLoaiTBIDChanging(int value);
    partial void OnLoaiTBIDChanged();
    partial void OnDVTIDChanging(int value);
    partial void OnDVTIDChanged();
    partial void OnSoHieuChanging(string value);
    partial void OnSoHieuChanged();
    partial void OnThongSoKTChanging(string value);
    partial void OnThongSoKTChanged();
    partial void OnHanBaoHanhChanging(short value);
    partial void OnHanBaoHanhChanged();
    partial void OnNuocSXChanging(int value);
    partial void OnNuocSXChanged();
    partial void OnNamSXChanging(int value);
    partial void OnNamSXChanged();
    partial void OnHinhAnhChanging(System.Data.Linq.Binary value);
    partial void OnHinhAnhChanged();
    partial void OnTaiLieuKTChanging(string value);
    partial void OnTaiLieuKTChanged();
    partial void OnNDTaiLieuKTChanging(System.Data.Linq.Binary value);
    partial void OnNDTaiLieuKTChanged();
    partial void OnMoTaThemChanging(string value);
    partial void OnMoTaThemChanged();
    partial void OnTrangThaiChanging(short value);
    partial void OnTrangThaiChanged();
    partial void OnSoLuongChanging(short value);
    partial void OnSoLuongChanged();
    #endregion
		
		public THIETBI()
		{
			this._CTPHIEUNHAPs = new EntitySet<CTPHIEUNHAP>(new Action<CTPHIEUNHAP>(this.attach_CTPHIEUNHAPs), new Action<CTPHIEUNHAP>(this.detach_CTPHIEUNHAPs));
			this._CTTHUHOIs = new EntitySet<CTTHUHOI>(new Action<CTTHUHOI>(this.attach_CTTHUHOIs), new Action<CTTHUHOI>(this.detach_CTTHUHOIs));
			this._GTTHIETBIs = new EntitySet<GTTHIETBI>(new Action<GTTHIETBI>(this.attach_GTTHIETBIs), new Action<GTTHIETBI>(this.detach_GTTHIETBIs));
			this._NUOC = default(EntityRef<NUOC>);
			this._LOAITHIETBI = default(EntityRef<LOAITHIETBI>);
			this._DONVITINH = default(EntityRef<DONVITINH>);
			OnCreated();
		}
		
		[Column(Storage="_ThietBiID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_MaThietBi", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MaThietBi
		{
			get
			{
				return this._MaThietBi;
			}
			set
			{
				if ((this._MaThietBi != value))
				{
					this.OnMaThietBiChanging(value);
					this.SendPropertyChanging();
					this._MaThietBi = value;
					this.SendPropertyChanged("MaThietBi");
					this.OnMaThietBiChanged();
				}
			}
		}
		
		[Column(Storage="_TenThietBi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenThietBi
		{
			get
			{
				return this._TenThietBi;
			}
			set
			{
				if ((this._TenThietBi != value))
				{
					this.OnTenThietBiChanging(value);
					this.SendPropertyChanging();
					this._TenThietBi = value;
					this.SendPropertyChanged("TenThietBi");
					this.OnTenThietBiChanged();
				}
			}
		}
		
		[Column(Storage="_LoaiTBID", DbType="Int NOT NULL")]
		public int LoaiTBID
		{
			get
			{
				return this._LoaiTBID;
			}
			set
			{
				if ((this._LoaiTBID != value))
				{
					if (this._LOAITHIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiTBIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiTBID = value;
					this.SendPropertyChanged("LoaiTBID");
					this.OnLoaiTBIDChanged();
				}
			}
		}
		
		[Column(Storage="_DVTID", DbType="Int NOT NULL")]
		public int DVTID
		{
			get
			{
				return this._DVTID;
			}
			set
			{
				if ((this._DVTID != value))
				{
					if (this._DONVITINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDVTIDChanging(value);
					this.SendPropertyChanging();
					this._DVTID = value;
					this.SendPropertyChanged("DVTID");
					this.OnDVTIDChanged();
				}
			}
		}
		
		[Column(Storage="_SoHieu", DbType="NVarChar(20)", CanBeNull=false)]
		public string SoHieu
		{
			get
			{
				return this._SoHieu;
			}
			set
			{
				if ((this._SoHieu != value))
				{
					this.OnSoHieuChanging(value);
					this.SendPropertyChanging();
					this._SoHieu = value;
					this.SendPropertyChanged("SoHieu");
					this.OnSoHieuChanged();
				}
			}
		}
		
		[Column(Storage="_ThongSoKT", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ThongSoKT
		{
			get
			{
				return this._ThongSoKT;
			}
			set
			{
				if ((this._ThongSoKT != value))
				{
					this.OnThongSoKTChanging(value);
					this.SendPropertyChanging();
					this._ThongSoKT = value;
					this.SendPropertyChanged("ThongSoKT");
					this.OnThongSoKTChanged();
				}
			}
		}
		
		[Column(Storage="_HanBaoHanh", DbType="SmallInt NOT NULL")]
		public short HanBaoHanh
		{
			get
			{
				return this._HanBaoHanh;
			}
			set
			{
				if ((this._HanBaoHanh != value))
				{
					this.OnHanBaoHanhChanging(value);
					this.SendPropertyChanging();
					this._HanBaoHanh = value;
					this.SendPropertyChanged("HanBaoHanh");
					this.OnHanBaoHanhChanged();
				}
			}
		}
		
		[Column(Storage="_NuocSX", DbType="Int NOT NULL")]
		public int NuocSX
		{
			get
			{
				return this._NuocSX;
			}
			set
			{
				if ((this._NuocSX != value))
				{
					if (this._NUOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNuocSXChanging(value);
					this.SendPropertyChanging();
					this._NuocSX = value;
					this.SendPropertyChanged("NuocSX");
					this.OnNuocSXChanged();
				}
			}
		}
		
		[Column(Storage="_NamSX", DbType="Int NOT NULL")]
		public int NamSX
		{
			get
			{
				return this._NamSX;
			}
			set
			{
				if ((this._NamSX != value))
				{
					this.OnNamSXChanging(value);
					this.SendPropertyChanging();
					this._NamSX = value;
					this.SendPropertyChanged("NamSX");
					this.OnNamSXChanged();
				}
			}
		}
		
		[Column(Storage="_HinhAnh", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[Column(Storage="_TaiLieuKT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaiLieuKT
		{
			get
			{
				return this._TaiLieuKT;
			}
			set
			{
				if ((this._TaiLieuKT != value))
				{
					this.OnTaiLieuKTChanging(value);
					this.SendPropertyChanging();
					this._TaiLieuKT = value;
					this.SendPropertyChanged("TaiLieuKT");
					this.OnTaiLieuKTChanged();
				}
			}
		}
		
		[Column(Storage="_NDTaiLieuKT", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary NDTaiLieuKT
		{
			get
			{
				return this._NDTaiLieuKT;
			}
			set
			{
				if ((this._NDTaiLieuKT != value))
				{
					this.OnNDTaiLieuKTChanging(value);
					this.SendPropertyChanging();
					this._NDTaiLieuKT = value;
					this.SendPropertyChanged("NDTaiLieuKT");
					this.OnNDTaiLieuKTChanged();
				}
			}
		}
		
		[Column(Storage="_MoTaThem", DbType="NVarChar(MAX)", CanBeNull=false)]
		public string MoTaThem
		{
			get
			{
				return this._MoTaThem;
			}
			set
			{
				if ((this._MoTaThem != value))
				{
					this.OnMoTaThemChanging(value);
					this.SendPropertyChanging();
					this._MoTaThem = value;
					this.SendPropertyChanged("MoTaThem");
					this.OnMoTaThemChanged();
				}
			}
		}
		
		[Column(Storage="_TrangThai", DbType="SmallInt NOT NULL")]
		public short TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[Column(Storage="_SoLuong", DbType="SmallInt NOT NULL")]
		public short SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[Association(Name="THIETBI_CTPHIEUNHAP", Storage="_CTPHIEUNHAPs", OtherKey="ThietBiID")]
		public EntitySet<CTPHIEUNHAP> CTPHIEUNHAPs
		{
			get
			{
				return this._CTPHIEUNHAPs;
			}
			set
			{
				this._CTPHIEUNHAPs.Assign(value);
			}
		}
		
		[Association(Name="THIETBI_CTTHUHOI", Storage="_CTTHUHOIs", OtherKey="ThietBiID")]
		public EntitySet<CTTHUHOI> CTTHUHOIs
		{
			get
			{
				return this._CTTHUHOIs;
			}
			set
			{
				this._CTTHUHOIs.Assign(value);
			}
		}
		
		[Association(Name="THIETBI_GTTHIETBI", Storage="_GTTHIETBIs", OtherKey="ThietBiID")]
		public EntitySet<GTTHIETBI> GTTHIETBIs
		{
			get
			{
				return this._GTTHIETBIs;
			}
			set
			{
				this._GTTHIETBIs.Assign(value);
			}
		}
		
		[Association(Name="NUOC_THIETBI", Storage="_NUOC", ThisKey="NuocSX", IsForeignKey=true)]
		public NUOC NUOC
		{
			get
			{
				return this._NUOC.Entity;
			}
			set
			{
				NUOC previousValue = this._NUOC.Entity;
				if (((previousValue != value) 
							|| (this._NUOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NUOC.Entity = null;
						previousValue.THIETBIs.Remove(this);
					}
					this._NUOC.Entity = value;
					if ((value != null))
					{
						value.THIETBIs.Add(this);
						this._NuocSX = value.NuocID;
					}
					else
					{
						this._NuocSX = default(int);
					}
					this.SendPropertyChanged("NUOC");
				}
			}
		}
		
		[Association(Name="LOAITHIETBI_THIETBI", Storage="_LOAITHIETBI", ThisKey="LoaiTBID", IsForeignKey=true)]
		public LOAITHIETBI LOAITHIETBI
		{
			get
			{
				return this._LOAITHIETBI.Entity;
			}
			set
			{
				LOAITHIETBI previousValue = this._LOAITHIETBI.Entity;
				if (((previousValue != value) 
							|| (this._LOAITHIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAITHIETBI.Entity = null;
						previousValue.THIETBIs.Remove(this);
					}
					this._LOAITHIETBI.Entity = value;
					if ((value != null))
					{
						value.THIETBIs.Add(this);
						this._LoaiTBID = value.LoaiTBID;
					}
					else
					{
						this._LoaiTBID = default(int);
					}
					this.SendPropertyChanged("LOAITHIETBI");
				}
			}
		}
		
		[Association(Name="DONVITINH_THIETBI", Storage="_DONVITINH", ThisKey="DVTID", IsForeignKey=true)]
		public DONVITINH DONVITINH
		{
			get
			{
				return this._DONVITINH.Entity;
			}
			set
			{
				DONVITINH previousValue = this._DONVITINH.Entity;
				if (((previousValue != value) 
							|| (this._DONVITINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVITINH.Entity = null;
						previousValue.THIETBIs.Remove(this);
					}
					this._DONVITINH.Entity = value;
					if ((value != null))
					{
						value.THIETBIs.Add(this);
						this._DVTID = value.DVTID;
					}
					else
					{
						this._DVTID = default(int);
					}
					this.SendPropertyChanged("DONVITINH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHIEUNHAPs(CTPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CTPHIEUNHAPs(CTPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_CTTHUHOIs(CTTHUHOI entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CTTHUHOIs(CTTHUHOI entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_GTTHIETBIs(GTTHIETBI entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_GTTHIETBIs(GTTHIETBI entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
	}
	
	[Table(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NCCID;
		
		private string _TenNCC;
		
		private string _HoNguoiLH;
		
		private string _TenNguoiLH;
		
		private string _ChucVu;
		
		private int _TinhID;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private string _FAX;
		
		private string _Email;
		
		private string _Website;
		
		private string _GhiChu;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntityRef<TINH> _TINH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNCCIDChanging(int value);
    partial void OnNCCIDChanged();
    partial void OnTenNCCChanging(string value);
    partial void OnTenNCCChanged();
    partial void OnHoNguoiLHChanging(string value);
    partial void OnHoNguoiLHChanged();
    partial void OnTenNguoiLHChanging(string value);
    partial void OnTenNguoiLHChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnTinhIDChanging(int value);
    partial void OnTinhIDChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnFAXChanging(string value);
    partial void OnFAXChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._TINH = default(EntityRef<TINH>);
			OnCreated();
		}
		
		[Column(Storage="_NCCID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NCCID
		{
			get
			{
				return this._NCCID;
			}
			set
			{
				if ((this._NCCID != value))
				{
					this.OnNCCIDChanging(value);
					this.SendPropertyChanging();
					this._NCCID = value;
					this.SendPropertyChanged("NCCID");
					this.OnNCCIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenNCC", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNCC
		{
			get
			{
				return this._TenNCC;
			}
			set
			{
				if ((this._TenNCC != value))
				{
					this.OnTenNCCChanging(value);
					this.SendPropertyChanging();
					this._TenNCC = value;
					this.SendPropertyChanged("TenNCC");
					this.OnTenNCCChanged();
				}
			}
		}
		
		[Column(Storage="_HoNguoiLH", DbType="NVarChar(23) NOT NULL", CanBeNull=false)]
		public string HoNguoiLH
		{
			get
			{
				return this._HoNguoiLH;
			}
			set
			{
				if ((this._HoNguoiLH != value))
				{
					this.OnHoNguoiLHChanging(value);
					this.SendPropertyChanging();
					this._HoNguoiLH = value;
					this.SendPropertyChanged("HoNguoiLH");
					this.OnHoNguoiLHChanged();
				}
			}
		}
		
		[Column(Storage="_TenNguoiLH", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string TenNguoiLH
		{
			get
			{
				return this._TenNguoiLH;
			}
			set
			{
				if ((this._TenNguoiLH != value))
				{
					this.OnTenNguoiLHChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiLH = value;
					this.SendPropertyChanged("TenNguoiLH");
					this.OnTenNguoiLHChanged();
				}
			}
		}
		
		[Column(Storage="_ChucVu", DbType="NVarChar(100) NOT NULL")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[Column(Storage="_TinhID", DbType="Int NOT NULL")]
		public int TinhID
		{
			get
			{
				return this._TinhID;
			}
			set
			{
				if ((this._TinhID != value))
				{
					if (this._TINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhIDChanging(value);
					this.SendPropertyChanging();
					this._TinhID = value;
					this.SendPropertyChanged("TinhID");
					this.OnTinhIDChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChi", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[Column(Storage="_DienThoai", DbType="nvarchar(MAX) NOT NULL", CanBeNull=false)]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[Column(Storage="_FAX", DbType="nvarchar(MAX) NOT NULL", CanBeNull=false)]
		public string FAX
		{
			get
			{
				return this._FAX;
			}
			set
			{
				if ((this._FAX != value))
				{
					this.OnFAXChanging(value);
					this.SendPropertyChanging();
					this._FAX = value;
					this.SendPropertyChanged("FAX");
					this.OnFAXChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="nvarchar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Website", DbType="nvarchar(MAX) NOT NULL", CanBeNull=false)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChu", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[Association(Name="NHACUNGCAP_PHIEUNHAP", Storage="_PHIEUNHAPs", OtherKey="NCCID")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[Association(Name="TINH_NHACUNGCAP", Storage="_TINH", ThisKey="TinhID", IsForeignKey=true)]
		public TINH TINH
		{
			get
			{
				return this._TINH.Entity;
			}
			set
			{
				TINH previousValue = this._TINH.Entity;
				if (((previousValue != value) 
							|| (this._TINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINH.Entity = null;
						previousValue.NHACUNGCAPs.Remove(this);
					}
					this._TINH.Entity = value;
					if ((value != null))
					{
						value.NHACUNGCAPs.Add(this);
						this._TinhID = value.TinhID;
					}
					else
					{
						this._TinhID = default(int);
					}
					this.SendPropertyChanged("TINH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[Table(Name="dbo.CTPHIEUNHAP")]
	public partial class CTPHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CTNhapID;
		
		private int _PhieuNhapID;
		
		private long _ThietBiID;
		
		private short _SoLuong;
		
		private decimal _DonGia;
		
		private EntitySet<GTTHIETBI> _GTTHIETBIs;
		
		private EntityRef<PHIEUNHAP> _PHIEUNHAP;
		
		private EntityRef<THIETBI> _THIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCTNhapIDChanging(int value);
    partial void OnCTNhapIDChanged();
    partial void OnPhieuNhapIDChanging(int value);
    partial void OnPhieuNhapIDChanged();
    partial void OnThietBiIDChanging(long value);
    partial void OnThietBiIDChanged();
    partial void OnSoLuongChanging(short value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(decimal value);
    partial void OnDonGiaChanged();
    #endregion
		
		public CTPHIEUNHAP()
		{
			this._GTTHIETBIs = new EntitySet<GTTHIETBI>(new Action<GTTHIETBI>(this.attach_GTTHIETBIs), new Action<GTTHIETBI>(this.detach_GTTHIETBIs));
			this._PHIEUNHAP = default(EntityRef<PHIEUNHAP>);
			this._THIETBI = default(EntityRef<THIETBI>);
			OnCreated();
		}
		
		[Column(Storage="_CTNhapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CTNhapID
		{
			get
			{
				return this._CTNhapID;
			}
			set
			{
				if ((this._CTNhapID != value))
				{
					this.OnCTNhapIDChanging(value);
					this.SendPropertyChanging();
					this._CTNhapID = value;
					this.SendPropertyChanged("CTNhapID");
					this.OnCTNhapIDChanged();
				}
			}
		}
		
		[Column(Storage="_PhieuNhapID", DbType="Int NOT NULL")]
		public int PhieuNhapID
		{
			get
			{
				return this._PhieuNhapID;
			}
			set
			{
				if ((this._PhieuNhapID != value))
				{
					if (this._PHIEUNHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhieuNhapIDChanging(value);
					this.SendPropertyChanging();
					this._PhieuNhapID = value;
					this.SendPropertyChanged("PhieuNhapID");
					this.OnPhieuNhapIDChanged();
				}
			}
		}
		
		[Column(Storage="_ThietBiID", DbType="BigInt NOT NULL")]
		public long ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_SoLuong", DbType="SmallInt NOT NULL")]
		public short SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[Column(Storage="_DonGia", DbType="Money NOT NULL")]
		public decimal DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[Association(Name="CTPHIEUNHAP_GTTHIETBI", Storage="_GTTHIETBIs", OtherKey="CTNhapID")]
		public EntitySet<GTTHIETBI> GTTHIETBIs
		{
			get
			{
				return this._GTTHIETBIs;
			}
			set
			{
				this._GTTHIETBIs.Assign(value);
			}
		}
		
		[Association(Name="PHIEUNHAP_CTPHIEUNHAP", Storage="_PHIEUNHAP", ThisKey="PhieuNhapID", IsForeignKey=true)]
		public PHIEUNHAP PHIEUNHAP
		{
			get
			{
				return this._PHIEUNHAP.Entity;
			}
			set
			{
				PHIEUNHAP previousValue = this._PHIEUNHAP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAP.Entity = null;
						previousValue.CTPHIEUNHAPs.Remove(this);
					}
					this._PHIEUNHAP.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUNHAPs.Add(this);
						this._PhieuNhapID = value.PhieuNhapID;
					}
					else
					{
						this._PhieuNhapID = default(int);
					}
					this.SendPropertyChanged("PHIEUNHAP");
				}
			}
		}
		
		[Association(Name="THIETBI_CTPHIEUNHAP", Storage="_THIETBI", ThisKey="ThietBiID", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CTPHIEUNHAPs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUNHAPs.Add(this);
						this._ThietBiID = value.ThietBiID;
					}
					else
					{
						this._ThietBiID = default(long);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GTTHIETBIs(GTTHIETBI entity)
		{
			this.SendPropertyChanging();
			entity.CTPHIEUNHAP = this;
		}
		
		private void detach_GTTHIETBIs(GTTHIETBI entity)
		{
			this.SendPropertyChanging();
			entity.CTPHIEUNHAP = null;
		}
	}
	
	[Table(Name="dbo.PHIEUNHAP")]
	public partial class PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhieuNhapID;
		
		private string _SoVanBan;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private int _NCCID;
		
		private long _NhanVienID;
		
		private System.Nullable<System.DateTime> _NgayVanBan;
		
		private string _ThamQuyenQD;
		
		private long _NhanVienNhan2;
		
		private int _DonViNhan;
		
		private int _BoPhanNhan;
		
		private string _GhiChu;
		
		private short _KieuNhapTB;
		
		private long _NguoiDungID;
		
		private EntitySet<CTPHIEUNHAP> _CTPHIEUNHAPs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<NHANVIEN> _NHANVIEN1;
		
		private EntityRef<DONVI> _DONVI;
		
		private EntityRef<BOPHAN> _BOPHAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhieuNhapIDChanging(int value);
    partial void OnPhieuNhapIDChanged();
    partial void OnSoVanBanChanging(string value);
    partial void OnSoVanBanChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    partial void OnNCCIDChanging(int value);
    partial void OnNCCIDChanged();
    partial void OnNhanVienNhan1Changing(long value);
    partial void OnNhanVienNhan1Changed();
    partial void OnNgayVanBanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayVanBanChanged();
    partial void OnThamQuyenQDChanging(string value);
    partial void OnThamQuyenQDChanged();
    partial void OnNhanVienNhan2Changing(long value);
    partial void OnNhanVienNhan2Changed();
    partial void OnDonViNhanChanging(int value);
    partial void OnDonViNhanChanged();
    partial void OnBoPhanNhanChanging(int value);
    partial void OnBoPhanNhanChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnKieuNhapTBChanging(short value);
    partial void OnKieuNhapTBChanged();
    partial void OnNguoiDungIDChanging(long value);
    partial void OnNguoiDungIDChanged();
    #endregion
		
		public PHIEUNHAP()
		{
			this._CTPHIEUNHAPs = new EntitySet<CTPHIEUNHAP>(new Action<CTPHIEUNHAP>(this.attach_CTPHIEUNHAPs), new Action<CTPHIEUNHAP>(this.detach_CTPHIEUNHAPs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._NHANVIEN1 = default(EntityRef<NHANVIEN>);
			this._DONVI = default(EntityRef<DONVI>);
			this._BOPHAN = default(EntityRef<BOPHAN>);
			OnCreated();
		}
		
		[Column(Storage="_PhieuNhapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhieuNhapID
		{
			get
			{
				return this._PhieuNhapID;
			}
			set
			{
				if ((this._PhieuNhapID != value))
				{
					this.OnPhieuNhapIDChanging(value);
					this.SendPropertyChanging();
					this._PhieuNhapID = value;
					this.SendPropertyChanged("PhieuNhapID");
					this.OnPhieuNhapIDChanged();
				}
			}
		}
		
		[Column(Storage="_SoVanBan", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string SoVanBan
		{
			get
			{
				return this._SoVanBan;
			}
			set
			{
				if ((this._SoVanBan != value))
				{
					this.OnSoVanBanChanging(value);
					this.SendPropertyChanging();
					this._SoVanBan = value;
					this.SendPropertyChanged("SoVanBan");
					this.OnSoVanBanChanged();
				}
			}
		}
		
		[Column(Storage="_NgayNhap", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[Column(Storage="_NCCID", DbType="Int NOT NULL")]
		public int NCCID
		{
			get
			{
				return this._NCCID;
			}
			set
			{
				if ((this._NCCID != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNCCIDChanging(value);
					this.SendPropertyChanging();
					this._NCCID = value;
					this.SendPropertyChanged("NCCID");
					this.OnNCCIDChanged();
				}
			}
		}
		
		[Column(Storage="_NhanVienID", DbType="BigInt NOT NULL")]
		public long NhanVienNhan1
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienNhan1Changing(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienNhan1");
					this.OnNhanVienNhan1Changed();
				}
			}
		}
		
		[Column(Storage="_NgayVanBan", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayVanBan
		{
			get
			{
				return this._NgayVanBan;
			}
			set
			{
				if ((this._NgayVanBan != value))
				{
					this.OnNgayVanBanChanging(value);
					this.SendPropertyChanging();
					this._NgayVanBan = value;
					this.SendPropertyChanged("NgayVanBan");
					this.OnNgayVanBanChanged();
				}
			}
		}
		
		[Column(Storage="_ThamQuyenQD", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ThamQuyenQD
		{
			get
			{
				return this._ThamQuyenQD;
			}
			set
			{
				if ((this._ThamQuyenQD != value))
				{
					this.OnThamQuyenQDChanging(value);
					this.SendPropertyChanging();
					this._ThamQuyenQD = value;
					this.SendPropertyChanged("ThamQuyenQD");
					this.OnThamQuyenQDChanged();
				}
			}
		}
		
		[Column(Storage="_NhanVienNhan2", DbType="BigInt NOT NULL")]
		public long NhanVienNhan2
		{
			get
			{
				return this._NhanVienNhan2;
			}
			set
			{
				if ((this._NhanVienNhan2 != value))
				{
					if (this._NHANVIEN1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienNhan2Changing(value);
					this.SendPropertyChanging();
					this._NhanVienNhan2 = value;
					this.SendPropertyChanged("NhanVienNhan2");
					this.OnNhanVienNhan2Changed();
				}
			}
		}
		
		[Column(Storage="_DonViNhan", DbType="Int NOT NULL")]
		public int DonViNhan
		{
			get
			{
				return this._DonViNhan;
			}
			set
			{
				if ((this._DonViNhan != value))
				{
					if (this._DONVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonViNhanChanging(value);
					this.SendPropertyChanging();
					this._DonViNhan = value;
					this.SendPropertyChanged("DonViNhan");
					this.OnDonViNhanChanged();
				}
			}
		}
		
		[Column(Storage="_BoPhanNhan", DbType="Int NOT NULL")]
		public int BoPhanNhan
		{
			get
			{
				return this._BoPhanNhan;
			}
			set
			{
				if ((this._BoPhanNhan != value))
				{
					if (this._BOPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoPhanNhanChanging(value);
					this.SendPropertyChanging();
					this._BoPhanNhan = value;
					this.SendPropertyChanged("BoPhanNhan");
					this.OnBoPhanNhanChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChu", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[Column(Storage="_KieuNhapTB", DbType="SmallInt NOT NULL")]
		public short KieuNhapTB
		{
			get
			{
				return this._KieuNhapTB;
			}
			set
			{
				if ((this._KieuNhapTB != value))
				{
					this.OnKieuNhapTBChanging(value);
					this.SendPropertyChanging();
					this._KieuNhapTB = value;
					this.SendPropertyChanged("KieuNhapTB");
					this.OnKieuNhapTBChanged();
				}
			}
		}
		
		[Column(Storage="_NguoiDungID", DbType="BigInt NOT NULL")]
		public long NguoiDungID
		{
			get
			{
				return this._NguoiDungID;
			}
			set
			{
				if ((this._NguoiDungID != value))
				{
					this.OnNguoiDungIDChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungID = value;
					this.SendPropertyChanged("NguoiDungID");
					this.OnNguoiDungIDChanged();
				}
			}
		}
		
		[Association(Name="PHIEUNHAP_CTPHIEUNHAP", Storage="_CTPHIEUNHAPs", OtherKey="PhieuNhapID")]
		public EntitySet<CTPHIEUNHAP> CTPHIEUNHAPs
		{
			get
			{
				return this._CTPHIEUNHAPs;
			}
			set
			{
				this._CTPHIEUNHAPs.Assign(value);
			}
		}
		
		[Association(Name="NHACUNGCAP_PHIEUNHAP", Storage="_NHACUNGCAP", ThisKey="NCCID", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._NCCID = value.NCCID;
					}
					else
					{
						this._NCCID = default(int);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[Association(Name="NHANVIEN_PHIEUNHAP", Storage="_NHANVIEN", ThisKey="NhanVienNhan1", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._NhanVienID = value.NhanVienID;
					}
					else
					{
						this._NhanVienID = default(long);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[Association(Name="NHANVIEN_PHIEUNHAP1", Storage="_NHANVIEN1", ThisKey="NhanVienNhan2", IsForeignKey=true)]
		public NHANVIEN NHANVIEN1
		{
			get
			{
				return this._NHANVIEN1.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN1.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN1.Entity = null;
						previousValue.PHIEUNHAPs1.Remove(this);
					}
					this._NHANVIEN1.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs1.Add(this);
						this._NhanVienNhan2 = value.NhanVienID;
					}
					else
					{
						this._NhanVienNhan2 = default(long);
					}
					this.SendPropertyChanged("NHANVIEN1");
				}
			}
		}
		
		[Association(Name="DONVI_PHIEUNHAP", Storage="_DONVI", ThisKey="DonViNhan", IsForeignKey=true)]
		public DONVI DONVI
		{
			get
			{
				return this._DONVI.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI.Entity;
				if (((previousValue != value) 
							|| (this._DONVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._DONVI.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._DonViNhan = value.DonViID;
					}
					else
					{
						this._DonViNhan = default(int);
					}
					this.SendPropertyChanged("DONVI");
				}
			}
		}
		
		[Association(Name="BOPHAN_PHIEUNHAP", Storage="_BOPHAN", ThisKey="BoPhanNhan", IsForeignKey=true)]
		public BOPHAN BOPHAN
		{
			get
			{
				return this._BOPHAN.Entity;
			}
			set
			{
				BOPHAN previousValue = this._BOPHAN.Entity;
				if (((previousValue != value) 
							|| (this._BOPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BOPHAN.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._BOPHAN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._BoPhanNhan = value.BoPhanID;
					}
					else
					{
						this._BoPhanNhan = default(int);
					}
					this.SendPropertyChanged("BOPHAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHIEUNHAPs(CTPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = this;
		}
		
		private void detach_CTPHIEUNHAPs(CTPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = null;
		}
	}
	
	[Table(Name="dbo.NGUOIDUNG")]
	public partial class NGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _NguoiDungID;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private long _NhanVienID;
		
		private int _Quyen;
		
		private bool _TrangThai;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNguoiDungIDChanging(long value);
    partial void OnNguoiDungIDChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnNhanVienIDChanging(long value);
    partial void OnNhanVienIDChanged();
    partial void OnQuyenChanging(int value);
    partial void OnQuyenChanged();
    partial void OnTrangThaiChanging(bool value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public NGUOIDUNG()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[Column(Storage="_NguoiDungID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long NguoiDungID
		{
			get
			{
				return this._NguoiDungID;
			}
			set
			{
				if ((this._NguoiDungID != value))
				{
					this.OnNguoiDungIDChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungID = value;
					this.SendPropertyChanged("NguoiDungID");
					this.OnNguoiDungIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaiKhoan", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_MatKhau", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[Column(Storage="_NhanVienID", DbType="BigInt NOT NULL")]
		public long NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[Column(Storage="_Quyen", DbType="Int NOT NULL")]
		public int Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		[Column(Storage="_TrangThai", DbType="Bit NOT NULL")]
		public bool TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[Association(Name="NHANVIEN_NGUOIDUNG", Storage="_NHANVIEN", ThisKey="NhanVienID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.NGUOIDUNGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.NGUOIDUNGs.Add(this);
						this._NhanVienID = value.NhanVienID;
					}
					else
					{
						this._NhanVienID = default(long);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TYLEHAOMON")]
	public partial class TYLEHAOMON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TyLeHaoMonID;
		
		private int _LoaiTBID;
		
		private short _ThoiGianSD;
		
		private float _TLHaoMon;
		
		private EntityRef<LOAITHIETBI> _LOAITHIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTyLeHaoMonIDChanging(int value);
    partial void OnTyLeHaoMonIDChanged();
    partial void OnLoaiTBIDChanging(int value);
    partial void OnLoaiTBIDChanged();
    partial void OnThoiGianSDChanging(short value);
    partial void OnThoiGianSDChanged();
    partial void OnTLHaoMonChanging(float value);
    partial void OnTLHaoMonChanged();
    #endregion
		
		public TYLEHAOMON()
		{
			this._LOAITHIETBI = default(EntityRef<LOAITHIETBI>);
			OnCreated();
		}
		
		[Column(Storage="_TyLeHaoMonID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TyLeHaoMonID
		{
			get
			{
				return this._TyLeHaoMonID;
			}
			set
			{
				if ((this._TyLeHaoMonID != value))
				{
					this.OnTyLeHaoMonIDChanging(value);
					this.SendPropertyChanging();
					this._TyLeHaoMonID = value;
					this.SendPropertyChanged("TyLeHaoMonID");
					this.OnTyLeHaoMonIDChanged();
				}
			}
		}
		
		[Column(Storage="_LoaiTBID", DbType="Int NOT NULL")]
		public int LoaiTBID
		{
			get
			{
				return this._LoaiTBID;
			}
			set
			{
				if ((this._LoaiTBID != value))
				{
					if (this._LOAITHIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiTBIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiTBID = value;
					this.SendPropertyChanged("LoaiTBID");
					this.OnLoaiTBIDChanged();
				}
			}
		}
		
		[Column(Storage="_ThoiGianSD", DbType="SmallInt NOT NULL")]
		public short ThoiGianSD
		{
			get
			{
				return this._ThoiGianSD;
			}
			set
			{
				if ((this._ThoiGianSD != value))
				{
					this.OnThoiGianSDChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianSD = value;
					this.SendPropertyChanged("ThoiGianSD");
					this.OnThoiGianSDChanged();
				}
			}
		}
		
		[Column(Storage="_TLHaoMon", DbType="Real NOT NULL")]
		public float TLHaoMon
		{
			get
			{
				return this._TLHaoMon;
			}
			set
			{
				if ((this._TLHaoMon != value))
				{
					this.OnTLHaoMonChanging(value);
					this.SendPropertyChanging();
					this._TLHaoMon = value;
					this.SendPropertyChanged("TLHaoMon");
					this.OnTLHaoMonChanged();
				}
			}
		}
		
		[Association(Name="LOAITHIETBI_TYLEHAOMON", Storage="_LOAITHIETBI", ThisKey="LoaiTBID", IsForeignKey=true)]
		public LOAITHIETBI LOAITHIETBI
		{
			get
			{
				return this._LOAITHIETBI.Entity;
			}
			set
			{
				LOAITHIETBI previousValue = this._LOAITHIETBI.Entity;
				if (((previousValue != value) 
							|| (this._LOAITHIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAITHIETBI.Entity = null;
						previousValue.TYLEHAOMONs.Remove(this);
					}
					this._LOAITHIETBI.Entity = value;
					if ((value != null))
					{
						value.TYLEHAOMONs.Add(this);
						this._LoaiTBID = value.LoaiTBID;
					}
					else
					{
						this._LoaiTBID = default(int);
					}
					this.SendPropertyChanged("LOAITHIETBI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CTBANGIAO")]
	public partial class CTBANGIAO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CTBanGiaoID;
		
		private int _BanGiaoID;
		
		private long _ThietBiID;
		
		private EntityRef<BANGIAO> _BANGIAO;
		
		private EntityRef<SOTHEODOI> _SOTHEODOI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCTBanGiaoIDChanging(int value);
    partial void OnCTBanGiaoIDChanged();
    partial void OnBanGiaoIDChanging(int value);
    partial void OnBanGiaoIDChanged();
    partial void OnGTThietBiIDChanging(long value);
    partial void OnGTThietBiIDChanged();
    #endregion
		
		public CTBANGIAO()
		{
			this._BANGIAO = default(EntityRef<BANGIAO>);
			this._SOTHEODOI = default(EntityRef<SOTHEODOI>);
			OnCreated();
		}
		
		[Column(Storage="_CTBanGiaoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CTBanGiaoID
		{
			get
			{
				return this._CTBanGiaoID;
			}
			set
			{
				if ((this._CTBanGiaoID != value))
				{
					this.OnCTBanGiaoIDChanging(value);
					this.SendPropertyChanging();
					this._CTBanGiaoID = value;
					this.SendPropertyChanged("CTBanGiaoID");
					this.OnCTBanGiaoIDChanged();
				}
			}
		}
		
		[Column(Storage="_BanGiaoID", DbType="Int NOT NULL")]
		public int BanGiaoID
		{
			get
			{
				return this._BanGiaoID;
			}
			set
			{
				if ((this._BanGiaoID != value))
				{
					if (this._BANGIAO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBanGiaoIDChanging(value);
					this.SendPropertyChanging();
					this._BanGiaoID = value;
					this.SendPropertyChanged("BanGiaoID");
					this.OnBanGiaoIDChanged();
				}
			}
		}
		
		[Column(Storage="_ThietBiID", DbType="BigInt NOT NULL")]
		public long GTThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					if (this._SOTHEODOI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGTThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("GTThietBiID");
					this.OnGTThietBiIDChanged();
				}
			}
		}
		
		[Association(Name="BANGIAO_CTBANGIAO", Storage="_BANGIAO", ThisKey="BanGiaoID", IsForeignKey=true)]
		public BANGIAO BANGIAO
		{
			get
			{
				return this._BANGIAO.Entity;
			}
			set
			{
				BANGIAO previousValue = this._BANGIAO.Entity;
				if (((previousValue != value) 
							|| (this._BANGIAO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BANGIAO.Entity = null;
						previousValue.CTBANGIAOs.Remove(this);
					}
					this._BANGIAO.Entity = value;
					if ((value != null))
					{
						value.CTBANGIAOs.Add(this);
						this._BanGiaoID = value.BanGiaoID;
					}
					else
					{
						this._BanGiaoID = default(int);
					}
					this.SendPropertyChanged("BANGIAO");
				}
			}
		}
		
		[Association(Name="SOTHEODOI_CTBANGIAO", Storage="_SOTHEODOI", ThisKey="GTThietBiID", OtherKey="GTThietBiID", IsForeignKey=true)]
		public SOTHEODOI SOTHEODOI
		{
			get
			{
				return this._SOTHEODOI.Entity;
			}
			set
			{
				SOTHEODOI previousValue = this._SOTHEODOI.Entity;
				if (((previousValue != value) 
							|| (this._SOTHEODOI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SOTHEODOI.Entity = null;
						previousValue.CTBANGIAOs.Remove(this);
					}
					this._SOTHEODOI.Entity = value;
					if ((value != null))
					{
						value.CTBANGIAOs.Add(this);
						this._ThietBiID = value.GTThietBiID;
					}
					else
					{
						this._ThietBiID = default(long);
					}
					this.SendPropertyChanged("SOTHEODOI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.BANGIAO")]
	public partial class BANGIAO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BanGiaoID;
		
		private string _SoVanBan;
		
		private System.Nullable<System.DateTime> _NgayVanBan;
		
		private string _ThamQuyenQD;
		
		private System.Nullable<System.DateTime> _NgayBanGiao;
		
		private int _DonViBanGiao;
		
		private int _BoPhanBanGiao;
		
		private long _NhanVienBanGiao;
		
		private int _DonViNhan;
		
		private int _BoPhanNhan;
		
		private long _NhanVienNhan;
		
		private string _GhiChu;
		
		private EntitySet<CTBANGIAO> _CTBANGIAOs;
		
		private EntityRef<DONVI> _DONVI;
		
		private EntityRef<DONVI> _DONVI1;
		
		private EntityRef<BOPHAN> _BOPHAN;
		
		private EntityRef<BOPHAN> _BOPHAN1;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<NHANVIEN> _NHANVIEN1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBanGiaoIDChanging(int value);
    partial void OnBanGiaoIDChanged();
    partial void OnSoVanBanChanging(string value);
    partial void OnSoVanBanChanged();
    partial void OnNgayVanBanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayVanBanChanged();
    partial void OnThamQuyenQDChanging(string value);
    partial void OnThamQuyenQDChanged();
    partial void OnNgayBanGiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBanGiaoChanged();
    partial void OnDonViBanGiaoChanging(int value);
    partial void OnDonViBanGiaoChanged();
    partial void OnBoPhanBanGiaoChanging(int value);
    partial void OnBoPhanBanGiaoChanged();
    partial void OnNhanVienBanGiaoChanging(long value);
    partial void OnNhanVienBanGiaoChanged();
    partial void OnDonViNhanChanging(int value);
    partial void OnDonViNhanChanged();
    partial void OnBoPhanNhanChanging(int value);
    partial void OnBoPhanNhanChanged();
    partial void OnNhanVienNhanChanging(long value);
    partial void OnNhanVienNhanChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public BANGIAO()
		{
			this._CTBANGIAOs = new EntitySet<CTBANGIAO>(new Action<CTBANGIAO>(this.attach_CTBANGIAOs), new Action<CTBANGIAO>(this.detach_CTBANGIAOs));
			this._DONVI = default(EntityRef<DONVI>);
			this._DONVI1 = default(EntityRef<DONVI>);
			this._BOPHAN = default(EntityRef<BOPHAN>);
			this._BOPHAN1 = default(EntityRef<BOPHAN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._NHANVIEN1 = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[Column(Storage="_BanGiaoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BanGiaoID
		{
			get
			{
				return this._BanGiaoID;
			}
			set
			{
				if ((this._BanGiaoID != value))
				{
					this.OnBanGiaoIDChanging(value);
					this.SendPropertyChanging();
					this._BanGiaoID = value;
					this.SendPropertyChanged("BanGiaoID");
					this.OnBanGiaoIDChanged();
				}
			}
		}
		
		[Column(Storage="_SoVanBan", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string SoVanBan
		{
			get
			{
				return this._SoVanBan;
			}
			set
			{
				if ((this._SoVanBan != value))
				{
					this.OnSoVanBanChanging(value);
					this.SendPropertyChanging();
					this._SoVanBan = value;
					this.SendPropertyChanged("SoVanBan");
					this.OnSoVanBanChanged();
				}
			}
		}
		
		[Column(Storage="_NgayVanBan", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayVanBan
		{
			get
			{
				return this._NgayVanBan;
			}
			set
			{
				if ((this._NgayVanBan != value))
				{
					this.OnNgayVanBanChanging(value);
					this.SendPropertyChanging();
					this._NgayVanBan = value;
					this.SendPropertyChanged("NgayVanBan");
					this.OnNgayVanBanChanged();
				}
			}
		}
		
		[Column(Storage="_ThamQuyenQD", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ThamQuyenQD
		{
			get
			{
				return this._ThamQuyenQD;
			}
			set
			{
				if ((this._ThamQuyenQD != value))
				{
					this.OnThamQuyenQDChanging(value);
					this.SendPropertyChanging();
					this._ThamQuyenQD = value;
					this.SendPropertyChanged("ThamQuyenQD");
					this.OnThamQuyenQDChanged();
				}
			}
		}
		
		[Column(Storage="_NgayBanGiao", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayBanGiao
		{
			get
			{
				return this._NgayBanGiao;
			}
			set
			{
				if ((this._NgayBanGiao != value))
				{
					this.OnNgayBanGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayBanGiao = value;
					this.SendPropertyChanged("NgayBanGiao");
					this.OnNgayBanGiaoChanged();
				}
			}
		}
		
		[Column(Storage="_DonViBanGiao", DbType="Int NOT NULL")]
		public int DonViBanGiao
		{
			get
			{
				return this._DonViBanGiao;
			}
			set
			{
				if ((this._DonViBanGiao != value))
				{
					if (this._DONVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonViBanGiaoChanging(value);
					this.SendPropertyChanging();
					this._DonViBanGiao = value;
					this.SendPropertyChanged("DonViBanGiao");
					this.OnDonViBanGiaoChanged();
				}
			}
		}
		
		[Column(Storage="_BoPhanBanGiao", DbType="Int NOT NULL")]
		public int BoPhanBanGiao
		{
			get
			{
				return this._BoPhanBanGiao;
			}
			set
			{
				if ((this._BoPhanBanGiao != value))
				{
					if (this._BOPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoPhanBanGiaoChanging(value);
					this.SendPropertyChanging();
					this._BoPhanBanGiao = value;
					this.SendPropertyChanged("BoPhanBanGiao");
					this.OnBoPhanBanGiaoChanged();
				}
			}
		}
		
		[Column(Storage="_NhanVienBanGiao", DbType="BigInt NOT NULL")]
		public long NhanVienBanGiao
		{
			get
			{
				return this._NhanVienBanGiao;
			}
			set
			{
				if ((this._NhanVienBanGiao != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienBanGiaoChanging(value);
					this.SendPropertyChanging();
					this._NhanVienBanGiao = value;
					this.SendPropertyChanged("NhanVienBanGiao");
					this.OnNhanVienBanGiaoChanged();
				}
			}
		}
		
		[Column(Storage="_DonViNhan", DbType="Int NOT NULL")]
		public int DonViNhan
		{
			get
			{
				return this._DonViNhan;
			}
			set
			{
				if ((this._DonViNhan != value))
				{
					if (this._DONVI1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonViNhanChanging(value);
					this.SendPropertyChanging();
					this._DonViNhan = value;
					this.SendPropertyChanged("DonViNhan");
					this.OnDonViNhanChanged();
				}
			}
		}
		
		[Column(Storage="_BoPhanNhan", DbType="Int NOT NULL")]
		public int BoPhanNhan
		{
			get
			{
				return this._BoPhanNhan;
			}
			set
			{
				if ((this._BoPhanNhan != value))
				{
					if (this._BOPHAN1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoPhanNhanChanging(value);
					this.SendPropertyChanging();
					this._BoPhanNhan = value;
					this.SendPropertyChanged("BoPhanNhan");
					this.OnBoPhanNhanChanged();
				}
			}
		}
		
		[Column(Storage="_NhanVienNhan", DbType="BigInt NOT NULL")]
		public long NhanVienNhan
		{
			get
			{
				return this._NhanVienNhan;
			}
			set
			{
				if ((this._NhanVienNhan != value))
				{
					if (this._NHANVIEN1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienNhanChanging(value);
					this.SendPropertyChanging();
					this._NhanVienNhan = value;
					this.SendPropertyChanged("NhanVienNhan");
					this.OnNhanVienNhanChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChu", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[Association(Name="BANGIAO_CTBANGIAO", Storage="_CTBANGIAOs", OtherKey="BanGiaoID")]
		public EntitySet<CTBANGIAO> CTBANGIAOs
		{
			get
			{
				return this._CTBANGIAOs;
			}
			set
			{
				this._CTBANGIAOs.Assign(value);
			}
		}
		
		[Association(Name="DONVI_BANGIAO", Storage="_DONVI", ThisKey="DonViBanGiao", IsForeignKey=true)]
		public DONVI DONVI
		{
			get
			{
				return this._DONVI.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI.Entity;
				if (((previousValue != value) 
							|| (this._DONVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI.Entity = null;
						previousValue.BANGIAOs.Remove(this);
					}
					this._DONVI.Entity = value;
					if ((value != null))
					{
						value.BANGIAOs.Add(this);
						this._DonViBanGiao = value.DonViID;
					}
					else
					{
						this._DonViBanGiao = default(int);
					}
					this.SendPropertyChanged("DONVI");
				}
			}
		}
		
		[Association(Name="DONVI_BANGIAO1", Storage="_DONVI1", ThisKey="DonViNhan", IsForeignKey=true)]
		public DONVI DONVI1
		{
			get
			{
				return this._DONVI1.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI1.Entity;
				if (((previousValue != value) 
							|| (this._DONVI1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI1.Entity = null;
						previousValue.BANGIAOs1.Remove(this);
					}
					this._DONVI1.Entity = value;
					if ((value != null))
					{
						value.BANGIAOs1.Add(this);
						this._DonViNhan = value.DonViID;
					}
					else
					{
						this._DonViNhan = default(int);
					}
					this.SendPropertyChanged("DONVI1");
				}
			}
		}
		
		[Association(Name="BOPHAN_BANGIAO", Storage="_BOPHAN", ThisKey="BoPhanBanGiao", IsForeignKey=true)]
		public BOPHAN BOPHAN
		{
			get
			{
				return this._BOPHAN.Entity;
			}
			set
			{
				BOPHAN previousValue = this._BOPHAN.Entity;
				if (((previousValue != value) 
							|| (this._BOPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BOPHAN.Entity = null;
						previousValue.BANGIAOs.Remove(this);
					}
					this._BOPHAN.Entity = value;
					if ((value != null))
					{
						value.BANGIAOs.Add(this);
						this._BoPhanBanGiao = value.BoPhanID;
					}
					else
					{
						this._BoPhanBanGiao = default(int);
					}
					this.SendPropertyChanged("BOPHAN");
				}
			}
		}
		
		[Association(Name="BOPHAN_BANGIAO1", Storage="_BOPHAN1", ThisKey="BoPhanNhan", IsForeignKey=true)]
		public BOPHAN BOPHAN1
		{
			get
			{
				return this._BOPHAN1.Entity;
			}
			set
			{
				BOPHAN previousValue = this._BOPHAN1.Entity;
				if (((previousValue != value) 
							|| (this._BOPHAN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BOPHAN1.Entity = null;
						previousValue.BANGIAOs1.Remove(this);
					}
					this._BOPHAN1.Entity = value;
					if ((value != null))
					{
						value.BANGIAOs1.Add(this);
						this._BoPhanNhan = value.BoPhanID;
					}
					else
					{
						this._BoPhanNhan = default(int);
					}
					this.SendPropertyChanged("BOPHAN1");
				}
			}
		}
		
		[Association(Name="NHANVIEN_BANGIAO", Storage="_NHANVIEN", ThisKey="NhanVienBanGiao", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.BANGIAOs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.BANGIAOs.Add(this);
						this._NhanVienBanGiao = value.NhanVienID;
					}
					else
					{
						this._NhanVienBanGiao = default(long);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[Association(Name="NHANVIEN_BANGIAO1", Storage="_NHANVIEN1", ThisKey="NhanVienNhan", IsForeignKey=true)]
		public NHANVIEN NHANVIEN1
		{
			get
			{
				return this._NHANVIEN1.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN1.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN1.Entity = null;
						previousValue.BANGIAOs1.Remove(this);
					}
					this._NHANVIEN1.Entity = value;
					if ((value != null))
					{
						value.BANGIAOs1.Add(this);
						this._NhanVienNhan = value.NhanVienID;
					}
					else
					{
						this._NhanVienNhan = default(long);
					}
					this.SendPropertyChanged("NHANVIEN1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTBANGIAOs(CTBANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.BANGIAO = this;
		}
		
		private void detach_CTBANGIAOs(CTBANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.BANGIAO = null;
		}
	}
	
	[Table(Name="dbo.THANHLY")]
	public partial class THANHLY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThanhLyID;
		
		private string _SoVanBan;
		
		private System.Nullable<System.DateTime> _NgayVanBan;
		
		private string _ThamQuyenQD;
		
		private System.Nullable<System.DateTime> _NgayThanhLy;
		
		private long _DaiDienThanhLy;
		
		private string _DaiDienBenMua;
		
		private string _GhiChu;
		
		private EntitySet<CTTHANHLY> _CTTHANHLies;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThanhLyIDChanging(int value);
    partial void OnThanhLyIDChanged();
    partial void OnSoVanBanChanging(string value);
    partial void OnSoVanBanChanged();
    partial void OnNgayVanBanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayVanBanChanged();
    partial void OnThamQuyenQDChanging(string value);
    partial void OnThamQuyenQDChanged();
    partial void OnNgayThanhLyChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhLyChanged();
    partial void OnDaiDienThanhLyChanging(long value);
    partial void OnDaiDienThanhLyChanged();
    partial void OnDaiDienBenMuaChanging(string value);
    partial void OnDaiDienBenMuaChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public THANHLY()
		{
			this._CTTHANHLies = new EntitySet<CTTHANHLY>(new Action<CTTHANHLY>(this.attach_CTTHANHLies), new Action<CTTHANHLY>(this.detach_CTTHANHLies));
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[Column(Storage="_ThanhLyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThanhLyID
		{
			get
			{
				return this._ThanhLyID;
			}
			set
			{
				if ((this._ThanhLyID != value))
				{
					this.OnThanhLyIDChanging(value);
					this.SendPropertyChanging();
					this._ThanhLyID = value;
					this.SendPropertyChanged("ThanhLyID");
					this.OnThanhLyIDChanged();
				}
			}
		}
		
		[Column(Storage="_SoVanBan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SoVanBan
		{
			get
			{
				return this._SoVanBan;
			}
			set
			{
				if ((this._SoVanBan != value))
				{
					this.OnSoVanBanChanging(value);
					this.SendPropertyChanging();
					this._SoVanBan = value;
					this.SendPropertyChanged("SoVanBan");
					this.OnSoVanBanChanged();
				}
			}
		}
		
		[Column(Storage="_NgayVanBan", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayVanBan
		{
			get
			{
				return this._NgayVanBan;
			}
			set
			{
				if ((this._NgayVanBan != value))
				{
					this.OnNgayVanBanChanging(value);
					this.SendPropertyChanging();
					this._NgayVanBan = value;
					this.SendPropertyChanged("NgayVanBan");
					this.OnNgayVanBanChanged();
				}
			}
		}
		
		[Column(Storage="_ThamQuyenQD", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ThamQuyenQD
		{
			get
			{
				return this._ThamQuyenQD;
			}
			set
			{
				if ((this._ThamQuyenQD != value))
				{
					this.OnThamQuyenQDChanging(value);
					this.SendPropertyChanging();
					this._ThamQuyenQD = value;
					this.SendPropertyChanged("ThamQuyenQD");
					this.OnThamQuyenQDChanged();
				}
			}
		}
		
		[Column(Storage="_NgayThanhLy", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayThanhLy
		{
			get
			{
				return this._NgayThanhLy;
			}
			set
			{
				if ((this._NgayThanhLy != value))
				{
					this.OnNgayThanhLyChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhLy = value;
					this.SendPropertyChanged("NgayThanhLy");
					this.OnNgayThanhLyChanged();
				}
			}
		}
		
		[Column(Storage="_DaiDienThanhLy", DbType="BigInt NOT NULL")]
		public long DaiDienThanhLy
		{
			get
			{
				return this._DaiDienThanhLy;
			}
			set
			{
				if ((this._DaiDienThanhLy != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDaiDienThanhLyChanging(value);
					this.SendPropertyChanging();
					this._DaiDienThanhLy = value;
					this.SendPropertyChanged("DaiDienThanhLy");
					this.OnDaiDienThanhLyChanged();
				}
			}
		}
		
		[Column(Storage="_DaiDienBenMua", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DaiDienBenMua
		{
			get
			{
				return this._DaiDienBenMua;
			}
			set
			{
				if ((this._DaiDienBenMua != value))
				{
					this.OnDaiDienBenMuaChanging(value);
					this.SendPropertyChanging();
					this._DaiDienBenMua = value;
					this.SendPropertyChanged("DaiDienBenMua");
					this.OnDaiDienBenMuaChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChu", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[Association(Name="THANHLY_CTTHANHLY", Storage="_CTTHANHLies", OtherKey="ThanhLyID")]
		public EntitySet<CTTHANHLY> CTTHANHLies
		{
			get
			{
				return this._CTTHANHLies;
			}
			set
			{
				this._CTTHANHLies.Assign(value);
			}
		}
		
		[Association(Name="NHANVIEN_THANHLY", Storage="_NHANVIEN", ThisKey="DaiDienThanhLy", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.THANHLies.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.THANHLies.Add(this);
						this._DaiDienThanhLy = value.NhanVienID;
					}
					else
					{
						this._DaiDienThanhLy = default(long);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTTHANHLies(CTTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.THANHLY = this;
		}
		
		private void detach_CTTHANHLies(CTTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.THANHLY = null;
		}
	}
	
	[Table(Name="dbo.THUHOI")]
	public partial class THUHOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThuHoiID;
		
		private string _SoVanBan;
		
		private System.Nullable<System.DateTime> _NgayVanBan;
		
		private string _ThamQuyenQD;
		
		private System.Nullable<System.DateTime> _NgayThuHoi;
		
		private int _DonViThuHoi;
		
		private long _DaiDienThuHoi;
		
		private int _DonViSuDung;
		
		private int _BoPhanSuDung;
		
		private int _LiDoThuHoi;
		
		private string _GhiChu;
		
		private EntitySet<CTTHUHOI> _CTTHUHOIs;
		
		private EntityRef<DONVI> _DONVI;
		
		private EntityRef<DONVI> _DONVI1;
		
		private EntityRef<BOPHAN> _BOPHAN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<TINHTRANG> _TINHTRANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThuHoiIDChanging(int value);
    partial void OnThuHoiIDChanged();
    partial void OnSoVanBanChanging(string value);
    partial void OnSoVanBanChanged();
    partial void OnNgayVanBanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayVanBanChanged();
    partial void OnThamQuyenQDChanging(string value);
    partial void OnThamQuyenQDChanged();
    partial void OnNgayThuHoiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThuHoiChanged();
    partial void OnDonViThuHoiChanging(int value);
    partial void OnDonViThuHoiChanged();
    partial void OnDaiDienThuHoiChanging(long value);
    partial void OnDaiDienThuHoiChanged();
    partial void OnDonViSuDungChanging(int value);
    partial void OnDonViSuDungChanged();
    partial void OnBoPhanSuDungChanging(int value);
    partial void OnBoPhanSuDungChanged();
    partial void OnLiDoThuHoiChanging(int value);
    partial void OnLiDoThuHoiChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public THUHOI()
		{
			this._CTTHUHOIs = new EntitySet<CTTHUHOI>(new Action<CTTHUHOI>(this.attach_CTTHUHOIs), new Action<CTTHUHOI>(this.detach_CTTHUHOIs));
			this._DONVI = default(EntityRef<DONVI>);
			this._DONVI1 = default(EntityRef<DONVI>);
			this._BOPHAN = default(EntityRef<BOPHAN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._TINHTRANG = default(EntityRef<TINHTRANG>);
			OnCreated();
		}
		
		[Column(Storage="_ThuHoiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThuHoiID
		{
			get
			{
				return this._ThuHoiID;
			}
			set
			{
				if ((this._ThuHoiID != value))
				{
					this.OnThuHoiIDChanging(value);
					this.SendPropertyChanging();
					this._ThuHoiID = value;
					this.SendPropertyChanged("ThuHoiID");
					this.OnThuHoiIDChanged();
				}
			}
		}
		
		[Column(Storage="_SoVanBan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SoVanBan
		{
			get
			{
				return this._SoVanBan;
			}
			set
			{
				if ((this._SoVanBan != value))
				{
					this.OnSoVanBanChanging(value);
					this.SendPropertyChanging();
					this._SoVanBan = value;
					this.SendPropertyChanged("SoVanBan");
					this.OnSoVanBanChanged();
				}
			}
		}
		
		[Column(Storage="_NgayVanBan", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayVanBan
		{
			get
			{
				return this._NgayVanBan;
			}
			set
			{
				if ((this._NgayVanBan != value))
				{
					this.OnNgayVanBanChanging(value);
					this.SendPropertyChanging();
					this._NgayVanBan = value;
					this.SendPropertyChanged("NgayVanBan");
					this.OnNgayVanBanChanged();
				}
			}
		}
		
		[Column(Storage="_ThamQuyenQD", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ThamQuyenQD
		{
			get
			{
				return this._ThamQuyenQD;
			}
			set
			{
				if ((this._ThamQuyenQD != value))
				{
					this.OnThamQuyenQDChanging(value);
					this.SendPropertyChanging();
					this._ThamQuyenQD = value;
					this.SendPropertyChanged("ThamQuyenQD");
					this.OnThamQuyenQDChanged();
				}
			}
		}
		
		[Column(Storage="_NgayThuHoi", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayThuHoi
		{
			get
			{
				return this._NgayThuHoi;
			}
			set
			{
				if ((this._NgayThuHoi != value))
				{
					this.OnNgayThuHoiChanging(value);
					this.SendPropertyChanging();
					this._NgayThuHoi = value;
					this.SendPropertyChanged("NgayThuHoi");
					this.OnNgayThuHoiChanged();
				}
			}
		}
		
		[Column(Storage="_DonViThuHoi", DbType="Int NOT NULL")]
		public int DonViThuHoi
		{
			get
			{
				return this._DonViThuHoi;
			}
			set
			{
				if ((this._DonViThuHoi != value))
				{
					if (this._DONVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonViThuHoiChanging(value);
					this.SendPropertyChanging();
					this._DonViThuHoi = value;
					this.SendPropertyChanged("DonViThuHoi");
					this.OnDonViThuHoiChanged();
				}
			}
		}
		
		[Column(Storage="_DaiDienThuHoi", DbType="BigInt NOT NULL")]
		public long DaiDienThuHoi
		{
			get
			{
				return this._DaiDienThuHoi;
			}
			set
			{
				if ((this._DaiDienThuHoi != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDaiDienThuHoiChanging(value);
					this.SendPropertyChanging();
					this._DaiDienThuHoi = value;
					this.SendPropertyChanged("DaiDienThuHoi");
					this.OnDaiDienThuHoiChanged();
				}
			}
		}
		
		[Column(Storage="_DonViSuDung", DbType="Int NOT NULL")]
		public int DonViSuDung
		{
			get
			{
				return this._DonViSuDung;
			}
			set
			{
				if ((this._DonViSuDung != value))
				{
					if (this._DONVI1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonViSuDungChanging(value);
					this.SendPropertyChanging();
					this._DonViSuDung = value;
					this.SendPropertyChanged("DonViSuDung");
					this.OnDonViSuDungChanged();
				}
			}
		}
		
		[Column(Storage="_BoPhanSuDung", DbType="Int NOT NULL")]
		public int BoPhanSuDung
		{
			get
			{
				return this._BoPhanSuDung;
			}
			set
			{
				if ((this._BoPhanSuDung != value))
				{
					if (this._BOPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoPhanSuDungChanging(value);
					this.SendPropertyChanging();
					this._BoPhanSuDung = value;
					this.SendPropertyChanged("BoPhanSuDung");
					this.OnBoPhanSuDungChanged();
				}
			}
		}
		
		[Column(Storage="_LiDoThuHoi", DbType="Int NOT NULL")]
		public int LiDoThuHoi
		{
			get
			{
				return this._LiDoThuHoi;
			}
			set
			{
				if ((this._LiDoThuHoi != value))
				{
					if (this._TINHTRANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLiDoThuHoiChanging(value);
					this.SendPropertyChanging();
					this._LiDoThuHoi = value;
					this.SendPropertyChanged("LiDoThuHoi");
					this.OnLiDoThuHoiChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChu", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[Association(Name="THUHOI_CTTHUHOI", Storage="_CTTHUHOIs", OtherKey="ThuHoiID")]
		public EntitySet<CTTHUHOI> CTTHUHOIs
		{
			get
			{
				return this._CTTHUHOIs;
			}
			set
			{
				this._CTTHUHOIs.Assign(value);
			}
		}
		
		[Association(Name="DONVI_THUHOI", Storage="_DONVI", ThisKey="DonViThuHoi", IsForeignKey=true)]
		public DONVI DONVI
		{
			get
			{
				return this._DONVI.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI.Entity;
				if (((previousValue != value) 
							|| (this._DONVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI.Entity = null;
						previousValue.THUHOIs.Remove(this);
					}
					this._DONVI.Entity = value;
					if ((value != null))
					{
						value.THUHOIs.Add(this);
						this._DonViThuHoi = value.DonViID;
					}
					else
					{
						this._DonViThuHoi = default(int);
					}
					this.SendPropertyChanged("DONVI");
				}
			}
		}
		
		[Association(Name="DONVI_THUHOI1", Storage="_DONVI1", ThisKey="DonViSuDung", IsForeignKey=true)]
		public DONVI DONVI1
		{
			get
			{
				return this._DONVI1.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI1.Entity;
				if (((previousValue != value) 
							|| (this._DONVI1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI1.Entity = null;
						previousValue.THUHOIs1.Remove(this);
					}
					this._DONVI1.Entity = value;
					if ((value != null))
					{
						value.THUHOIs1.Add(this);
						this._DonViSuDung = value.DonViID;
					}
					else
					{
						this._DonViSuDung = default(int);
					}
					this.SendPropertyChanged("DONVI1");
				}
			}
		}
		
		[Association(Name="BOPHAN_THUHOI", Storage="_BOPHAN", ThisKey="BoPhanSuDung", IsForeignKey=true)]
		public BOPHAN BOPHAN
		{
			get
			{
				return this._BOPHAN.Entity;
			}
			set
			{
				BOPHAN previousValue = this._BOPHAN.Entity;
				if (((previousValue != value) 
							|| (this._BOPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BOPHAN.Entity = null;
						previousValue.THUHOIs.Remove(this);
					}
					this._BOPHAN.Entity = value;
					if ((value != null))
					{
						value.THUHOIs.Add(this);
						this._BoPhanSuDung = value.BoPhanID;
					}
					else
					{
						this._BoPhanSuDung = default(int);
					}
					this.SendPropertyChanged("BOPHAN");
				}
			}
		}
		
		[Association(Name="NHANVIEN_THUHOI", Storage="_NHANVIEN", ThisKey="DaiDienThuHoi", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.THUHOIs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.THUHOIs.Add(this);
						this._DaiDienThuHoi = value.NhanVienID;
					}
					else
					{
						this._DaiDienThuHoi = default(long);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[Association(Name="TINHTRANG_THUHOI", Storage="_TINHTRANG", ThisKey="LiDoThuHoi", IsForeignKey=true)]
		public TINHTRANG TINHTRANG
		{
			get
			{
				return this._TINHTRANG.Entity;
			}
			set
			{
				TINHTRANG previousValue = this._TINHTRANG.Entity;
				if (((previousValue != value) 
							|| (this._TINHTRANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINHTRANG.Entity = null;
						previousValue.THUHOIs.Remove(this);
					}
					this._TINHTRANG.Entity = value;
					if ((value != null))
					{
						value.THUHOIs.Add(this);
						this._LiDoThuHoi = value.TinhTrangID;
					}
					else
					{
						this._LiDoThuHoi = default(int);
					}
					this.SendPropertyChanged("TINHTRANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTTHUHOIs(CTTHUHOI entity)
		{
			this.SendPropertyChanging();
			entity.THUHOI = this;
		}
		
		private void detach_CTTHUHOIs(CTTHUHOI entity)
		{
			this.SendPropertyChanging();
			entity.THUHOI = null;
		}
	}
	
	[Table(Name="dbo.CTTHUHOI")]
	public partial class CTTHUHOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CTThuHoiID;
		
		private int _ThuHoiID;
		
		private long _ThietBiID;
		
		private short _SoLuong;
		
		private string _HienTrang;
		
		private EntityRef<THIETBI> _THIETBI;
		
		private EntityRef<THUHOI> _THUHOI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCTThuHoiIDChanging(int value);
    partial void OnCTThuHoiIDChanged();
    partial void OnThuHoiIDChanging(int value);
    partial void OnThuHoiIDChanged();
    partial void OnThietBiIDChanging(long value);
    partial void OnThietBiIDChanged();
    partial void OnSoLuongChanging(short value);
    partial void OnSoLuongChanged();
    partial void OnHienTrangChanging(string value);
    partial void OnHienTrangChanged();
    #endregion
		
		public CTTHUHOI()
		{
			this._THIETBI = default(EntityRef<THIETBI>);
			this._THUHOI = default(EntityRef<THUHOI>);
			OnCreated();
		}
		
		[Column(Storage="_CTThuHoiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CTThuHoiID
		{
			get
			{
				return this._CTThuHoiID;
			}
			set
			{
				if ((this._CTThuHoiID != value))
				{
					this.OnCTThuHoiIDChanging(value);
					this.SendPropertyChanging();
					this._CTThuHoiID = value;
					this.SendPropertyChanged("CTThuHoiID");
					this.OnCTThuHoiIDChanged();
				}
			}
		}
		
		[Column(Storage="_ThuHoiID", DbType="Int NOT NULL")]
		public int ThuHoiID
		{
			get
			{
				return this._ThuHoiID;
			}
			set
			{
				if ((this._ThuHoiID != value))
				{
					if (this._THUHOI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThuHoiIDChanging(value);
					this.SendPropertyChanging();
					this._ThuHoiID = value;
					this.SendPropertyChanged("ThuHoiID");
					this.OnThuHoiIDChanged();
				}
			}
		}
		
		[Column(Storage="_ThietBiID", DbType="BigInt NOT NULL")]
		public long ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_SoLuong", DbType="SmallInt NOT NULL")]
		public short SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[Column(Storage="_HienTrang", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HienTrang
		{
			get
			{
				return this._HienTrang;
			}
			set
			{
				if ((this._HienTrang != value))
				{
					this.OnHienTrangChanging(value);
					this.SendPropertyChanging();
					this._HienTrang = value;
					this.SendPropertyChanged("HienTrang");
					this.OnHienTrangChanged();
				}
			}
		}
		
		[Association(Name="THIETBI_CTTHUHOI", Storage="_THIETBI", ThisKey="ThietBiID", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CTTHUHOIs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CTTHUHOIs.Add(this);
						this._ThietBiID = value.ThietBiID;
					}
					else
					{
						this._ThietBiID = default(long);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		[Association(Name="THUHOI_CTTHUHOI", Storage="_THUHOI", ThisKey="ThuHoiID", IsForeignKey=true)]
		public THUHOI THUHOI
		{
			get
			{
				return this._THUHOI.Entity;
			}
			set
			{
				THUHOI previousValue = this._THUHOI.Entity;
				if (((previousValue != value) 
							|| (this._THUHOI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THUHOI.Entity = null;
						previousValue.CTTHUHOIs.Remove(this);
					}
					this._THUHOI.Entity = value;
					if ((value != null))
					{
						value.CTTHUHOIs.Add(this);
						this._ThuHoiID = value.ThuHoiID;
					}
					else
					{
						this._ThuHoiID = default(int);
					}
					this.SendPropertyChanged("THUHOI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DAIDIENKIEMKE")]
	public partial class DAIDIENKIEMKE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DaiDienKiemKeID = default(int);
		
		private int _KiemKeID;
		
		private long _NhanVienID;
		
		private string _QuyenKiemKe;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<KIEMKE> _KIEMKE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKiemKeIDChanging(int value);
    partial void OnKiemKeIDChanged();
    partial void OnNhanVienIDChanging(long value);
    partial void OnNhanVienIDChanged();
    partial void OnQuyenKiemKeChanging(string value);
    partial void OnQuyenKiemKeChanged();
    #endregion
		
		public DAIDIENKIEMKE()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._KIEMKE = default(EntityRef<KIEMKE>);
			OnCreated();
		}
		
		[Column(Storage="_DaiDienKiemKeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int DaiDienKiemKeID
		{
			get
			{
				return this._DaiDienKiemKeID;
			}
		}
		
		[Column(Storage="_KiemKeID", DbType="Int NOT NULL")]
		public int KiemKeID
		{
			get
			{
				return this._KiemKeID;
			}
			set
			{
				if ((this._KiemKeID != value))
				{
					if (this._KIEMKE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKiemKeIDChanging(value);
					this.SendPropertyChanging();
					this._KiemKeID = value;
					this.SendPropertyChanged("KiemKeID");
					this.OnKiemKeIDChanged();
				}
			}
		}
		
		[Column(Storage="_NhanVienID", DbType="BigInt NOT NULL")]
		public long NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[Column(Storage="_QuyenKiemKe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string QuyenKiemKe
		{
			get
			{
				return this._QuyenKiemKe;
			}
			set
			{
				if ((this._QuyenKiemKe != value))
				{
					this.OnQuyenKiemKeChanging(value);
					this.SendPropertyChanging();
					this._QuyenKiemKe = value;
					this.SendPropertyChanged("QuyenKiemKe");
					this.OnQuyenKiemKeChanged();
				}
			}
		}
		
		[Association(Name="NHANVIEN_DAIDIENKIEMKE", Storage="_NHANVIEN", ThisKey="NhanVienID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.DAIDIENKIEMKEs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.DAIDIENKIEMKEs.Add(this);
						this._NhanVienID = value.NhanVienID;
					}
					else
					{
						this._NhanVienID = default(long);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[Association(Name="KIEMKE_DAIDIENKIEMKE", Storage="_KIEMKE", ThisKey="KiemKeID", IsForeignKey=true)]
		public KIEMKE KIEMKE
		{
			get
			{
				return this._KIEMKE.Entity;
			}
			set
			{
				KIEMKE previousValue = this._KIEMKE.Entity;
				if (((previousValue != value) 
							|| (this._KIEMKE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KIEMKE.Entity = null;
						previousValue.DAIDIENKIEMKEs.Remove(this);
					}
					this._KIEMKE.Entity = value;
					if ((value != null))
					{
						value.DAIDIENKIEMKEs.Add(this);
						this._KiemKeID = value.KiemKeID;
					}
					else
					{
						this._KiemKeID = default(int);
					}
					this.SendPropertyChanged("KIEMKE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.KIEMKE")]
	public partial class KIEMKE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KiemKeID;
		
		private string _SoVanBan;
		
		private System.Nullable<System.DateTime> _NgayVanBan;
		
		private string _ThamQuyenQD;
		
		private System.Nullable<System.DateTime> _NgayKiemKe;
		
		private int _DonViKiemKe;
		
		private int _BoPhanKiemKe;
		
		private string _GhiChu;
		
		private EntitySet<DAIDIENKIEMKE> _DAIDIENKIEMKEs;
		
		private EntitySet<CTKIEMKE> _CTKIEMKEs;
		
		private EntityRef<DONVI> _DONVI;
		
		private EntityRef<BOPHAN> _BOPHAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKiemKeIDChanging(int value);
    partial void OnKiemKeIDChanged();
    partial void OnSoVanBanChanging(string value);
    partial void OnSoVanBanChanged();
    partial void OnNgayVanBanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayVanBanChanged();
    partial void OnThamQuyenQDChanging(string value);
    partial void OnThamQuyenQDChanged();
    partial void OnNgayKiemKeChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKiemKeChanged();
    partial void OnDonViKiemKeChanging(int value);
    partial void OnDonViKiemKeChanged();
    partial void OnBoPhanKiemKeChanging(int value);
    partial void OnBoPhanKiemKeChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public KIEMKE()
		{
			this._DAIDIENKIEMKEs = new EntitySet<DAIDIENKIEMKE>(new Action<DAIDIENKIEMKE>(this.attach_DAIDIENKIEMKEs), new Action<DAIDIENKIEMKE>(this.detach_DAIDIENKIEMKEs));
			this._CTKIEMKEs = new EntitySet<CTKIEMKE>(new Action<CTKIEMKE>(this.attach_CTKIEMKEs), new Action<CTKIEMKE>(this.detach_CTKIEMKEs));
			this._DONVI = default(EntityRef<DONVI>);
			this._BOPHAN = default(EntityRef<BOPHAN>);
			OnCreated();
		}
		
		[Column(Storage="_KiemKeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KiemKeID
		{
			get
			{
				return this._KiemKeID;
			}
			set
			{
				if ((this._KiemKeID != value))
				{
					this.OnKiemKeIDChanging(value);
					this.SendPropertyChanging();
					this._KiemKeID = value;
					this.SendPropertyChanged("KiemKeID");
					this.OnKiemKeIDChanged();
				}
			}
		}
		
		[Column(Storage="_SoVanBan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SoVanBan
		{
			get
			{
				return this._SoVanBan;
			}
			set
			{
				if ((this._SoVanBan != value))
				{
					this.OnSoVanBanChanging(value);
					this.SendPropertyChanging();
					this._SoVanBan = value;
					this.SendPropertyChanged("SoVanBan");
					this.OnSoVanBanChanged();
				}
			}
		}
		
		[Column(Storage="_NgayVanBan", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayVanBan
		{
			get
			{
				return this._NgayVanBan;
			}
			set
			{
				if ((this._NgayVanBan != value))
				{
					this.OnNgayVanBanChanging(value);
					this.SendPropertyChanging();
					this._NgayVanBan = value;
					this.SendPropertyChanged("NgayVanBan");
					this.OnNgayVanBanChanged();
				}
			}
		}
		
		[Column(Storage="_ThamQuyenQD", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ThamQuyenQD
		{
			get
			{
				return this._ThamQuyenQD;
			}
			set
			{
				if ((this._ThamQuyenQD != value))
				{
					this.OnThamQuyenQDChanging(value);
					this.SendPropertyChanging();
					this._ThamQuyenQD = value;
					this.SendPropertyChanged("ThamQuyenQD");
					this.OnThamQuyenQDChanged();
				}
			}
		}
		
		[Column(Storage="_NgayKiemKe", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayKiemKe
		{
			get
			{
				return this._NgayKiemKe;
			}
			set
			{
				if ((this._NgayKiemKe != value))
				{
					this.OnNgayKiemKeChanging(value);
					this.SendPropertyChanging();
					this._NgayKiemKe = value;
					this.SendPropertyChanged("NgayKiemKe");
					this.OnNgayKiemKeChanged();
				}
			}
		}
		
		[Column(Storage="_DonViKiemKe", DbType="Int NOT NULL")]
		public int DonViKiemKe
		{
			get
			{
				return this._DonViKiemKe;
			}
			set
			{
				if ((this._DonViKiemKe != value))
				{
					if (this._DONVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonViKiemKeChanging(value);
					this.SendPropertyChanging();
					this._DonViKiemKe = value;
					this.SendPropertyChanged("DonViKiemKe");
					this.OnDonViKiemKeChanged();
				}
			}
		}
		
		[Column(Storage="_BoPhanKiemKe", DbType="Int NOT NULL")]
		public int BoPhanKiemKe
		{
			get
			{
				return this._BoPhanKiemKe;
			}
			set
			{
				if ((this._BoPhanKiemKe != value))
				{
					if (this._BOPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoPhanKiemKeChanging(value);
					this.SendPropertyChanging();
					this._BoPhanKiemKe = value;
					this.SendPropertyChanged("BoPhanKiemKe");
					this.OnBoPhanKiemKeChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChu", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[Association(Name="KIEMKE_DAIDIENKIEMKE", Storage="_DAIDIENKIEMKEs", OtherKey="KiemKeID")]
		public EntitySet<DAIDIENKIEMKE> DAIDIENKIEMKEs
		{
			get
			{
				return this._DAIDIENKIEMKEs;
			}
			set
			{
				this._DAIDIENKIEMKEs.Assign(value);
			}
		}
		
		[Association(Name="KIEMKE_CTKIEMKE", Storage="_CTKIEMKEs", OtherKey="KiemKeID")]
		public EntitySet<CTKIEMKE> CTKIEMKEs
		{
			get
			{
				return this._CTKIEMKEs;
			}
			set
			{
				this._CTKIEMKEs.Assign(value);
			}
		}
		
		[Association(Name="DONVI_KIEMKE", Storage="_DONVI", ThisKey="DonViKiemKe", IsForeignKey=true)]
		public DONVI DONVI
		{
			get
			{
				return this._DONVI.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI.Entity;
				if (((previousValue != value) 
							|| (this._DONVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI.Entity = null;
						previousValue.KIEMKEs.Remove(this);
					}
					this._DONVI.Entity = value;
					if ((value != null))
					{
						value.KIEMKEs.Add(this);
						this._DonViKiemKe = value.DonViID;
					}
					else
					{
						this._DonViKiemKe = default(int);
					}
					this.SendPropertyChanged("DONVI");
				}
			}
		}
		
		[Association(Name="BOPHAN_KIEMKE", Storage="_BOPHAN", ThisKey="BoPhanKiemKe", IsForeignKey=true)]
		public BOPHAN BOPHAN
		{
			get
			{
				return this._BOPHAN.Entity;
			}
			set
			{
				BOPHAN previousValue = this._BOPHAN.Entity;
				if (((previousValue != value) 
							|| (this._BOPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BOPHAN.Entity = null;
						previousValue.KIEMKEs.Remove(this);
					}
					this._BOPHAN.Entity = value;
					if ((value != null))
					{
						value.KIEMKEs.Add(this);
						this._BoPhanKiemKe = value.BoPhanID;
					}
					else
					{
						this._BoPhanKiemKe = default(int);
					}
					this.SendPropertyChanged("BOPHAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAIDIENKIEMKEs(DAIDIENKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.KIEMKE = this;
		}
		
		private void detach_DAIDIENKIEMKEs(DAIDIENKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.KIEMKE = null;
		}
		
		private void attach_CTKIEMKEs(CTKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.KIEMKE = this;
		}
		
		private void detach_CTKIEMKEs(CTKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.KIEMKE = null;
		}
	}
	
	[Table(Name="dbo.GTTHIETBI")]
	public partial class GTTHIETBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _GTThietBiID;
		
		private long _ThietBiID;
		
		private string _MaCaBiet;
		
		private int _CTNhapID;
		
		private EntitySet<SOTHEODOI> _SOTHEODOIs;
		
		private EntityRef<THIETBI> _THIETBI;
		
		private EntityRef<CTPHIEUNHAP> _CTPHIEUNHAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGTThietBiIDChanging(long value);
    partial void OnGTThietBiIDChanged();
    partial void OnThietBiIDChanging(long value);
    partial void OnThietBiIDChanged();
    partial void OnMaCaBietChanging(string value);
    partial void OnMaCaBietChanged();
    partial void OnCTNhapIDChanging(int value);
    partial void OnCTNhapIDChanged();
    #endregion
		
		public GTTHIETBI()
		{
			this._SOTHEODOIs = new EntitySet<SOTHEODOI>(new Action<SOTHEODOI>(this.attach_SOTHEODOIs), new Action<SOTHEODOI>(this.detach_SOTHEODOIs));
			this._THIETBI = default(EntityRef<THIETBI>);
			this._CTPHIEUNHAP = default(EntityRef<CTPHIEUNHAP>);
			OnCreated();
		}
		
		[Column(Storage="_GTThietBiID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long GTThietBiID
		{
			get
			{
				return this._GTThietBiID;
			}
			set
			{
				if ((this._GTThietBiID != value))
				{
					this.OnGTThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._GTThietBiID = value;
					this.SendPropertyChanged("GTThietBiID");
					this.OnGTThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_ThietBiID", DbType="BigInt NOT NULL")]
		public long ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_MaCaBiet", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaCaBiet
		{
			get
			{
				return this._MaCaBiet;
			}
			set
			{
				if ((this._MaCaBiet != value))
				{
					this.OnMaCaBietChanging(value);
					this.SendPropertyChanging();
					this._MaCaBiet = value;
					this.SendPropertyChanged("MaCaBiet");
					this.OnMaCaBietChanged();
				}
			}
		}
		
		[Column(Storage="_CTNhapID", DbType="Int NOT NULL")]
		public int CTNhapID
		{
			get
			{
				return this._CTNhapID;
			}
			set
			{
				if ((this._CTNhapID != value))
				{
					if (this._CTPHIEUNHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCTNhapIDChanging(value);
					this.SendPropertyChanging();
					this._CTNhapID = value;
					this.SendPropertyChanged("CTNhapID");
					this.OnCTNhapIDChanged();
				}
			}
		}
		
		[Association(Name="GTTHIETBI_SOTHEODOI", Storage="_SOTHEODOIs", OtherKey="GTThietBiID")]
		public EntitySet<SOTHEODOI> SOTHEODOIs
		{
			get
			{
				return this._SOTHEODOIs;
			}
			set
			{
				this._SOTHEODOIs.Assign(value);
			}
		}
		
		[Association(Name="THIETBI_GTTHIETBI", Storage="_THIETBI", ThisKey="ThietBiID", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.GTTHIETBIs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.GTTHIETBIs.Add(this);
						this._ThietBiID = value.ThietBiID;
					}
					else
					{
						this._ThietBiID = default(long);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		[Association(Name="CTPHIEUNHAP_GTTHIETBI", Storage="_CTPHIEUNHAP", ThisKey="CTNhapID", IsForeignKey=true)]
		public CTPHIEUNHAP CTPHIEUNHAP
		{
			get
			{
				return this._CTPHIEUNHAP.Entity;
			}
			set
			{
				CTPHIEUNHAP previousValue = this._CTPHIEUNHAP.Entity;
				if (((previousValue != value) 
							|| (this._CTPHIEUNHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTPHIEUNHAP.Entity = null;
						previousValue.GTTHIETBIs.Remove(this);
					}
					this._CTPHIEUNHAP.Entity = value;
					if ((value != null))
					{
						value.GTTHIETBIs.Add(this);
						this._CTNhapID = value.CTNhapID;
					}
					else
					{
						this._CTNhapID = default(int);
					}
					this.SendPropertyChanged("CTPHIEUNHAP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.GTTHIETBI = this;
		}
		
		private void detach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.GTTHIETBI = null;
		}
	}
	
	[Table(Name="dbo.SOTHEODOI")]
	public partial class SOTHEODOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _TheoDoiID;
		
		private int _DonViSD;
		
		private int _BoPhanSD;
		
		private long _GTThietBiID;
		
		private int _TinhTrang;
		
		private string _HienTrang;
		
		private EntitySet<CTBANGIAO> _CTBANGIAOs;
		
		private EntitySet<CTTHANHLY> _CTTHANHLies;
		
		private EntitySet<CTKIEMKE> _CTKIEMKEs;
		
		private EntityRef<DONVI> _DONVI;
		
		private EntityRef<BOPHAN> _BOPHAN;
		
		private EntityRef<GTTHIETBI> _GTTHIETBI;
		
		private EntityRef<TINHTRANG> _TINHTRANG1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTheoDoiIDChanging(long value);
    partial void OnTheoDoiIDChanged();
    partial void OnDonViSDChanging(int value);
    partial void OnDonViSDChanged();
    partial void OnBoPhanSDChanging(int value);
    partial void OnBoPhanSDChanged();
    partial void OnGTThietBiIDChanging(long value);
    partial void OnGTThietBiIDChanged();
    partial void OnTinhTrangChanging(int value);
    partial void OnTinhTrangChanged();
    partial void OnHienTrangChanging(string value);
    partial void OnHienTrangChanged();
    #endregion
		
		public SOTHEODOI()
		{
			this._CTBANGIAOs = new EntitySet<CTBANGIAO>(new Action<CTBANGIAO>(this.attach_CTBANGIAOs), new Action<CTBANGIAO>(this.detach_CTBANGIAOs));
			this._CTTHANHLies = new EntitySet<CTTHANHLY>(new Action<CTTHANHLY>(this.attach_CTTHANHLies), new Action<CTTHANHLY>(this.detach_CTTHANHLies));
			this._CTKIEMKEs = new EntitySet<CTKIEMKE>(new Action<CTKIEMKE>(this.attach_CTKIEMKEs), new Action<CTKIEMKE>(this.detach_CTKIEMKEs));
			this._DONVI = default(EntityRef<DONVI>);
			this._BOPHAN = default(EntityRef<BOPHAN>);
			this._GTTHIETBI = default(EntityRef<GTTHIETBI>);
			this._TINHTRANG1 = default(EntityRef<TINHTRANG>);
			OnCreated();
		}
		
		[Column(Storage="_TheoDoiID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long TheoDoiID
		{
			get
			{
				return this._TheoDoiID;
			}
			set
			{
				if ((this._TheoDoiID != value))
				{
					this.OnTheoDoiIDChanging(value);
					this.SendPropertyChanging();
					this._TheoDoiID = value;
					this.SendPropertyChanged("TheoDoiID");
					this.OnTheoDoiIDChanged();
				}
			}
		}
		
		[Column(Storage="_DonViSD", DbType="Int NOT NULL")]
		public int DonViSD
		{
			get
			{
				return this._DonViSD;
			}
			set
			{
				if ((this._DonViSD != value))
				{
					if (this._DONVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonViSDChanging(value);
					this.SendPropertyChanging();
					this._DonViSD = value;
					this.SendPropertyChanged("DonViSD");
					this.OnDonViSDChanged();
				}
			}
		}
		
		[Column(Storage="_BoPhanSD", DbType="Int NOT NULL")]
		public int BoPhanSD
		{
			get
			{
				return this._BoPhanSD;
			}
			set
			{
				if ((this._BoPhanSD != value))
				{
					if (this._BOPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoPhanSDChanging(value);
					this.SendPropertyChanging();
					this._BoPhanSD = value;
					this.SendPropertyChanged("BoPhanSD");
					this.OnBoPhanSDChanged();
				}
			}
		}
		
		[Column(Storage="_GTThietBiID", DbType="BigInt NOT NULL")]
		public long GTThietBiID
		{
			get
			{
				return this._GTThietBiID;
			}
			set
			{
				if ((this._GTThietBiID != value))
				{
					if (this._GTTHIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGTThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._GTThietBiID = value;
					this.SendPropertyChanged("GTThietBiID");
					this.OnGTThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrang", DbType="Int NOT NULL")]
		public int TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					if (this._TINHTRANG1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[Column(Storage="_HienTrang", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HienTrang
		{
			get
			{
				return this._HienTrang;
			}
			set
			{
				if ((this._HienTrang != value))
				{
					this.OnHienTrangChanging(value);
					this.SendPropertyChanging();
					this._HienTrang = value;
					this.SendPropertyChanged("HienTrang");
					this.OnHienTrangChanged();
				}
			}
		}
		
		[Association(Name="SOTHEODOI_CTBANGIAO", Storage="_CTBANGIAOs", ThisKey="GTThietBiID", OtherKey="GTThietBiID")]
		public EntitySet<CTBANGIAO> CTBANGIAOs
		{
			get
			{
				return this._CTBANGIAOs;
			}
			set
			{
				this._CTBANGIAOs.Assign(value);
			}
		}
		
		[Association(Name="SOTHEODOI_CTTHANHLY", Storage="_CTTHANHLies", ThisKey="GTThietBiID", OtherKey="GTThietBiID")]
		public EntitySet<CTTHANHLY> CTTHANHLies
		{
			get
			{
				return this._CTTHANHLies;
			}
			set
			{
				this._CTTHANHLies.Assign(value);
			}
		}
		
		[Association(Name="SOTHEODOI_CTKIEMKE", Storage="_CTKIEMKEs", ThisKey="GTThietBiID", OtherKey="GTThietBiID")]
		public EntitySet<CTKIEMKE> CTKIEMKEs
		{
			get
			{
				return this._CTKIEMKEs;
			}
			set
			{
				this._CTKIEMKEs.Assign(value);
			}
		}
		
		[Association(Name="DONVI_SOTHEODOI", Storage="_DONVI", ThisKey="DonViSD", IsForeignKey=true)]
		public DONVI DONVI
		{
			get
			{
				return this._DONVI.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI.Entity;
				if (((previousValue != value) 
							|| (this._DONVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI.Entity = null;
						previousValue.SOTHEODOIs.Remove(this);
					}
					this._DONVI.Entity = value;
					if ((value != null))
					{
						value.SOTHEODOIs.Add(this);
						this._DonViSD = value.DonViID;
					}
					else
					{
						this._DonViSD = default(int);
					}
					this.SendPropertyChanged("DONVI");
				}
			}
		}
		
		[Association(Name="BOPHAN_SOTHEODOI", Storage="_BOPHAN", ThisKey="BoPhanSD", IsForeignKey=true)]
		public BOPHAN BOPHAN
		{
			get
			{
				return this._BOPHAN.Entity;
			}
			set
			{
				BOPHAN previousValue = this._BOPHAN.Entity;
				if (((previousValue != value) 
							|| (this._BOPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BOPHAN.Entity = null;
						previousValue.SOTHEODOIs.Remove(this);
					}
					this._BOPHAN.Entity = value;
					if ((value != null))
					{
						value.SOTHEODOIs.Add(this);
						this._BoPhanSD = value.BoPhanID;
					}
					else
					{
						this._BoPhanSD = default(int);
					}
					this.SendPropertyChanged("BOPHAN");
				}
			}
		}
		
		[Association(Name="GTTHIETBI_SOTHEODOI", Storage="_GTTHIETBI", ThisKey="GTThietBiID", IsForeignKey=true)]
		public GTTHIETBI GTTHIETBI
		{
			get
			{
				return this._GTTHIETBI.Entity;
			}
			set
			{
				GTTHIETBI previousValue = this._GTTHIETBI.Entity;
				if (((previousValue != value) 
							|| (this._GTTHIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GTTHIETBI.Entity = null;
						previousValue.SOTHEODOIs.Remove(this);
					}
					this._GTTHIETBI.Entity = value;
					if ((value != null))
					{
						value.SOTHEODOIs.Add(this);
						this._GTThietBiID = value.GTThietBiID;
					}
					else
					{
						this._GTThietBiID = default(long);
					}
					this.SendPropertyChanged("GTTHIETBI");
				}
			}
		}
		
		[Association(Name="TINHTRANG_SOTHEODOI", Storage="_TINHTRANG1", ThisKey="TinhTrang", IsForeignKey=true)]
		public TINHTRANG TINHTRANG1
		{
			get
			{
				return this._TINHTRANG1.Entity;
			}
			set
			{
				TINHTRANG previousValue = this._TINHTRANG1.Entity;
				if (((previousValue != value) 
							|| (this._TINHTRANG1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINHTRANG1.Entity = null;
						previousValue.SOTHEODOIs.Remove(this);
					}
					this._TINHTRANG1.Entity = value;
					if ((value != null))
					{
						value.SOTHEODOIs.Add(this);
						this._TinhTrang = value.TinhTrangID;
					}
					else
					{
						this._TinhTrang = default(int);
					}
					this.SendPropertyChanged("TINHTRANG1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTBANGIAOs(CTBANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.SOTHEODOI = this;
		}
		
		private void detach_CTBANGIAOs(CTBANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.SOTHEODOI = null;
		}
		
		private void attach_CTTHANHLies(CTTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.SOTHEODOI = this;
		}
		
		private void detach_CTTHANHLies(CTTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.SOTHEODOI = null;
		}
		
		private void attach_CTKIEMKEs(CTKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.SOTHEODOI = this;
		}
		
		private void detach_CTKIEMKEs(CTKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.SOTHEODOI = null;
		}
	}
	
	[Table(Name="dbo.TINHTRANG")]
	public partial class TINHTRANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TinhTrangID;
		
		private string _TenTinhTrang;
		
		private bool _MacDinh;
		
		private string _DienGiai;
		
		private bool _TrangThai;
		
		private EntitySet<THUHOI> _THUHOIs;
		
		private EntitySet<SOTHEODOI> _SOTHEODOIs;
		
		private EntitySet<CTKIEMKE> _CTKIEMKEs;
		
		private EntitySet<CTKIEMKE> _CTKIEMKEs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTinhTrangIDChanging(int value);
    partial void OnTinhTrangIDChanged();
    partial void OnTenTinhTrangChanging(string value);
    partial void OnTenTinhTrangChanged();
    partial void OnMacDinhChanging(bool value);
    partial void OnMacDinhChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    partial void OnTrangThaiChanging(bool value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public TINHTRANG()
		{
			this._THUHOIs = new EntitySet<THUHOI>(new Action<THUHOI>(this.attach_THUHOIs), new Action<THUHOI>(this.detach_THUHOIs));
			this._SOTHEODOIs = new EntitySet<SOTHEODOI>(new Action<SOTHEODOI>(this.attach_SOTHEODOIs), new Action<SOTHEODOI>(this.detach_SOTHEODOIs));
			this._CTKIEMKEs = new EntitySet<CTKIEMKE>(new Action<CTKIEMKE>(this.attach_CTKIEMKEs), new Action<CTKIEMKE>(this.detach_CTKIEMKEs));
			this._CTKIEMKEs1 = new EntitySet<CTKIEMKE>(new Action<CTKIEMKE>(this.attach_CTKIEMKEs1), new Action<CTKIEMKE>(this.detach_CTKIEMKEs1));
			OnCreated();
		}
		
		[Column(Storage="_TinhTrangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TinhTrangID
		{
			get
			{
				return this._TinhTrangID;
			}
			set
			{
				if ((this._TinhTrangID != value))
				{
					this.OnTinhTrangIDChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangID = value;
					this.SendPropertyChanged("TinhTrangID");
					this.OnTinhTrangIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenTinhTrang", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenTinhTrang
		{
			get
			{
				return this._TenTinhTrang;
			}
			set
			{
				if ((this._TenTinhTrang != value))
				{
					this.OnTenTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TenTinhTrang = value;
					this.SendPropertyChanged("TenTinhTrang");
					this.OnTenTinhTrangChanged();
				}
			}
		}
		
		[Column(Storage="_MacDinh", DbType="Bit NOT NULL")]
		public bool MacDinh
		{
			get
			{
				return this._MacDinh;
			}
			set
			{
				if ((this._MacDinh != value))
				{
					this.OnMacDinhChanging(value);
					this.SendPropertyChanging();
					this._MacDinh = value;
					this.SendPropertyChanged("MacDinh");
					this.OnMacDinhChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiai", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[Column(Storage="_TrangThai", DbType="Bit NOT NULL")]
		public bool TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[Association(Name="TINHTRANG_THUHOI", Storage="_THUHOIs", OtherKey="LiDoThuHoi")]
		public EntitySet<THUHOI> THUHOIs
		{
			get
			{
				return this._THUHOIs;
			}
			set
			{
				this._THUHOIs.Assign(value);
			}
		}
		
		[Association(Name="TINHTRANG_SOTHEODOI", Storage="_SOTHEODOIs", OtherKey="TinhTrang")]
		public EntitySet<SOTHEODOI> SOTHEODOIs
		{
			get
			{
				return this._SOTHEODOIs;
			}
			set
			{
				this._SOTHEODOIs.Assign(value);
			}
		}
		
		[Association(Name="TINHTRANG_CTKIEMKE", Storage="_CTKIEMKEs", OtherKey="TinhTrang0")]
		public EntitySet<CTKIEMKE> CTKIEMKEs
		{
			get
			{
				return this._CTKIEMKEs;
			}
			set
			{
				this._CTKIEMKEs.Assign(value);
			}
		}
		
		[Association(Name="TINHTRANG_CTKIEMKE1", Storage="_CTKIEMKEs1", OtherKey="TinhTrang1")]
		public EntitySet<CTKIEMKE> CTKIEMKEs1
		{
			get
			{
				return this._CTKIEMKEs1;
			}
			set
			{
				this._CTKIEMKEs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THUHOIs(THUHOI entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANG = this;
		}
		
		private void detach_THUHOIs(THUHOI entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANG = null;
		}
		
		private void attach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANG1 = this;
		}
		
		private void detach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANG1 = null;
		}
		
		private void attach_CTKIEMKEs(CTKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANG = this;
		}
		
		private void detach_CTKIEMKEs(CTKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANG = null;
		}
		
		private void attach_CTKIEMKEs1(CTKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANG2 = this;
		}
		
		private void detach_CTKIEMKEs1(CTKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANG2 = null;
		}
	}
	
	[Table(Name="dbo.CTTHANHLY")]
	public partial class CTTHANHLY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CTThanhLyID;
		
		private int _ThanhLyID;
		
		private long _GTThietBiID;
		
		private decimal _GiaTriThanhLy;
		
		private EntityRef<THANHLY> _THANHLY;
		
		private EntityRef<SOTHEODOI> _SOTHEODOI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCTThanhLyIDChanging(int value);
    partial void OnCTThanhLyIDChanged();
    partial void OnThanhLyIDChanging(int value);
    partial void OnThanhLyIDChanged();
    partial void OnGTThietBiIDChanging(long value);
    partial void OnGTThietBiIDChanged();
    partial void OnGiaTriThanhLyChanging(decimal value);
    partial void OnGiaTriThanhLyChanged();
    #endregion
		
		public CTTHANHLY()
		{
			this._THANHLY = default(EntityRef<THANHLY>);
			this._SOTHEODOI = default(EntityRef<SOTHEODOI>);
			OnCreated();
		}
		
		[Column(Storage="_CTThanhLyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CTThanhLyID
		{
			get
			{
				return this._CTThanhLyID;
			}
			set
			{
				if ((this._CTThanhLyID != value))
				{
					this.OnCTThanhLyIDChanging(value);
					this.SendPropertyChanging();
					this._CTThanhLyID = value;
					this.SendPropertyChanged("CTThanhLyID");
					this.OnCTThanhLyIDChanged();
				}
			}
		}
		
		[Column(Storage="_ThanhLyID", DbType="Int NOT NULL")]
		public int ThanhLyID
		{
			get
			{
				return this._ThanhLyID;
			}
			set
			{
				if ((this._ThanhLyID != value))
				{
					if (this._THANHLY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThanhLyIDChanging(value);
					this.SendPropertyChanging();
					this._ThanhLyID = value;
					this.SendPropertyChanged("ThanhLyID");
					this.OnThanhLyIDChanged();
				}
			}
		}
		
		[Column(Storage="_GTThietBiID", DbType="BigInt NOT NULL")]
		public long GTThietBiID
		{
			get
			{
				return this._GTThietBiID;
			}
			set
			{
				if ((this._GTThietBiID != value))
				{
					if (this._SOTHEODOI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGTThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._GTThietBiID = value;
					this.SendPropertyChanged("GTThietBiID");
					this.OnGTThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_GiaTriThanhLy", DbType="Money NOT NULL")]
		public decimal GiaTriThanhLy
		{
			get
			{
				return this._GiaTriThanhLy;
			}
			set
			{
				if ((this._GiaTriThanhLy != value))
				{
					this.OnGiaTriThanhLyChanging(value);
					this.SendPropertyChanging();
					this._GiaTriThanhLy = value;
					this.SendPropertyChanged("GiaTriThanhLy");
					this.OnGiaTriThanhLyChanged();
				}
			}
		}
		
		[Association(Name="THANHLY_CTTHANHLY", Storage="_THANHLY", ThisKey="ThanhLyID", IsForeignKey=true)]
		public THANHLY THANHLY
		{
			get
			{
				return this._THANHLY.Entity;
			}
			set
			{
				THANHLY previousValue = this._THANHLY.Entity;
				if (((previousValue != value) 
							|| (this._THANHLY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THANHLY.Entity = null;
						previousValue.CTTHANHLies.Remove(this);
					}
					this._THANHLY.Entity = value;
					if ((value != null))
					{
						value.CTTHANHLies.Add(this);
						this._ThanhLyID = value.ThanhLyID;
					}
					else
					{
						this._ThanhLyID = default(int);
					}
					this.SendPropertyChanged("THANHLY");
				}
			}
		}
		
		[Association(Name="SOTHEODOI_CTTHANHLY", Storage="_SOTHEODOI", ThisKey="GTThietBiID", OtherKey="GTThietBiID", IsForeignKey=true)]
		public SOTHEODOI SOTHEODOI
		{
			get
			{
				return this._SOTHEODOI.Entity;
			}
			set
			{
				SOTHEODOI previousValue = this._SOTHEODOI.Entity;
				if (((previousValue != value) 
							|| (this._SOTHEODOI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SOTHEODOI.Entity = null;
						previousValue.CTTHANHLies.Remove(this);
					}
					this._SOTHEODOI.Entity = value;
					if ((value != null))
					{
						value.CTTHANHLies.Add(this);
						this._GTThietBiID = value.GTThietBiID;
					}
					else
					{
						this._GTThietBiID = default(long);
					}
					this.SendPropertyChanged("SOTHEODOI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CTKIEMKE")]
	public partial class CTKIEMKE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CTKiemKeID;
		
		private int _KiemKeID;
		
		private long _GTThietBiID;
		
		private int _TinhTrang0;
		
		private int _TinhTrang1;
		
		private string _HienTrang0;
		
		private string _HienTrang1;
		
		private EntityRef<KIEMKE> _KIEMKE;
		
		private EntityRef<TINHTRANG> _TINHTRANG;
		
		private EntityRef<TINHTRANG> _TINHTRANG2;
		
		private EntityRef<SOTHEODOI> _SOTHEODOI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCTKiemKeIDChanging(int value);
    partial void OnCTKiemKeIDChanged();
    partial void OnKiemKeIDChanging(int value);
    partial void OnKiemKeIDChanged();
    partial void OnGTThietBiIDChanging(long value);
    partial void OnGTThietBiIDChanged();
    partial void OnTinhTrang0Changing(int value);
    partial void OnTinhTrang0Changed();
    partial void OnTinhTrang1Changing(int value);
    partial void OnTinhTrang1Changed();
    partial void OnHienTrang0Changing(string value);
    partial void OnHienTrang0Changed();
    partial void OnHienTrang1Changing(string value);
    partial void OnHienTrang1Changed();
    #endregion
		
		public CTKIEMKE()
		{
			this._KIEMKE = default(EntityRef<KIEMKE>);
			this._TINHTRANG = default(EntityRef<TINHTRANG>);
			this._TINHTRANG2 = default(EntityRef<TINHTRANG>);
			this._SOTHEODOI = default(EntityRef<SOTHEODOI>);
			OnCreated();
		}
		
		[Column(Storage="_CTKiemKeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CTKiemKeID
		{
			get
			{
				return this._CTKiemKeID;
			}
			set
			{
				if ((this._CTKiemKeID != value))
				{
					this.OnCTKiemKeIDChanging(value);
					this.SendPropertyChanging();
					this._CTKiemKeID = value;
					this.SendPropertyChanged("CTKiemKeID");
					this.OnCTKiemKeIDChanged();
				}
			}
		}
		
		[Column(Storage="_KiemKeID", DbType="Int NOT NULL")]
		public int KiemKeID
		{
			get
			{
				return this._KiemKeID;
			}
			set
			{
				if ((this._KiemKeID != value))
				{
					if (this._KIEMKE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKiemKeIDChanging(value);
					this.SendPropertyChanging();
					this._KiemKeID = value;
					this.SendPropertyChanged("KiemKeID");
					this.OnKiemKeIDChanged();
				}
			}
		}
		
		[Column(Storage="_GTThietBiID", DbType="BigInt NOT NULL")]
		public long GTThietBiID
		{
			get
			{
				return this._GTThietBiID;
			}
			set
			{
				if ((this._GTThietBiID != value))
				{
					if (this._SOTHEODOI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGTThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._GTThietBiID = value;
					this.SendPropertyChanged("GTThietBiID");
					this.OnGTThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrang0", DbType="Int NOT NULL")]
		public int TinhTrang0
		{
			get
			{
				return this._TinhTrang0;
			}
			set
			{
				if ((this._TinhTrang0 != value))
				{
					if (this._TINHTRANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhTrang0Changing(value);
					this.SendPropertyChanging();
					this._TinhTrang0 = value;
					this.SendPropertyChanged("TinhTrang0");
					this.OnTinhTrang0Changed();
				}
			}
		}
		
		[Column(Storage="_TinhTrang1", DbType="Int NOT NULL")]
		public int TinhTrang1
		{
			get
			{
				return this._TinhTrang1;
			}
			set
			{
				if ((this._TinhTrang1 != value))
				{
					if (this._TINHTRANG2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhTrang1Changing(value);
					this.SendPropertyChanging();
					this._TinhTrang1 = value;
					this.SendPropertyChanged("TinhTrang1");
					this.OnTinhTrang1Changed();
				}
			}
		}
		
		[Column(Storage="_HienTrang0", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HienTrang0
		{
			get
			{
				return this._HienTrang0;
			}
			set
			{
				if ((this._HienTrang0 != value))
				{
					this.OnHienTrang0Changing(value);
					this.SendPropertyChanging();
					this._HienTrang0 = value;
					this.SendPropertyChanged("HienTrang0");
					this.OnHienTrang0Changed();
				}
			}
		}
		
		[Column(Storage="_HienTrang1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HienTrang1
		{
			get
			{
				return this._HienTrang1;
			}
			set
			{
				if ((this._HienTrang1 != value))
				{
					this.OnHienTrang1Changing(value);
					this.SendPropertyChanging();
					this._HienTrang1 = value;
					this.SendPropertyChanged("HienTrang1");
					this.OnHienTrang1Changed();
				}
			}
		}
		
		[Association(Name="KIEMKE_CTKIEMKE", Storage="_KIEMKE", ThisKey="KiemKeID", IsForeignKey=true)]
		public KIEMKE KIEMKE
		{
			get
			{
				return this._KIEMKE.Entity;
			}
			set
			{
				KIEMKE previousValue = this._KIEMKE.Entity;
				if (((previousValue != value) 
							|| (this._KIEMKE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KIEMKE.Entity = null;
						previousValue.CTKIEMKEs.Remove(this);
					}
					this._KIEMKE.Entity = value;
					if ((value != null))
					{
						value.CTKIEMKEs.Add(this);
						this._KiemKeID = value.KiemKeID;
					}
					else
					{
						this._KiemKeID = default(int);
					}
					this.SendPropertyChanged("KIEMKE");
				}
			}
		}
		
		[Association(Name="TINHTRANG_CTKIEMKE", Storage="_TINHTRANG", ThisKey="TinhTrang0", IsForeignKey=true)]
		public TINHTRANG TINHTRANG
		{
			get
			{
				return this._TINHTRANG.Entity;
			}
			set
			{
				TINHTRANG previousValue = this._TINHTRANG.Entity;
				if (((previousValue != value) 
							|| (this._TINHTRANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINHTRANG.Entity = null;
						previousValue.CTKIEMKEs.Remove(this);
					}
					this._TINHTRANG.Entity = value;
					if ((value != null))
					{
						value.CTKIEMKEs.Add(this);
						this._TinhTrang0 = value.TinhTrangID;
					}
					else
					{
						this._TinhTrang0 = default(int);
					}
					this.SendPropertyChanged("TINHTRANG");
				}
			}
		}
		
		[Association(Name="TINHTRANG_CTKIEMKE1", Storage="_TINHTRANG2", ThisKey="TinhTrang1", IsForeignKey=true)]
		public TINHTRANG TINHTRANG2
		{
			get
			{
				return this._TINHTRANG2.Entity;
			}
			set
			{
				TINHTRANG previousValue = this._TINHTRANG2.Entity;
				if (((previousValue != value) 
							|| (this._TINHTRANG2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINHTRANG2.Entity = null;
						previousValue.CTKIEMKEs1.Remove(this);
					}
					this._TINHTRANG2.Entity = value;
					if ((value != null))
					{
						value.CTKIEMKEs1.Add(this);
						this._TinhTrang1 = value.TinhTrangID;
					}
					else
					{
						this._TinhTrang1 = default(int);
					}
					this.SendPropertyChanged("TINHTRANG2");
				}
			}
		}
		
		[Association(Name="SOTHEODOI_CTKIEMKE", Storage="_SOTHEODOI", ThisKey="GTThietBiID", OtherKey="GTThietBiID", IsForeignKey=true)]
		public SOTHEODOI SOTHEODOI
		{
			get
			{
				return this._SOTHEODOI.Entity;
			}
			set
			{
				SOTHEODOI previousValue = this._SOTHEODOI.Entity;
				if (((previousValue != value) 
							|| (this._SOTHEODOI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SOTHEODOI.Entity = null;
						previousValue.CTKIEMKEs.Remove(this);
					}
					this._SOTHEODOI.Entity = value;
					if ((value != null))
					{
						value.CTKIEMKEs.Add(this);
						this._GTThietBiID = value.GTThietBiID;
					}
					else
					{
						this._GTThietBiID = default(long);
					}
					this.SendPropertyChanged("SOTHEODOI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SOTHEODOI_DONVIResult
	{
		
		private long _ThietBiID;
		
		private string _TenThietBi;
		
		private System.Nullable<int> _SL;
		
		public SOTHEODOI_DONVIResult()
		{
		}
		
		[Column(Storage="_ThietBiID", DbType="BigInt NOT NULL")]
		public long ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					this._ThietBiID = value;
				}
			}
		}
		
		[Column(Storage="_TenThietBi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenThietBi
		{
			get
			{
				return this._TenThietBi;
			}
			set
			{
				if ((this._TenThietBi != value))
				{
					this._TenThietBi = value;
				}
			}
		}
		
		[Column(Storage="_SL", DbType="Int")]
		public System.Nullable<int> SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this._SL = value;
				}
			}
		}
	}
	
	public partial class PRO_THONGKE_DONVIResult
	{
		
		private string _TenDonvi;
		
		private string _TenTinhTrang;
		
		private System.Nullable<int> _SL;
		
		public PRO_THONGKE_DONVIResult()
		{
		}
		
		[Column(Storage="_TenDonvi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDonvi
		{
			get
			{
				return this._TenDonvi;
			}
			set
			{
				if ((this._TenDonvi != value))
				{
					this._TenDonvi = value;
				}
			}
		}
		
		[Column(Storage="_TenTinhTrang", DbType="NVarChar(100)")]
		public string TenTinhTrang
		{
			get
			{
				return this._TenTinhTrang;
			}
			set
			{
				if ((this._TenTinhTrang != value))
				{
					this._TenTinhTrang = value;
				}
			}
		}
		
		[Column(Storage="_SL", DbType="Int")]
		public System.Nullable<int> SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this._SL = value;
				}
			}
		}
	}
	
	public partial class SOTHEODOI_DONVI_BOPHAN_THIETBIResult
	{
		
		private string _TenThietBi;
		
		private long _GTThietBiID;
		
		private string _MaCaBiet;
		
		private decimal _DonGia;
		
		private int _BoPhanSD;
		
		private string _TenBoPhan;
		
		private int _DonViSD;
		
		private string _TenDonVi;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private short _HanBaoHanh;
		
		private string _TenTinhTrang;
		
		private System.Nullable<int> _TinhTrangID;
		
		private string _HienTrang;
		
		public SOTHEODOI_DONVI_BOPHAN_THIETBIResult()
		{
		}
		
		[Column(Storage="_TenThietBi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenThietBi
		{
			get
			{
				return this._TenThietBi;
			}
			set
			{
				if ((this._TenThietBi != value))
				{
					this._TenThietBi = value;
				}
			}
		}
		
		[Column(Storage="_GTThietBiID", DbType="BigInt NOT NULL")]
		public long GTThietBiID
		{
			get
			{
				return this._GTThietBiID;
			}
			set
			{
				if ((this._GTThietBiID != value))
				{
					this._GTThietBiID = value;
				}
			}
		}
		
		[Column(Storage="_MaCaBiet", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaCaBiet
		{
			get
			{
				return this._MaCaBiet;
			}
			set
			{
				if ((this._MaCaBiet != value))
				{
					this._MaCaBiet = value;
				}
			}
		}
		
		[Column(Storage="_DonGia", DbType="Money NOT NULL")]
		public decimal DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this._DonGia = value;
				}
			}
		}
		
		[Column(Storage="_BoPhanSD", DbType="Int NOT NULL")]
		public int BoPhanSD
		{
			get
			{
				return this._BoPhanSD;
			}
			set
			{
				if ((this._BoPhanSD != value))
				{
					this._BoPhanSD = value;
				}
			}
		}
		
		[Column(Storage="_TenBoPhan", DbType="NVarChar(100)")]
		public string TenBoPhan
		{
			get
			{
				return this._TenBoPhan;
			}
			set
			{
				if ((this._TenBoPhan != value))
				{
					this._TenBoPhan = value;
				}
			}
		}
		
		[Column(Storage="_DonViSD", DbType="Int NOT NULL")]
		public int DonViSD
		{
			get
			{
				return this._DonViSD;
			}
			set
			{
				if ((this._DonViSD != value))
				{
					this._DonViSD = value;
				}
			}
		}
		
		[Column(Storage="_TenDonVi", DbType="NVarChar(100)")]
		public string TenDonVi
		{
			get
			{
				return this._TenDonVi;
			}
			set
			{
				if ((this._TenDonVi != value))
				{
					this._TenDonVi = value;
				}
			}
		}
		
		[Column(Storage="_NgayNhap", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this._NgayNhap = value;
				}
			}
		}
		
		[Column(Storage="_HanBaoHanh", DbType="SmallInt NOT NULL")]
		public short HanBaoHanh
		{
			get
			{
				return this._HanBaoHanh;
			}
			set
			{
				if ((this._HanBaoHanh != value))
				{
					this._HanBaoHanh = value;
				}
			}
		}
		
		[Column(Storage="_TenTinhTrang", DbType="NVarChar(100)")]
		public string TenTinhTrang
		{
			get
			{
				return this._TenTinhTrang;
			}
			set
			{
				if ((this._TenTinhTrang != value))
				{
					this._TenTinhTrang = value;
				}
			}
		}
		
		[Column(Storage="_TinhTrangID", DbType="Int")]
		public System.Nullable<int> TinhTrangID
		{
			get
			{
				return this._TinhTrangID;
			}
			set
			{
				if ((this._TinhTrangID != value))
				{
					this._TinhTrangID = value;
				}
			}
		}
		
		[Column(Storage="_HienTrang", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HienTrang
		{
			get
			{
				return this._HienTrang;
			}
			set
			{
				if ((this._HienTrang != value))
				{
					this._HienTrang = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
