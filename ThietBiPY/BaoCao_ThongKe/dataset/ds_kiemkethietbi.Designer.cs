//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ThietBiPY.BaoCao_ThongKe.dataset {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ds_kiemkethietbi")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ds_kiemkethietbi : global::System.Data.DataSet {
        
        private CTKIEMKEDataTable tableCTKIEMKE;
        
        private DAIDIENKIEMKEDataTable tableDAIDIENKIEMKE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ds_kiemkethietbi() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ds_kiemkethietbi(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CTKIEMKE"] != null)) {
                    base.Tables.Add(new CTKIEMKEDataTable(ds.Tables["CTKIEMKE"]));
                }
                if ((ds.Tables["DAIDIENKIEMKE"] != null)) {
                    base.Tables.Add(new DAIDIENKIEMKEDataTable(ds.Tables["DAIDIENKIEMKE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CTKIEMKEDataTable CTKIEMKE {
            get {
                return this.tableCTKIEMKE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DAIDIENKIEMKEDataTable DAIDIENKIEMKE {
            get {
                return this.tableDAIDIENKIEMKE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ds_kiemkethietbi cln = ((ds_kiemkethietbi)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CTKIEMKE"] != null)) {
                    base.Tables.Add(new CTKIEMKEDataTable(ds.Tables["CTKIEMKE"]));
                }
                if ((ds.Tables["DAIDIENKIEMKE"] != null)) {
                    base.Tables.Add(new DAIDIENKIEMKEDataTable(ds.Tables["DAIDIENKIEMKE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCTKIEMKE = ((CTKIEMKEDataTable)(base.Tables["CTKIEMKE"]));
            if ((initTable == true)) {
                if ((this.tableCTKIEMKE != null)) {
                    this.tableCTKIEMKE.InitVars();
                }
            }
            this.tableDAIDIENKIEMKE = ((DAIDIENKIEMKEDataTable)(base.Tables["DAIDIENKIEMKE"]));
            if ((initTable == true)) {
                if ((this.tableDAIDIENKIEMKE != null)) {
                    this.tableDAIDIENKIEMKE.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ds_kiemkethietbi";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ds_kiemkethietbi.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCTKIEMKE = new CTKIEMKEDataTable();
            base.Tables.Add(this.tableCTKIEMKE);
            this.tableDAIDIENKIEMKE = new DAIDIENKIEMKEDataTable();
            base.Tables.Add(this.tableDAIDIENKIEMKE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCTKIEMKE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDAIDIENKIEMKE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ds_kiemkethietbi ds = new ds_kiemkethietbi();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CTKIEMKERowChangeEventHandler(object sender, CTKIEMKERowChangeEvent e);
        
        public delegate void DAIDIENKIEMKERowChangeEventHandler(object sender, DAIDIENKIEMKERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CTKIEMKEDataTable : global::System.Data.TypedTableBase<CTKIEMKERow> {
            
            private global::System.Data.DataColumn columnMaCaBiet;
            
            private global::System.Data.DataColumn columnMaThietBi;
            
            private global::System.Data.DataColumn columnSoHieu;
            
            private global::System.Data.DataColumn columnTenThietBi;
            
            private global::System.Data.DataColumn columnNgaySuDung;
            
            private global::System.Data.DataColumn columnBaoHanh;
            
            private global::System.Data.DataColumn columnTinhTrangSS;
            
            private global::System.Data.DataColumn columnTinhTrangKK;
            
            private global::System.Data.DataColumn columnHienTrangSS;
            
            private global::System.Data.DataColumn columnHienTrangKK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CTKIEMKEDataTable() {
                this.TableName = "CTKIEMKE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CTKIEMKEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CTKIEMKEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaCaBietColumn {
                get {
                    return this.columnMaCaBiet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaThietBiColumn {
                get {
                    return this.columnMaThietBi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SoHieuColumn {
                get {
                    return this.columnSoHieu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenThietBiColumn {
                get {
                    return this.columnTenThietBi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NgaySuDungColumn {
                get {
                    return this.columnNgaySuDung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaoHanhColumn {
                get {
                    return this.columnBaoHanh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TinhTrangSSColumn {
                get {
                    return this.columnTinhTrangSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TinhTrangKKColumn {
                get {
                    return this.columnTinhTrangKK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HienTrangSSColumn {
                get {
                    return this.columnHienTrangSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HienTrangKKColumn {
                get {
                    return this.columnHienTrangKK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CTKIEMKERow this[int index] {
                get {
                    return ((CTKIEMKERow)(this.Rows[index]));
                }
            }
            
            public event CTKIEMKERowChangeEventHandler CTKIEMKERowChanging;
            
            public event CTKIEMKERowChangeEventHandler CTKIEMKERowChanged;
            
            public event CTKIEMKERowChangeEventHandler CTKIEMKERowDeleting;
            
            public event CTKIEMKERowChangeEventHandler CTKIEMKERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCTKIEMKERow(CTKIEMKERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CTKIEMKERow AddCTKIEMKERow(string MaCaBiet, string MaThietBi, string SoHieu, string TenThietBi, string NgaySuDung, string BaoHanh, string TinhTrangSS, string TinhTrangKK, string HienTrangSS, string HienTrangKK) {
                CTKIEMKERow rowCTKIEMKERow = ((CTKIEMKERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MaCaBiet,
                        MaThietBi,
                        SoHieu,
                        TenThietBi,
                        NgaySuDung,
                        BaoHanh,
                        TinhTrangSS,
                        TinhTrangKK,
                        HienTrangSS,
                        HienTrangKK};
                rowCTKIEMKERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCTKIEMKERow);
                return rowCTKIEMKERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CTKIEMKEDataTable cln = ((CTKIEMKEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CTKIEMKEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaCaBiet = base.Columns["MaCaBiet"];
                this.columnMaThietBi = base.Columns["MaThietBi"];
                this.columnSoHieu = base.Columns["SoHieu"];
                this.columnTenThietBi = base.Columns["TenThietBi"];
                this.columnNgaySuDung = base.Columns["NgaySuDung"];
                this.columnBaoHanh = base.Columns["BaoHanh"];
                this.columnTinhTrangSS = base.Columns["TinhTrangSS"];
                this.columnTinhTrangKK = base.Columns["TinhTrangKK"];
                this.columnHienTrangSS = base.Columns["HienTrangSS"];
                this.columnHienTrangKK = base.Columns["HienTrangKK"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaCaBiet = new global::System.Data.DataColumn("MaCaBiet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaCaBiet);
                this.columnMaThietBi = new global::System.Data.DataColumn("MaThietBi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaThietBi);
                this.columnSoHieu = new global::System.Data.DataColumn("SoHieu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoHieu);
                this.columnTenThietBi = new global::System.Data.DataColumn("TenThietBi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenThietBi);
                this.columnNgaySuDung = new global::System.Data.DataColumn("NgaySuDung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgaySuDung);
                this.columnBaoHanh = new global::System.Data.DataColumn("BaoHanh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaoHanh);
                this.columnTinhTrangSS = new global::System.Data.DataColumn("TinhTrangSS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTinhTrangSS);
                this.columnTinhTrangKK = new global::System.Data.DataColumn("TinhTrangKK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTinhTrangKK);
                this.columnHienTrangSS = new global::System.Data.DataColumn("HienTrangSS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHienTrangSS);
                this.columnHienTrangKK = new global::System.Data.DataColumn("HienTrangKK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHienTrangKK);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CTKIEMKERow NewCTKIEMKERow() {
                return ((CTKIEMKERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CTKIEMKERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CTKIEMKERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CTKIEMKERowChanged != null)) {
                    this.CTKIEMKERowChanged(this, new CTKIEMKERowChangeEvent(((CTKIEMKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CTKIEMKERowChanging != null)) {
                    this.CTKIEMKERowChanging(this, new CTKIEMKERowChangeEvent(((CTKIEMKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CTKIEMKERowDeleted != null)) {
                    this.CTKIEMKERowDeleted(this, new CTKIEMKERowChangeEvent(((CTKIEMKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CTKIEMKERowDeleting != null)) {
                    this.CTKIEMKERowDeleting(this, new CTKIEMKERowChangeEvent(((CTKIEMKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCTKIEMKERow(CTKIEMKERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_kiemkethietbi ds = new ds_kiemkethietbi();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CTKIEMKEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DAIDIENKIEMKEDataTable : global::System.Data.TypedTableBase<DAIDIENKIEMKERow> {
            
            private global::System.Data.DataColumn columnHoTen;
            
            private global::System.Data.DataColumn columnChucVu;
            
            private global::System.Data.DataColumn columnQuyenKiemKe;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DAIDIENKIEMKEDataTable() {
                this.TableName = "DAIDIENKIEMKE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DAIDIENKIEMKEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DAIDIENKIEMKEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoTenColumn {
                get {
                    return this.columnHoTen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChucVuColumn {
                get {
                    return this.columnChucVu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuyenKiemKeColumn {
                get {
                    return this.columnQuyenKiemKe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DAIDIENKIEMKERow this[int index] {
                get {
                    return ((DAIDIENKIEMKERow)(this.Rows[index]));
                }
            }
            
            public event DAIDIENKIEMKERowChangeEventHandler DAIDIENKIEMKERowChanging;
            
            public event DAIDIENKIEMKERowChangeEventHandler DAIDIENKIEMKERowChanged;
            
            public event DAIDIENKIEMKERowChangeEventHandler DAIDIENKIEMKERowDeleting;
            
            public event DAIDIENKIEMKERowChangeEventHandler DAIDIENKIEMKERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDAIDIENKIEMKERow(DAIDIENKIEMKERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DAIDIENKIEMKERow AddDAIDIENKIEMKERow(string HoTen, string ChucVu, string QuyenKiemKe) {
                DAIDIENKIEMKERow rowDAIDIENKIEMKERow = ((DAIDIENKIEMKERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HoTen,
                        ChucVu,
                        QuyenKiemKe};
                rowDAIDIENKIEMKERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDAIDIENKIEMKERow);
                return rowDAIDIENKIEMKERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DAIDIENKIEMKEDataTable cln = ((DAIDIENKIEMKEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DAIDIENKIEMKEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHoTen = base.Columns["HoTen"];
                this.columnChucVu = base.Columns["ChucVu"];
                this.columnQuyenKiemKe = base.Columns["QuyenKiemKe"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHoTen = new global::System.Data.DataColumn("HoTen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoTen);
                this.columnChucVu = new global::System.Data.DataColumn("ChucVu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChucVu);
                this.columnQuyenKiemKe = new global::System.Data.DataColumn("QuyenKiemKe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuyenKiemKe);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DAIDIENKIEMKERow NewDAIDIENKIEMKERow() {
                return ((DAIDIENKIEMKERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DAIDIENKIEMKERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DAIDIENKIEMKERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DAIDIENKIEMKERowChanged != null)) {
                    this.DAIDIENKIEMKERowChanged(this, new DAIDIENKIEMKERowChangeEvent(((DAIDIENKIEMKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DAIDIENKIEMKERowChanging != null)) {
                    this.DAIDIENKIEMKERowChanging(this, new DAIDIENKIEMKERowChangeEvent(((DAIDIENKIEMKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DAIDIENKIEMKERowDeleted != null)) {
                    this.DAIDIENKIEMKERowDeleted(this, new DAIDIENKIEMKERowChangeEvent(((DAIDIENKIEMKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DAIDIENKIEMKERowDeleting != null)) {
                    this.DAIDIENKIEMKERowDeleting(this, new DAIDIENKIEMKERowChangeEvent(((DAIDIENKIEMKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDAIDIENKIEMKERow(DAIDIENKIEMKERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_kiemkethietbi ds = new ds_kiemkethietbi();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DAIDIENKIEMKEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CTKIEMKERow : global::System.Data.DataRow {
            
            private CTKIEMKEDataTable tableCTKIEMKE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CTKIEMKERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCTKIEMKE = ((CTKIEMKEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaCaBiet {
                get {
                    try {
                        return ((string)(this[this.tableCTKIEMKE.MaCaBietColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaCaBiet\' in table \'CTKIEMKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTKIEMKE.MaCaBietColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaThietBi {
                get {
                    try {
                        return ((string)(this[this.tableCTKIEMKE.MaThietBiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaThietBi\' in table \'CTKIEMKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTKIEMKE.MaThietBiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SoHieu {
                get {
                    try {
                        return ((string)(this[this.tableCTKIEMKE.SoHieuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SoHieu\' in table \'CTKIEMKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTKIEMKE.SoHieuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenThietBi {
                get {
                    try {
                        return ((string)(this[this.tableCTKIEMKE.TenThietBiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenThietBi\' in table \'CTKIEMKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTKIEMKE.TenThietBiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NgaySuDung {
                get {
                    try {
                        return ((string)(this[this.tableCTKIEMKE.NgaySuDungColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NgaySuDung\' in table \'CTKIEMKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTKIEMKE.NgaySuDungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BaoHanh {
                get {
                    try {
                        return ((string)(this[this.tableCTKIEMKE.BaoHanhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaoHanh\' in table \'CTKIEMKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTKIEMKE.BaoHanhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TinhTrangSS {
                get {
                    try {
                        return ((string)(this[this.tableCTKIEMKE.TinhTrangSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TinhTrangSS\' in table \'CTKIEMKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTKIEMKE.TinhTrangSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TinhTrangKK {
                get {
                    try {
                        return ((string)(this[this.tableCTKIEMKE.TinhTrangKKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TinhTrangKK\' in table \'CTKIEMKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTKIEMKE.TinhTrangKKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HienTrangSS {
                get {
                    try {
                        return ((string)(this[this.tableCTKIEMKE.HienTrangSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HienTrangSS\' in table \'CTKIEMKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTKIEMKE.HienTrangSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HienTrangKK {
                get {
                    try {
                        return ((string)(this[this.tableCTKIEMKE.HienTrangKKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HienTrangKK\' in table \'CTKIEMKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCTKIEMKE.HienTrangKKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaCaBietNull() {
                return this.IsNull(this.tableCTKIEMKE.MaCaBietColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaCaBietNull() {
                this[this.tableCTKIEMKE.MaCaBietColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaThietBiNull() {
                return this.IsNull(this.tableCTKIEMKE.MaThietBiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaThietBiNull() {
                this[this.tableCTKIEMKE.MaThietBiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoHieuNull() {
                return this.IsNull(this.tableCTKIEMKE.SoHieuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoHieuNull() {
                this[this.tableCTKIEMKE.SoHieuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenThietBiNull() {
                return this.IsNull(this.tableCTKIEMKE.TenThietBiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenThietBiNull() {
                this[this.tableCTKIEMKE.TenThietBiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgaySuDungNull() {
                return this.IsNull(this.tableCTKIEMKE.NgaySuDungColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgaySuDungNull() {
                this[this.tableCTKIEMKE.NgaySuDungColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaoHanhNull() {
                return this.IsNull(this.tableCTKIEMKE.BaoHanhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaoHanhNull() {
                this[this.tableCTKIEMKE.BaoHanhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTinhTrangSSNull() {
                return this.IsNull(this.tableCTKIEMKE.TinhTrangSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTinhTrangSSNull() {
                this[this.tableCTKIEMKE.TinhTrangSSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTinhTrangKKNull() {
                return this.IsNull(this.tableCTKIEMKE.TinhTrangKKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTinhTrangKKNull() {
                this[this.tableCTKIEMKE.TinhTrangKKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHienTrangSSNull() {
                return this.IsNull(this.tableCTKIEMKE.HienTrangSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHienTrangSSNull() {
                this[this.tableCTKIEMKE.HienTrangSSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHienTrangKKNull() {
                return this.IsNull(this.tableCTKIEMKE.HienTrangKKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHienTrangKKNull() {
                this[this.tableCTKIEMKE.HienTrangKKColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DAIDIENKIEMKERow : global::System.Data.DataRow {
            
            private DAIDIENKIEMKEDataTable tableDAIDIENKIEMKE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DAIDIENKIEMKERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDAIDIENKIEMKE = ((DAIDIENKIEMKEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HoTen {
                get {
                    try {
                        return ((string)(this[this.tableDAIDIENKIEMKE.HoTenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoTen\' in table \'DAIDIENKIEMKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDAIDIENKIEMKE.HoTenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChucVu {
                get {
                    try {
                        return ((string)(this[this.tableDAIDIENKIEMKE.ChucVuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChucVu\' in table \'DAIDIENKIEMKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDAIDIENKIEMKE.ChucVuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QuyenKiemKe {
                get {
                    try {
                        return ((string)(this[this.tableDAIDIENKIEMKE.QuyenKiemKeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuyenKiemKe\' in table \'DAIDIENKIEMKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDAIDIENKIEMKE.QuyenKiemKeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHoTenNull() {
                return this.IsNull(this.tableDAIDIENKIEMKE.HoTenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHoTenNull() {
                this[this.tableDAIDIENKIEMKE.HoTenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChucVuNull() {
                return this.IsNull(this.tableDAIDIENKIEMKE.ChucVuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChucVuNull() {
                this[this.tableDAIDIENKIEMKE.ChucVuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuyenKiemKeNull() {
                return this.IsNull(this.tableDAIDIENKIEMKE.QuyenKiemKeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuyenKiemKeNull() {
                this[this.tableDAIDIENKIEMKE.QuyenKiemKeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CTKIEMKERowChangeEvent : global::System.EventArgs {
            
            private CTKIEMKERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CTKIEMKERowChangeEvent(CTKIEMKERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CTKIEMKERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DAIDIENKIEMKERowChangeEvent : global::System.EventArgs {
            
            private DAIDIENKIEMKERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DAIDIENKIEMKERowChangeEvent(DAIDIENKIEMKERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DAIDIENKIEMKERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591